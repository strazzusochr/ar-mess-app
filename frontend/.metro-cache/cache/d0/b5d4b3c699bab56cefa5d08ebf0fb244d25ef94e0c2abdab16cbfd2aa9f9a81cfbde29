{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":25},"end":{"line":2,"column":31,"index":56}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./WebCameraUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":3,"column":42,"index":99}}],"key":"7QFlRc+R5Zhr/RLcJUPMtLUHEsc=","exportNames":["*"],"imports":1}},{"name":"./WebConstants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":100},"end":{"line":4,"column":56,"index":156}}],"key":"VYBjMDeNhUYVRZIl4m+mFrGQcXE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useWebCameraStream = useWebCameraStream;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _WebCameraUtils = require(_dependencyMap[1], \"./WebCameraUtils\");\n  var Utils = _interopNamespace(_WebCameraUtils);\n  var _WebConstants = require(_dependencyMap[2], \"./WebConstants\");\n  /* eslint-env browser */\n\n  const VALID_SETTINGS_KEYS = ['autoFocus', 'flashMode', 'exposureCompensation', 'colorTemperature', 'iso', 'brightness', 'contrast', 'saturation', 'sharpness', 'focusDistance', 'whiteBalance', 'zoom'];\n  function useLoadedVideo(video, onLoaded) {\n    React.useEffect(() => {\n      if (video) {\n        video.addEventListener('loadedmetadata', () => {\n          // without this async block the constraints aren't properly applied to the camera,\n          // this means that if you were to turn on the torch and swap to the front camera,\n          // then swap back to the rear camera the torch setting wouldn't be applied.\n          requestAnimationFrame(() => {\n            onLoaded();\n          });\n        });\n      }\n    }, [video]);\n  }\n  function useWebCameraStream(video, preferredType, settings, {\n    onCameraReady,\n    onMountError\n  }) {\n    const isStartingCamera = React.useRef(false);\n    const activeStreams = React.useRef([]);\n    const capabilities = React.useRef({\n      autoFocus: 'continuous',\n      flashMode: 'off',\n      whiteBalance: 'continuous',\n      zoom: 1\n    });\n    const [stream, setStream] = React.useState(null);\n    const mediaTrackSettings = React.useMemo(() => {\n      return stream ? stream.getTracks()[0].getSettings() : null;\n    }, [stream]);\n    // The actual camera type - this can be different from the incoming camera type.\n    const type = React.useMemo(() => {\n      if (!mediaTrackSettings) {\n        return null;\n      }\n      // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n      const {\n        facingMode = 'user'\n      } = mediaTrackSettings;\n      return _WebConstants.FacingModeToCameraType[facingMode];\n    }, [mediaTrackSettings]);\n    const getStreamDeviceAsync = React.useCallback(async () => {\n      try {\n        return await Utils.getPreferredStreamDevice(preferredType);\n      } catch (nativeEvent) {\n        if (__DEV__) {\n          console.warn(`Error requesting UserMedia for type \"${preferredType}\":`, nativeEvent);\n        }\n        if (onMountError) {\n          onMountError({\n            nativeEvent\n          });\n        }\n        return null;\n      }\n    }, [preferredType, onMountError]);\n    const resumeAsync = React.useCallback(async () => {\n      const nextStream = await getStreamDeviceAsync();\n      if (Utils.compareStreams(nextStream, stream)) {\n        // Do nothing if the streams are the same.\n        // This happens when the device only supports one camera (i.e. desktop) and the mode was toggled between front/back while already active.\n        // Without this check there is a screen flash while the video switches.\n        return false;\n      }\n      // Save a history of all active streams (usually 2+) so we can close them later.\n      // Keeping them open makes swapping camera types much faster.\n      if (!activeStreams.current.some(value => value.id === nextStream?.id)) {\n        activeStreams.current.push(nextStream);\n      }\n      // Set the new stream -> update the video, settings, and actual camera type.\n      setStream(nextStream);\n      if (onCameraReady) {\n        onCameraReady();\n      }\n      return false;\n    }, [getStreamDeviceAsync, setStream, onCameraReady, stream, activeStreams.current]);\n    React.useEffect(() => {\n      // Restart the camera and guard concurrent actions.\n      if (isStartingCamera.current) {\n        return;\n      }\n      isStartingCamera.current = true;\n      resumeAsync().then(isStarting => {\n        isStartingCamera.current = isStarting;\n      }).catch(() => {\n        // ensure the camera can be started again.\n        isStartingCamera.current = false;\n      });\n    }, [preferredType]);\n    // Update the native camera with any custom capabilities.\n    React.useEffect(() => {\n      const changes = {};\n      for (const key of VALID_SETTINGS_KEYS) {\n        if (key in settings) {\n          const nextValue = settings[key];\n          if (nextValue !== capabilities.current[key]) {\n            changes[key] = nextValue;\n          }\n        }\n      }\n      // Only update the native camera if changes were found\n      const hasChanges = !!Object.keys(changes).length;\n      const nextWebCameraSettings = {\n        ...capabilities.current,\n        ...changes\n      };\n      if (hasChanges) {\n        Utils.syncTrackCapabilities(preferredType, stream, changes);\n      }\n      capabilities.current = nextWebCameraSettings;\n    }, [settings.autoFocus, settings.flashMode, settings.exposureCompensation, settings.colorTemperature, settings.iso, settings.brightness, settings.contrast, settings.saturation, settings.sharpness, settings.focusDistance, settings.whiteBalance, settings.zoom]);\n    React.useEffect(() => {\n      // set or unset the video source.\n      if (!video.current) {\n        return;\n      }\n      Utils.setVideoSource(video.current, stream);\n    }, [video.current, stream]);\n    React.useEffect(() => {\n      return () => {\n        // Clean up on dismount, this is important for making sure the camera light goes off when the component is removed.\n        for (const stream of activeStreams.current) {\n          // Close all open streams.\n          Utils.stopMediaStream(stream);\n        }\n        if (video.current) {\n          // Invalidate the video source.\n          Utils.setVideoSource(video.current, stream);\n        }\n      };\n    }, []);\n    // Update props when the video loads.\n    useLoadedVideo(video.current, () => {\n      Utils.syncTrackCapabilities(preferredType, stream, capabilities.current);\n    });\n    return {\n      type,\n      mediaTrackSettings\n    };\n  }\n});","lineCount":171,"map":[[22,2,33,0,"exports"],[22,9,33,0],[22,10,33,0,"useWebCameraStream"],[22,28,33,0],[22,31,33,0,"useWebCameraStream"],[22,49,33,0],[23,2,2,0],[23,6,2,0,"_react"],[23,12,2,0],[23,15,2,0,"require"],[23,22,2,0],[23,23,2,0,"_dependencyMap"],[23,37,2,0],[24,2,2,0],[24,6,2,0,"React"],[24,11,2,0],[24,14,2,0,"_interopNamespace"],[24,31,2,0],[24,32,2,0,"_react"],[24,38,2,0],[25,2,3,0],[25,6,3,0,"_WebCameraUtils"],[25,21,3,0],[25,24,3,0,"require"],[25,31,3,0],[25,32,3,0,"_dependencyMap"],[25,46,3,0],[26,2,3,0],[26,6,3,0,"Utils"],[26,11,3,0],[26,14,3,0,"_interopNamespace"],[26,31,3,0],[26,32,3,0,"_WebCameraUtils"],[26,47,3,0],[27,2,4,0],[27,6,4,0,"_WebConstants"],[27,19,4,0],[27,22,4,0,"require"],[27,29,4,0],[27,30,4,0,"_dependencyMap"],[27,44,4,0],[28,2,1,0],[30,2,5,0],[30,8,5,6,"VALID_SETTINGS_KEYS"],[30,27,5,25],[30,30,5,28],[30,31,6,4],[30,42,6,15],[30,44,7,4],[30,55,7,15],[30,57,8,4],[30,79,8,26],[30,81,9,4],[30,99,9,22],[30,101,10,4],[30,106,10,9],[30,108,11,4],[30,120,11,16],[30,122,12,4],[30,132,12,14],[30,134,13,4],[30,146,13,16],[30,148,14,4],[30,159,14,15],[30,161,15,4],[30,176,15,19],[30,178,16,4],[30,192,16,18],[30,194,17,4],[30,200,17,10],[30,201,18,1],[31,2,19,0],[31,11,19,9,"useLoadedVideo"],[31,25,19,23,"useLoadedVideo"],[31,26,19,24,"video"],[31,31,19,29],[31,33,19,31,"onLoaded"],[31,41,19,39],[31,43,19,41],[32,4,20,4,"React"],[32,9,20,9],[32,10,20,10,"useEffect"],[32,19,20,19],[32,20,20,20],[32,26,20,26],[33,6,21,8],[33,10,21,12,"video"],[33,15,21,17],[33,17,21,19],[34,8,22,12,"video"],[34,13,22,17],[34,14,22,18,"addEventListener"],[34,30,22,34],[34,31,22,35],[34,47,22,51],[34,49,22,53],[34,55,22,59],[35,10,23,16],[36,10,24,16],[37,10,25,16],[38,10,26,16,"requestAnimationFrame"],[38,31,26,37],[38,32,26,38],[38,38,26,44],[39,12,27,20,"onLoaded"],[39,20,27,28],[39,21,27,29],[39,22,27,30],[40,10,28,16],[40,11,28,17],[40,12,28,18],[41,8,29,12],[41,9,29,13],[41,10,29,14],[42,6,30,8],[43,4,31,4],[43,5,31,5],[43,7,31,7],[43,8,31,8,"video"],[43,13,31,13],[43,14,31,14],[43,15,31,15],[44,2,32,0],[45,2,33,7],[45,11,33,16,"useWebCameraStream"],[45,29,33,34,"useWebCameraStream"],[45,30,33,35,"video"],[45,35,33,40],[45,37,33,42,"preferredType"],[45,50,33,55],[45,52,33,57,"settings"],[45,60,33,65],[45,62,33,67],[46,4,33,69,"onCameraReady"],[46,17,33,82],[47,4,33,84,"onMountError"],[48,2,33,98],[48,3,33,99],[48,5,33,101],[49,4,34,4],[49,10,34,10,"isStartingCamera"],[49,26,34,26],[49,29,34,29,"React"],[49,34,34,34],[49,35,34,35,"useRef"],[49,41,34,41],[49,42,34,42],[49,47,34,47],[49,48,34,48],[50,4,35,4],[50,10,35,10,"activeStreams"],[50,23,35,23],[50,26,35,26,"React"],[50,31,35,31],[50,32,35,32,"useRef"],[50,38,35,38],[50,39,35,39],[50,41,35,41],[50,42,35,42],[51,4,36,4],[51,10,36,10,"capabilities"],[51,22,36,22],[51,25,36,25,"React"],[51,30,36,30],[51,31,36,31,"useRef"],[51,37,36,37],[51,38,36,38],[52,6,37,8,"autoFocus"],[52,15,37,17],[52,17,37,19],[52,29,37,31],[53,6,38,8,"flashMode"],[53,15,38,17],[53,17,38,19],[53,22,38,24],[54,6,39,8,"whiteBalance"],[54,18,39,20],[54,20,39,22],[54,32,39,34],[55,6,40,8,"zoom"],[55,10,40,12],[55,12,40,14],[56,4,41,4],[56,5,41,5],[56,6,41,6],[57,4,42,4],[57,10,42,10],[57,11,42,11,"stream"],[57,17,42,17],[57,19,42,19,"setStream"],[57,28,42,28],[57,29,42,29],[57,32,42,32,"React"],[57,37,42,37],[57,38,42,38,"useState"],[57,46,42,46],[57,47,42,47],[57,51,42,51],[57,52,42,52],[58,4,43,4],[58,10,43,10,"mediaTrackSettings"],[58,28,43,28],[58,31,43,31,"React"],[58,36,43,36],[58,37,43,37,"useMemo"],[58,44,43,44],[58,45,43,45],[58,51,43,51],[59,6,44,8],[59,13,44,15,"stream"],[59,19,44,21],[59,22,44,24,"stream"],[59,28,44,30],[59,29,44,31,"getTracks"],[59,38,44,40],[59,39,44,41],[59,40,44,42],[59,41,44,43],[59,42,44,44],[59,43,44,45],[59,44,44,46,"getSettings"],[59,55,44,57],[59,56,44,58],[59,57,44,59],[59,60,44,62],[59,64,44,66],[60,4,45,4],[60,5,45,5],[60,7,45,7],[60,8,45,8,"stream"],[60,14,45,14],[60,15,45,15],[60,16,45,16],[61,4,46,4],[62,4,47,4],[62,10,47,10,"type"],[62,14,47,14],[62,17,47,17,"React"],[62,22,47,22],[62,23,47,23,"useMemo"],[62,30,47,30],[62,31,47,31],[62,37,47,37],[63,6,48,8],[63,10,48,12],[63,11,48,13,"mediaTrackSettings"],[63,29,48,31],[63,31,48,33],[64,8,49,12],[64,15,49,19],[64,19,49,23],[65,6,50,8],[66,6,51,8],[67,6,52,8],[67,12,52,14],[68,8,52,16,"facingMode"],[68,18,52,26],[68,21,52,29],[69,6,52,36],[69,7,52,37],[69,10,52,40,"mediaTrackSettings"],[69,28,52,58],[70,6,53,8],[70,13,53,15,"FacingModeToCameraType"],[70,26,53,37],[70,27,53,37,"FacingModeToCameraType"],[70,49,53,37],[70,50,53,38,"facingMode"],[70,60,53,48],[70,61,53,49],[71,4,54,4],[71,5,54,5],[71,7,54,7],[71,8,54,8,"mediaTrackSettings"],[71,26,54,26],[71,27,54,27],[71,28,54,28],[72,4,55,4],[72,10,55,10,"getStreamDeviceAsync"],[72,30,55,30],[72,33,55,33,"React"],[72,38,55,38],[72,39,55,39,"useCallback"],[72,50,55,50],[72,51,55,51],[72,63,55,63],[73,6,56,8],[73,10,56,12],[74,8,57,12],[74,15,57,19],[74,21,57,25,"Utils"],[74,26,57,30],[74,27,57,31,"getPreferredStreamDevice"],[74,51,57,55],[74,52,57,56,"preferredType"],[74,65,57,69],[74,66,57,70],[75,6,58,8],[75,7,58,9],[75,8,59,8],[75,15,59,15,"nativeEvent"],[75,26,59,26],[75,28,59,28],[76,8,60,12],[76,12,60,16,"__DEV__"],[76,19,60,23],[76,21,60,25],[77,10,61,16,"console"],[77,17,61,23],[77,18,61,24,"warn"],[77,22,61,28],[77,23,61,29],[77,63,61,69,"preferredType"],[77,76,61,82],[77,80,61,86],[77,82,61,88,"nativeEvent"],[77,93,61,99],[77,94,61,100],[78,8,62,12],[79,8,63,12],[79,12,63,16,"onMountError"],[79,24,63,28],[79,26,63,30],[80,10,64,16,"onMountError"],[80,22,64,28],[80,23,64,29],[81,12,64,31,"nativeEvent"],[82,10,64,43],[82,11,64,44],[82,12,64,45],[83,8,65,12],[84,8,66,12],[84,15,66,19],[84,19,66,23],[85,6,67,8],[86,4,68,4],[86,5,68,5],[86,7,68,7],[86,8,68,8,"preferredType"],[86,21,68,21],[86,23,68,23,"onMountError"],[86,35,68,35],[86,36,68,36],[86,37,68,37],[87,4,69,4],[87,10,69,10,"resumeAsync"],[87,21,69,21],[87,24,69,24,"React"],[87,29,69,29],[87,30,69,30,"useCallback"],[87,41,69,41],[87,42,69,42],[87,54,69,54],[88,6,70,8],[88,12,70,14,"nextStream"],[88,22,70,24],[88,25,70,27],[88,31,70,33,"getStreamDeviceAsync"],[88,51,70,53],[88,52,70,54],[88,53,70,55],[89,6,71,8],[89,10,71,12,"Utils"],[89,15,71,17],[89,16,71,18,"compareStreams"],[89,30,71,32],[89,31,71,33,"nextStream"],[89,41,71,43],[89,43,71,45,"stream"],[89,49,71,51],[89,50,71,52],[89,52,71,54],[90,8,72,12],[91,8,73,12],[92,8,74,12],[93,8,75,12],[93,15,75,19],[93,20,75,24],[94,6,76,8],[95,6,77,8],[96,6,78,8],[97,6,79,8],[97,10,79,12],[97,11,79,13,"activeStreams"],[97,24,79,26],[97,25,79,27,"current"],[97,32,79,34],[97,33,79,35,"some"],[97,37,79,39],[97,38,79,41,"value"],[97,43,79,46],[97,47,79,51,"value"],[97,52,79,56],[97,53,79,57,"id"],[97,55,79,59],[97,60,79,64,"nextStream"],[97,70,79,74],[97,72,79,76,"id"],[97,74,79,78],[97,75,79,79],[97,77,79,81],[98,8,80,12,"activeStreams"],[98,21,80,25],[98,22,80,26,"current"],[98,29,80,33],[98,30,80,34,"push"],[98,34,80,38],[98,35,80,39,"nextStream"],[98,45,80,49],[98,46,80,50],[99,6,81,8],[100,6,82,8],[101,6,83,8,"setStream"],[101,15,83,17],[101,16,83,18,"nextStream"],[101,26,83,28],[101,27,83,29],[102,6,84,8],[102,10,84,12,"onCameraReady"],[102,23,84,25],[102,25,84,27],[103,8,85,12,"onCameraReady"],[103,21,85,25],[103,22,85,26],[103,23,85,27],[104,6,86,8],[105,6,87,8],[105,13,87,15],[105,18,87,20],[106,4,88,4],[106,5,88,5],[106,7,88,7],[106,8,88,8,"getStreamDeviceAsync"],[106,28,88,28],[106,30,88,30,"setStream"],[106,39,88,39],[106,41,88,41,"onCameraReady"],[106,54,88,54],[106,56,88,56,"stream"],[106,62,88,62],[106,64,88,64,"activeStreams"],[106,77,88,77],[106,78,88,78,"current"],[106,85,88,85],[106,86,88,86],[106,87,88,87],[107,4,89,4,"React"],[107,9,89,9],[107,10,89,10,"useEffect"],[107,19,89,19],[107,20,89,20],[107,26,89,26],[108,6,90,8],[109,6,91,8],[109,10,91,12,"isStartingCamera"],[109,26,91,28],[109,27,91,29,"current"],[109,34,91,36],[109,36,91,38],[110,8,92,12],[111,6,93,8],[112,6,94,8,"isStartingCamera"],[112,22,94,24],[112,23,94,25,"current"],[112,30,94,32],[112,33,94,35],[112,37,94,39],[113,6,95,8,"resumeAsync"],[113,17,95,19],[113,18,95,20],[113,19,95,21],[113,20,96,13,"then"],[113,24,96,17],[113,25,96,19,"isStarting"],[113,35,96,29],[113,39,96,34],[114,8,97,12,"isStartingCamera"],[114,24,97,28],[114,25,97,29,"current"],[114,32,97,36],[114,35,97,39,"isStarting"],[114,45,97,49],[115,6,98,8],[115,7,98,9],[115,8,98,10],[115,9,99,13,"catch"],[115,14,99,18],[115,15,99,19],[115,21,99,25],[116,8,100,12],[117,8,101,12,"isStartingCamera"],[117,24,101,28],[117,25,101,29,"current"],[117,32,101,36],[117,35,101,39],[117,40,101,44],[118,6,102,8],[118,7,102,9],[118,8,102,10],[119,4,103,4],[119,5,103,5],[119,7,103,7],[119,8,103,8,"preferredType"],[119,21,103,21],[119,22,103,22],[119,23,103,23],[120,4,104,4],[121,4,105,4,"React"],[121,9,105,9],[121,10,105,10,"useEffect"],[121,19,105,19],[121,20,105,20],[121,26,105,26],[122,6,106,8],[122,12,106,14,"changes"],[122,19,106,21],[122,22,106,24],[122,23,106,25],[122,24,106,26],[123,6,107,8],[123,11,107,13],[123,17,107,19,"key"],[123,20,107,22],[123,24,107,26,"VALID_SETTINGS_KEYS"],[123,43,107,45],[123,45,107,47],[124,8,108,12],[124,12,108,16,"key"],[124,15,108,19],[124,19,108,23,"settings"],[124,27,108,31],[124,29,108,33],[125,10,109,16],[125,16,109,22,"nextValue"],[125,25,109,31],[125,28,109,34,"settings"],[125,36,109,42],[125,37,109,43,"key"],[125,40,109,46],[125,41,109,47],[126,10,110,16],[126,14,110,20,"nextValue"],[126,23,110,29],[126,28,110,34,"capabilities"],[126,40,110,46],[126,41,110,47,"current"],[126,48,110,54],[126,49,110,55,"key"],[126,52,110,58],[126,53,110,59],[126,55,110,61],[127,12,111,20,"changes"],[127,19,111,27],[127,20,111,28,"key"],[127,23,111,31],[127,24,111,32],[127,27,111,35,"nextValue"],[127,36,111,44],[128,10,112,16],[129,8,113,12],[130,6,114,8],[131,6,115,8],[132,6,116,8],[132,12,116,14,"hasChanges"],[132,22,116,24],[132,25,116,27],[132,26,116,28],[132,27,116,29,"Object"],[132,33,116,35],[132,34,116,36,"keys"],[132,38,116,40],[132,39,116,41,"changes"],[132,46,116,48],[132,47,116,49],[132,48,116,50,"length"],[132,54,116,56],[133,6,117,8],[133,12,117,14,"nextWebCameraSettings"],[133,33,117,35],[133,36,117,38],[134,8,117,40],[134,11,117,43,"capabilities"],[134,23,117,55],[134,24,117,56,"current"],[134,31,117,63],[135,8,117,65],[135,11,117,68,"changes"],[136,6,117,76],[136,7,117,77],[137,6,118,8],[137,10,118,12,"hasChanges"],[137,20,118,22],[137,22,118,24],[138,8,119,12,"Utils"],[138,13,119,17],[138,14,119,18,"syncTrackCapabilities"],[138,35,119,39],[138,36,119,40,"preferredType"],[138,49,119,53],[138,51,119,55,"stream"],[138,57,119,61],[138,59,119,63,"changes"],[138,66,119,70],[138,67,119,71],[139,6,120,8],[140,6,121,8,"capabilities"],[140,18,121,20],[140,19,121,21,"current"],[140,26,121,28],[140,29,121,31,"nextWebCameraSettings"],[140,50,121,52],[141,4,122,4],[141,5,122,5],[141,7,122,7],[141,8,123,8,"settings"],[141,16,123,16],[141,17,123,17,"autoFocus"],[141,26,123,26],[141,28,124,8,"settings"],[141,36,124,16],[141,37,124,17,"flashMode"],[141,46,124,26],[141,48,125,8,"settings"],[141,56,125,16],[141,57,125,17,"exposureCompensation"],[141,77,125,37],[141,79,126,8,"settings"],[141,87,126,16],[141,88,126,17,"colorTemperature"],[141,104,126,33],[141,106,127,8,"settings"],[141,114,127,16],[141,115,127,17,"iso"],[141,118,127,20],[141,120,128,8,"settings"],[141,128,128,16],[141,129,128,17,"brightness"],[141,139,128,27],[141,141,129,8,"settings"],[141,149,129,16],[141,150,129,17,"contrast"],[141,158,129,25],[141,160,130,8,"settings"],[141,168,130,16],[141,169,130,17,"saturation"],[141,179,130,27],[141,181,131,8,"settings"],[141,189,131,16],[141,190,131,17,"sharpness"],[141,199,131,26],[141,201,132,8,"settings"],[141,209,132,16],[141,210,132,17,"focusDistance"],[141,223,132,30],[141,225,133,8,"settings"],[141,233,133,16],[141,234,133,17,"whiteBalance"],[141,246,133,29],[141,248,134,8,"settings"],[141,256,134,16],[141,257,134,17,"zoom"],[141,261,134,21],[141,262,135,5],[141,263,135,6],[142,4,136,4,"React"],[142,9,136,9],[142,10,136,10,"useEffect"],[142,19,136,19],[142,20,136,20],[142,26,136,26],[143,6,137,8],[144,6,138,8],[144,10,138,12],[144,11,138,13,"video"],[144,16,138,18],[144,17,138,19,"current"],[144,24,138,26],[144,26,138,28],[145,8,139,12],[146,6,140,8],[147,6,141,8,"Utils"],[147,11,141,13],[147,12,141,14,"setVideoSource"],[147,26,141,28],[147,27,141,29,"video"],[147,32,141,34],[147,33,141,35,"current"],[147,40,141,42],[147,42,141,44,"stream"],[147,48,141,50],[147,49,141,51],[148,4,142,4],[148,5,142,5],[148,7,142,7],[148,8,142,8,"video"],[148,13,142,13],[148,14,142,14,"current"],[148,21,142,21],[148,23,142,23,"stream"],[148,29,142,29],[148,30,142,30],[148,31,142,31],[149,4,143,4,"React"],[149,9,143,9],[149,10,143,10,"useEffect"],[149,19,143,19],[149,20,143,20],[149,26,143,26],[150,6,144,8],[150,13,144,15],[150,19,144,21],[151,8,145,12],[152,8,146,12],[152,13,146,17],[152,19,146,23,"stream"],[152,25,146,29],[152,29,146,33,"activeStreams"],[152,42,146,46],[152,43,146,47,"current"],[152,50,146,54],[152,52,146,56],[153,10,147,16],[154,10,148,16,"Utils"],[154,15,148,21],[154,16,148,22,"stopMediaStream"],[154,31,148,37],[154,32,148,38,"stream"],[154,38,148,44],[154,39,148,45],[155,8,149,12],[156,8,150,12],[156,12,150,16,"video"],[156,17,150,21],[156,18,150,22,"current"],[156,25,150,29],[156,27,150,31],[157,10,151,16],[158,10,152,16,"Utils"],[158,15,152,21],[158,16,152,22,"setVideoSource"],[158,30,152,36],[158,31,152,37,"video"],[158,36,152,42],[158,37,152,43,"current"],[158,44,152,50],[158,46,152,52,"stream"],[158,52,152,58],[158,53,152,59],[159,8,153,12],[160,6,154,8],[160,7,154,9],[161,4,155,4],[161,5,155,5],[161,7,155,7],[161,9,155,9],[161,10,155,10],[162,4,156,4],[163,4,157,4,"useLoadedVideo"],[163,18,157,18],[163,19,157,19,"video"],[163,24,157,24],[163,25,157,25,"current"],[163,32,157,32],[163,34,157,34],[163,40,157,40],[164,6,158,8,"Utils"],[164,11,158,13],[164,12,158,14,"syncTrackCapabilities"],[164,33,158,35],[164,34,158,36,"preferredType"],[164,47,158,49],[164,49,158,51,"stream"],[164,55,158,57],[164,57,158,59,"capabilities"],[164,69,158,71],[164,70,158,72,"current"],[164,77,158,79],[164,78,158,80],[165,4,159,4],[165,5,159,5],[165,6,159,6],[166,4,160,4],[166,11,160,11],[167,6,161,8,"type"],[167,10,161,12],[168,6,162,8,"mediaTrackSettings"],[169,4,163,4],[169,5,163,5],[170,2,164,0],[171,0,164,1],[171,3]],"functionMap":{"names":["<global>","useLoadedVideo","React.useEffect$argument_0","video.addEventListener$argument_1","requestAnimationFrame$argument_0","useWebCameraStream","React.useMemo$argument_0","getStreamDeviceAsync","resumeAsync","activeStreams.current.some$argument_0","resumeAsync.then$argument_0","resumeAsync.then._catch$argument_0","<anonymous>","useLoadedVideo$argument_1"],"mappings":"AAA;ACkB;oBCC;qDCE;sCCI;iBDE;aDC;KDE;CDC;OKC;6CCU;KDE;+BCE;KDO;mDEC;KFa;0CGC;wCCU,sCD;KHS;oBHC;kBQO;SRE;mBSC;STG;KGC;oBHE;KGiB;oBHc;KGM;oBHC;eUC;SVU;KGC;kCQE;KRE;CLK"},"hasCjsExports":false},"type":"js/module"}]}