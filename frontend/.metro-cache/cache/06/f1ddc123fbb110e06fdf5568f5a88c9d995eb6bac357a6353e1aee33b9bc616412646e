{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":97,"index":97}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./ExpoMediaLibrary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":139},"end":{"line":3,"column":46,"index":185}}],"key":"yXHDHFsvtz5fKc5CK5Xe3zolTC8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  Object.defineProperty(exports, \"MediaType\", {\n    enumerable: true,\n    get: function () {\n      return MediaType;\n    }\n  });\n  Object.defineProperty(exports, \"SortBy\", {\n    enumerable: true,\n    get: function () {\n      return SortBy;\n    }\n  });\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.getPermissionsAsync = getPermissionsAsync;\n  Object.defineProperty(exports, \"usePermissions\", {\n    enumerable: true,\n    get: function () {\n      return usePermissions;\n    }\n  });\n  exports.presentPermissionsPickerAsync = presentPermissionsPickerAsync;\n  exports.createAssetAsync = createAssetAsync;\n  exports.saveToLibraryAsync = saveToLibraryAsync;\n  exports.addAssetsToAlbumAsync = addAssetsToAlbumAsync;\n  exports.removeAssetsFromAlbumAsync = removeAssetsFromAlbumAsync;\n  exports.deleteAssetsAsync = deleteAssetsAsync;\n  exports.getAssetInfoAsync = getAssetInfoAsync;\n  exports.getAlbumsAsync = getAlbumsAsync;\n  exports.getAlbumAsync = getAlbumAsync;\n  exports.createAlbumAsync = createAlbumAsync;\n  exports.deleteAlbumsAsync = deleteAlbumsAsync;\n  exports.getAssetsAsync = getAssetsAsync;\n  exports.addListener = addListener;\n  exports.removeSubscription = removeSubscription;\n  exports.removeAllListeners = removeAllListeners;\n  exports.getMomentsAsync = getMomentsAsync;\n  exports.migrateAlbumIfNeededAsync = migrateAlbumIfNeededAsync;\n  exports.albumNeedsMigrationAsync = albumNeedsMigrationAsync;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _ExpoMediaLibrary = require(_dependencyMap[2], \"./ExpoMediaLibrary\");\n  var MediaLibrary = _interopDefault(_ExpoMediaLibrary);\n  const isExpoGo = typeof expo !== 'undefined' && globalThis.expo?.modules?.ExpoGo;\n  let loggedExpoGoWarning = false;\n  if (isExpoGo && !loggedExpoGoWarning) {\n    console.warn('Due to changes in Androids permission requirements, Expo Go can no longer provide full access to the media library. To test the full functionality of this module, you can create a development build. https://docs.expo.dev/develop/development-builds/create-a-build');\n    loggedExpoGoWarning = true;\n  }\n  function arrayize(item) {\n    if (Array.isArray(item)) {\n      return item;\n    }\n    return item ? [item] : [];\n  }\n  function getId(ref) {\n    if (typeof ref === 'string') {\n      return ref;\n    }\n    return ref ? ref.id : undefined;\n  }\n  function checkAssetIds(assetIds) {\n    if (assetIds.some(id => !id || typeof id !== 'string')) {\n      throw new Error('Asset ID must be a string!');\n    }\n  }\n  function checkAlbumIds(albumIds) {\n    if (albumIds.some(id => !id || typeof id !== 'string')) {\n      throw new Error('Album ID must be a string!');\n    }\n  }\n  function checkMediaType(mediaType) {\n    if (Object.values(MediaType).indexOf(mediaType) === -1) {\n      throw new Error(`Invalid mediaType: ${mediaType}`);\n    }\n  }\n  function checkSortBy(sortBy) {\n    if (Array.isArray(sortBy)) {\n      checkSortByKey(sortBy[0]);\n      if (typeof sortBy[1] !== 'boolean') {\n        throw new Error('Invalid sortBy array argument. Second item must be a boolean!');\n      }\n    } else {\n      checkSortByKey(sortBy);\n    }\n  }\n  function checkSortByKey(sortBy) {\n    if (Object.values(SortBy).indexOf(sortBy) === -1) {\n      throw new Error(`Invalid sortBy key: ${sortBy}`);\n    }\n  }\n  function sortByOptionToString(sortBy) {\n    checkSortBy(sortBy);\n    if (Array.isArray(sortBy)) {\n      return `${sortBy[0]} ${sortBy[1] ? 'ASC' : 'DESC'}`;\n    }\n    return `${sortBy} DESC`;\n  }\n  function dateToNumber(value) {\n    return value instanceof Date ? value.getTime() : value;\n  }\n  // @needsAudit\n  /**\n   * Possible media types.\n   */\n  const MediaType = MediaLibrary.default.MediaType;\n  // @needsAudit\n  /**\n   * Supported keys that can be used to sort `getAssetsAsync` results.\n   */\n  const SortBy = MediaLibrary.default.SortBy;\n  // @needsAudit\n  /**\n   * Returns whether the Media Library API is enabled on the current device.\n   * @return A promise which fulfils with a `boolean`, indicating whether the Media Library API is\n   * available on the current device.\n   */\n  async function isAvailableAsync() {\n    return !!MediaLibrary.default && 'getAssetsAsync' in MediaLibrary.default;\n  }\n  // @needsAudit @docsMissing\n  /**\n   * Asks the user to grant permissions for accessing media in user's media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has an\n   * effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   *\n   * > When using granular permissions with a custom config plugin configuration, make sure that all the requested permissions are included in the plugin.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  async function requestPermissionsAsync(writeOnly = false, granularPermissions) {\n    if (!MediaLibrary.default.requestPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'requestPermissionsAsync');\n    }\n    if (Platform.default.OS === 'android') {\n      return await MediaLibrary.default.requestPermissionsAsync(writeOnly, granularPermissions);\n    }\n    return await MediaLibrary.default.requestPermissionsAsync(writeOnly);\n  }\n  // @needsAudit @docsMissing\n  /**\n   * Checks user's permissions for accessing media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has\n   * an effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  async function getPermissionsAsync(writeOnly = false, granularPermissions) {\n    if (!MediaLibrary.default.getPermissionsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getPermissionsAsync');\n    }\n    if (Platform.default.OS === 'android') {\n      return await MediaLibrary.default.getPermissionsAsync(writeOnly, granularPermissions);\n    }\n    return await MediaLibrary.default.getPermissionsAsync(writeOnly);\n  }\n  // @needsAudit\n  /**\n   * Check or request permissions to access the media library.\n   * This uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [permissionResponse, requestPermission] = MediaLibrary.usePermissions();\n   * ```\n   */\n  const usePermissions = (0, _expoModulesCore.createPermissionHook)({\n    // TODO(cedric): permission requesters should have an options param or a different requester\n    getMethod: options => getPermissionsAsync(options?.writeOnly, options?.granularPermissions),\n    requestMethod: options => requestPermissionsAsync(options?.writeOnly, options?.granularPermissions)\n  });\n  // @needsAudit\n  /**\n   * Allows the user to update the assets that your app has access to.\n   * The system modal is only displayed if the user originally allowed only `limited` access to their\n   * media library, otherwise this method is a no-op.\n   * @param mediaTypes Limits the type(s) of media that the user will be granting access to. By default, a list that shows both photos and videos is presented.\n   *\n   * @return A promise that either rejects if the method is unavailable, or resolves to `void`.\n   * > __Note:__ This method doesn't inform you if the user changes which assets your app has access to.\n   * That information is only exposed by iOS, and to obtain it, you need to subscribe for updates to the user's media library using [`addListener()`](#medialibraryaddlistenerlistener).\n   * If `hasIncrementalChanges` is `false`, the user changed their permissions.\n   *\n   * @platform android 14+\n   * @platform ios\n   */\n  async function presentPermissionsPickerAsync(mediaTypes = ['photo', 'video']) {\n    if (Platform.default.OS === 'android' && isExpoGo) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync is unavailable in Expo Go');\n    }\n    if (Platform.default.OS === 'android' && Platform.default.Version >= 34) {\n      await MediaLibrary.default.requestPermissionsAsync(false, mediaTypes);\n      return;\n    }\n    if (!MediaLibrary.default.presentPermissionsPickerAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync');\n    }\n    return await MediaLibrary.default.presentPermissionsPickerAsync();\n  }\n  // @needsAudit\n  /**\n   * Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\n   * This method requires `CAMERA_ROLL` permission.\n   *\n   * @example\n   * ```js\n   * const { uri } = await Camera.takePictureAsync();\n   * const asset = await MediaLibrary.createAssetAsync(uri);\n   * ```\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`\n   *\n   * @param album An [Album](#album) or its ID. If provided, the asset will be added to this album upon creation, otherwise it will be added to the default album for the media type.\n   * The album has exist.\n   * @return A promise which fulfils with an object representing an [`Asset`](#asset).\n   */\n  async function createAssetAsync(localUri, album) {\n    if (!MediaLibrary.default.createAssetAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAssetAsync');\n    }\n    const albumId = getId(album);\n    if (!localUri || typeof localUri !== 'string') {\n      throw new Error('Invalid argument \"localUri\". It must be a string!');\n    }\n    const asset = await MediaLibrary.default.createAssetAsync(localUri, albumId);\n    if (Array.isArray(asset)) {\n      // Android returns an array with asset, we need to pick the first item\n      return asset[0];\n    }\n    return asset;\n  }\n  // @needsAudit\n  /**\n   * Saves the file at given `localUri` to the user's media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\n   * This method doesn't return created asset.\n   * On __iOS 11+__, it's possible to use this method without asking for `CAMERA_ROLL` permission,\n   * however then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key.\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`.\n   */\n  async function saveToLibraryAsync(localUri) {\n    if (!MediaLibrary.default.saveToLibraryAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'saveToLibraryAsync');\n    }\n    return await MediaLibrary.default.saveToLibraryAsync(localUri);\n  }\n  // @needsAudit\n  /**\n   * Adds array of assets to the album.\n   *\n   * On Android, by default it copies assets from the current album to provided one, however it's also\n   * possible to move them by passing `false` as `copyAssets` argument. In case they're copied you\n   * should keep in mind that `getAssetsAsync` will return duplicated assets.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @param copy __Android only.__ Whether to copy assets to the new album instead of move them.\n   * Defaults to `true`.\n   * @return Returns promise which fulfils with `true` if the assets were successfully added to\n   * the album.\n   */\n  async function addAssetsToAlbumAsync(assets, album, copy = true) {\n    if (!MediaLibrary.default.addAssetsToAlbumAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'addAssetsToAlbumAsync');\n    }\n    const assetIds = arrayize(assets).map(getId);\n    const albumId = getId(album);\n    checkAssetIds(assetIds);\n    if (!albumId || typeof albumId !== 'string') {\n      throw new Error('Invalid album ID. It must be a string!');\n    }\n    if (Platform.default.OS === 'ios') {\n      return await MediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId);\n    }\n    return await MediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId, !!copy);\n  }\n  // @needsAudit\n  /**\n   * Removes given assets from album.\n   *\n   * On Android, album will be automatically deleted if there are no more assets inside.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns promise which fulfils with `true` if the assets were successfully removed from\n   * the album.\n   */\n  async function removeAssetsFromAlbumAsync(assets, album) {\n    if (!MediaLibrary.default.removeAssetsFromAlbumAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'removeAssetsFromAlbumAsync');\n    }\n    const assetIds = arrayize(assets).map(getId);\n    const albumId = getId(album);\n    checkAssetIds(assetIds);\n    return await MediaLibrary.default.removeAssetsFromAlbumAsync(assetIds, albumId);\n  }\n  // @needsAudit\n  /**\n   * Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\n   * on Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\n   * additional dialog on iOS that requires user to confirm this action.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @return Returns promise which fulfils with `true` if the assets were successfully deleted.\n   */\n  async function deleteAssetsAsync(assets) {\n    if (!MediaLibrary.default.deleteAssetsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAssetsAsync');\n    }\n    const assetIds = arrayize(assets).map(getId);\n    checkAssetIds(assetIds);\n    return await MediaLibrary.default.deleteAssetsAsync(assetIds);\n  }\n  // @needsAudit\n  /**\n   * Provides more information about an asset, including GPS location, local URI and EXIF metadata.\n   * @param asset An [Asset](#asset) or its ID.\n   * @param options\n   * @return An [AssetInfo](#assetinfo) object, which is an `Asset` extended by an additional fields.\n   */\n  async function getAssetInfoAsync(asset, options = {\n    shouldDownloadFromNetwork: true\n  }) {\n    if (!MediaLibrary.default.getAssetInfoAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetInfoAsync');\n    }\n    const assetId = getId(asset);\n    checkAssetIds([assetId]);\n    const assetInfo = await MediaLibrary.default.getAssetInfoAsync(assetId, options);\n    if (Array.isArray(assetInfo)) {\n      // Android returns an array with asset info, we need to pick the first item\n      return assetInfo[0];\n    }\n    return assetInfo;\n  }\n  // @needsAudit\n  /**\n   * Queries for user-created albums in media gallery.\n   * @return A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\n   * root directory of your storage may be listed as album titled `\"0\"` or unlisted at all.\n   */\n  async function getAlbumsAsync({\n    includeSmartAlbums = false\n  } = {}) {\n    if (!MediaLibrary.default.getAlbumsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumsAsync');\n    }\n    return await MediaLibrary.default.getAlbumsAsync({\n      includeSmartAlbums\n    });\n  }\n  // @needsAudit\n  /**\n   * Queries for an album with a specific name.\n   * @param title Name of the album to look for.\n   * @return An object representing an [`Album`](#album), if album with given name exists, otherwise\n   * returns `null`.\n   */\n  async function getAlbumAsync(title) {\n    if (!MediaLibrary.default.getAlbumAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumAsync');\n    }\n    if (typeof title !== 'string') {\n      throw new Error('Album title must be a string!');\n    }\n    return await MediaLibrary.default.getAlbumAsync(title);\n  }\n  // @needsAudit\n  /**\n   * Creates an album with given name and initial asset. The asset parameter is required on Android,\n   * since it's not possible to create empty album on this platform. On Android, by default it copies\n   * given asset from the current album to the new one, however it's also possible to move it by\n   * passing `false` as `copyAsset` argument.\n   * In case it's copied you should keep in mind that `getAssetsAsync` will return duplicated asset.\n   * > On Android, it's not possible to create an empty album. You must provide an existing asset to copy or move into the album or an uri of a local file, which will be used to create an initial asset for the album.\n   * @param albumName Name of the album to create.\n   * @param asset An [Asset](#asset) or its ID. On Android you either need to provide an asset or a localUri.\n   * @param initialAssetLocalUri A URI to the local media file, which will be used to create the initial asset inside the album. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`. If the `asset` was provided, this parameter will be ignored.\n   * @param copyAsset __Android Only.__ Whether to copy asset to the new album instead of move it. This parameter is ignored if `asset` was not provided.\n   * Defaults to `true`.\n   * @return Newly created [`Album`](#album).\n   */\n  async function createAlbumAsync(albumName, asset, copyAsset = true, initialAssetLocalUri) {\n    if (!MediaLibrary.default.createAlbumAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAlbumAsync');\n    }\n    const assetId = getId(asset);\n    if (Platform.default.OS === 'android' && (typeof assetId !== 'string' || assetId.length === 0) && !initialAssetLocalUri) {\n      // it's not possible to create empty album on Android, so initial asset must be provided\n      throw new Error('MediaLibrary.createAlbumAsync must be called with an asset or a localUri on Android.');\n    }\n    if (!albumName || typeof albumName !== 'string') {\n      throw new Error('Invalid argument \"albumName\". It must be a string!');\n    }\n    if (assetId != null && typeof assetId !== 'string') {\n      throw new Error('Asset ID must be a string!');\n    }\n    if (Platform.default.OS === 'ios') {\n      return await MediaLibrary.default.createAlbumAsync(albumName, assetId, initialAssetLocalUri);\n    }\n    return await MediaLibrary.default.createAlbumAsync(albumName, assetId, !!copyAsset, initialAssetLocalUri);\n  }\n  // @needsAudit\n  /**\n   * Deletes given albums from the library. On Android by default it deletes assets belonging to given\n   * albums from the library. On iOS it doesn't delete these assets, however it's possible to do by\n   * passing `true` as `deleteAssets`.\n   * @param albums An array of [`Album`](#asset)s or their IDs.\n   * @param assetRemove __iOS Only.__ Whether to also delete assets belonging to given albums.\n   * Defaults to `false`.\n   * @return Returns a promise which fulfils with `true` if the albums were successfully deleted from\n   * the library.\n   */\n  async function deleteAlbumsAsync(albums, assetRemove = false) {\n    if (!MediaLibrary.default.deleteAlbumsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAlbumsAsync');\n    }\n    const albumIds = arrayize(albums).map(getId);\n    checkAlbumIds(albumIds);\n    if (Platform.default.OS === 'android') {\n      return await MediaLibrary.default.deleteAlbumsAsync(albumIds);\n    }\n    return await MediaLibrary.default.deleteAlbumsAsync(albumIds, !!assetRemove);\n  }\n  // @needsAudit\n  /**\n   * Fetches a page of assets matching the provided criteria.\n   * @param assetsOptions\n   * @return A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\n   */\n  async function getAssetsAsync(assetsOptions = {}) {\n    if (!MediaLibrary.default.getAssetsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetsAsync');\n    }\n    const {\n      first,\n      after,\n      album,\n      sortBy,\n      mediaType,\n      createdAfter,\n      createdBefore,\n      mediaSubtypes,\n      resolveWithFullInfo\n    } = assetsOptions;\n    const options = {\n      first: first == null ? 20 : first,\n      after: getId(after),\n      album: getId(album),\n      sortBy: arrayize(sortBy),\n      mediaType: arrayize(mediaType || [MediaType.photo]),\n      mediaSubtypes: arrayize(mediaSubtypes),\n      createdAfter: dateToNumber(createdAfter),\n      createdBefore: dateToNumber(createdBefore),\n      resolveWithFullInfo: resolveWithFullInfo ?? false\n    };\n    if (first != null && typeof options.first !== 'number') {\n      throw new Error('Option \"first\" must be a number!');\n    }\n    if (after != null && typeof options.after !== 'string') {\n      throw new Error('Option \"after\" must be a string!');\n    }\n    if (album != null && typeof options.album !== 'string') {\n      throw new Error('Option \"album\" must be a string!');\n    }\n    if (after != null && Platform.default.OS === 'android' && isNaN(parseInt(getId(after), 10))) {\n      throw new Error('Option \"after\" must be a valid ID!');\n    }\n    if (first != null && first < 0) {\n      throw new Error('Option \"first\" must be a positive integer!');\n    }\n    options.mediaType.forEach(checkMediaType);\n    // TODO(@kitten): Add expected native types for `MediaLibrary`\n    return await MediaLibrary.default.getAssetsAsync({\n      ...options,\n      sortBy: options.sortBy.map(sortByOptionToString)\n    });\n  }\n  // @needsAudit\n  /**\n   * Subscribes for updates in user's media library.\n   * @param listener A callback that is fired when any assets have been inserted or deleted from the\n   * library. On Android it's invoked with an empty object. On iOS, it's invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\n   * object.\n   *\n   * Additionally, only on iOS, the listener is also invoked when the user changes access to individual assets in the media library\n   * using `presentPermissionsPickerAsync()`.\n   * @return An [`Subscription`](#subscription) object that you can call `remove()` on when you would\n   * like to unsubscribe the listener.\n   */\n  function addListener(listener) {\n    return MediaLibrary.default.addListener(MediaLibrary.default.CHANGE_LISTENER_NAME, listener);\n  }\n  // @docsMissing\n  function removeSubscription(subscription) {\n    subscription.remove();\n  }\n  // @needsAudit\n  /**\n   * Removes all listeners.\n   */\n  function removeAllListeners() {\n    MediaLibrary.default.removeAllListeners(MediaLibrary.default.CHANGE_LISTENER_NAME);\n  }\n  // @needsAudit\n  /**\n   * Fetches a list of moments, which is a group of assets taken around the same place\n   * and time.\n   * @return An array of [albums](#album) whose type is `moment`.\n   * @platform ios\n   */\n  async function getMomentsAsync() {\n    if (!MediaLibrary.default.getMomentsAsync) {\n      throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getMomentsAsync');\n    }\n    return await MediaLibrary.default.getMomentsAsync();\n  }\n  // @needsAudit\n  /**\n   * Moves album content to the special media directories on **Android R** or **above** if needed.\n   * Those new locations are in line with the Android `scoped storage` - so your application won't\n   * lose write permission to those directories in the future.\n   *\n   * This method does nothing if:\n   * - app is running on **iOS**, **web** or **Android below R**\n   * - app has **write permission** to the album folder\n   *\n   * The migration is possible when the album contains only compatible files types.\n   * For instance, movies and pictures are compatible with each other, but music and pictures are not.\n   * If automatic migration isn't possible, the function rejects.\n   * In that case, you can use methods from the `expo-file-system` to migrate all your files manually.\n   *\n   * # Why do you need to migrate files?\n   * __Android R__ introduced a lot of changes in the storage system. Now applications can't save\n   * anything to the root directory. The only available locations are from the `MediaStore` API.\n   * Unfortunately, the media library stored albums in folders for which, because of those changes,\n   * the application doesn't have permissions anymore. However, it doesn't mean you need to migrate\n   * all your albums. If your application doesn't add assets to albums, you don't have to migrate.\n   * Everything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\n   *\n   * @param album An [Album](#album) or its ID.\n   * @return A promise which fulfils to `void`.\n   */\n  async function migrateAlbumIfNeededAsync(album) {\n    if (!MediaLibrary.default.migrateAlbumIfNeededAsync) {\n      return;\n    }\n    return await MediaLibrary.default.migrateAlbumIfNeededAsync(getId(album));\n  }\n  // @needsAudit\n  /**\n   * Checks if the album should be migrated to a different location. In other words, it checks if the\n   * application has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\n   * > Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns a promise which fulfils with `true` if the album should be migrated.\n   */\n  async function albumNeedsMigrationAsync(album) {\n    if (!MediaLibrary.default.albumNeedsMigrationAsync) {\n      return false;\n    }\n    return await MediaLibrary.default.albumNeedsMigrationAsync(getId(album));\n  }\n});","lineCount":580,"map":[[12,2,10,0,"Object"],[12,8,10,0],[12,9,10,0,"defineProperty"],[12,23,10,0],[12,24,10,0,"exports"],[12,31,10,0],[13,4,10,0,"enumerable"],[13,14,10,0],[14,4,10,0,"get"],[14,7,10,0],[14,18,10,0,"get"],[14,19,10,0],[15,6,10,0],[15,13,10,9,"PermissionStatus"],[15,29,10,25],[15,30,10,25,"PermissionStatus"],[15,46,10,25],[16,4,10,25],[17,2,10,25],[18,2,68,0,"Object"],[18,8,68,0],[18,9,68,0,"defineProperty"],[18,23,68,0],[18,24,68,0,"exports"],[18,31,68,0],[19,4,68,0,"enumerable"],[19,14,68,0],[20,4,68,0,"get"],[20,7,68,0],[20,18,68,0,"get"],[20,19,68,0],[21,6,68,0],[21,13,68,0,"MediaType"],[21,22,68,0],[22,4,68,0],[23,2,68,0],[24,2,73,0,"Object"],[24,8,73,0],[24,9,73,0,"defineProperty"],[24,23,73,0],[24,24,73,0,"exports"],[24,31,73,0],[25,4,73,0,"enumerable"],[25,14,73,0],[26,4,73,0,"get"],[26,7,73,0],[26,18,73,0,"get"],[26,19,73,0],[27,6,73,0],[27,13,73,0,"SortBy"],[27,19,73,0],[28,4,73,0],[29,2,73,0],[30,2,80,0,"exports"],[30,9,80,0],[30,10,80,0,"isAvailableAsync"],[30,26,80,0],[30,29,80,0,"isAvailableAsync"],[30,45,80,0],[31,2,93,0,"exports"],[31,9,93,0],[31,10,93,0,"requestPermissionsAsync"],[31,33,93,0],[31,36,93,0,"requestPermissionsAsync"],[31,59,93,0],[32,2,110,0,"exports"],[32,9,110,0],[32,10,110,0,"getPermissionsAsync"],[32,29,110,0],[32,32,110,0,"getPermissionsAsync"],[32,51,110,0],[33,2,129,0,"Object"],[33,8,129,0],[33,9,129,0,"defineProperty"],[33,23,129,0],[33,24,129,0,"exports"],[33,31,129,0],[34,4,129,0,"enumerable"],[34,14,129,0],[35,4,129,0,"get"],[35,7,129,0],[35,18,129,0,"get"],[35,19,129,0],[36,6,129,0],[36,13,129,0,"usePermissions"],[36,27,129,0],[37,4,129,0],[38,2,129,0],[39,2,149,0,"exports"],[39,9,149,0],[39,10,149,0,"presentPermissionsPickerAsync"],[39,39,149,0],[39,42,149,0,"presentPermissionsPickerAsync"],[39,71,149,0],[40,2,179,0,"exports"],[40,9,179,0],[40,10,179,0,"createAssetAsync"],[40,26,179,0],[40,29,179,0,"createAssetAsync"],[40,45,179,0],[41,2,203,0,"exports"],[41,9,203,0],[41,10,203,0,"saveToLibraryAsync"],[41,28,203,0],[41,31,203,0,"saveToLibraryAsync"],[41,49,203,0],[42,2,223,0,"exports"],[42,9,223,0],[42,10,223,0,"addAssetsToAlbumAsync"],[42,31,223,0],[42,34,223,0,"addAssetsToAlbumAsync"],[42,55,223,0],[43,2,248,0,"exports"],[43,9,248,0],[43,10,248,0,"removeAssetsFromAlbumAsync"],[43,36,248,0],[43,39,248,0,"removeAssetsFromAlbumAsync"],[43,65,248,0],[44,2,265,0,"exports"],[44,9,265,0],[44,10,265,0,"deleteAssetsAsync"],[44,27,265,0],[44,30,265,0,"deleteAssetsAsync"],[44,47,265,0],[45,2,280,0,"exports"],[45,9,280,0],[45,10,280,0,"getAssetInfoAsync"],[45,27,280,0],[45,30,280,0,"getAssetInfoAsync"],[45,47,280,0],[46,2,299,0,"exports"],[46,9,299,0],[46,10,299,0,"getAlbumsAsync"],[46,24,299,0],[46,27,299,0,"getAlbumsAsync"],[46,41,299,0],[47,2,312,0,"exports"],[47,9,312,0],[47,10,312,0,"getAlbumAsync"],[47,23,312,0],[47,26,312,0,"getAlbumAsync"],[47,39,312,0],[48,2,337,0,"exports"],[48,9,337,0],[48,10,337,0,"createAlbumAsync"],[48,26,337,0],[48,29,337,0,"createAlbumAsync"],[48,45,337,0],[49,2,370,0,"exports"],[49,9,370,0],[49,10,370,0,"deleteAlbumsAsync"],[49,27,370,0],[49,30,370,0,"deleteAlbumsAsync"],[49,47,370,0],[50,2,387,0,"exports"],[50,9,387,0],[50,10,387,0,"getAssetsAsync"],[50,24,387,0],[50,27,387,0,"getAssetsAsync"],[50,41,387,0],[51,2,437,0,"exports"],[51,9,437,0],[51,10,437,0,"addListener"],[51,21,437,0],[51,24,437,0,"addListener"],[51,35,437,0],[52,2,441,0,"exports"],[52,9,441,0],[52,10,441,0,"removeSubscription"],[52,28,441,0],[52,31,441,0,"removeSubscription"],[52,49,441,0],[53,2,448,0,"exports"],[53,9,448,0],[53,10,448,0,"removeAllListeners"],[53,28,448,0],[53,31,448,0,"removeAllListeners"],[53,49,448,0],[54,2,458,0,"exports"],[54,9,458,0],[54,10,458,0,"getMomentsAsync"],[54,25,458,0],[54,28,458,0,"getMomentsAsync"],[54,43,458,0],[55,2,490,0,"exports"],[55,9,490,0],[55,10,490,0,"migrateAlbumIfNeededAsync"],[55,35,490,0],[55,38,490,0,"migrateAlbumIfNeededAsync"],[55,63,490,0],[56,2,504,0,"exports"],[56,9,504,0],[56,10,504,0,"albumNeedsMigrationAsync"],[56,34,504,0],[56,37,504,0,"albumNeedsMigrationAsync"],[56,61,504,0],[57,2,1,0],[57,6,1,0,"_expoModulesCore"],[57,22,1,0],[57,25,1,0,"require"],[57,32,1,0],[57,33,1,0,"_dependencyMap"],[57,47,1,0],[58,2,1,97],[58,6,1,97,"_reactNativeWebDistExportsPlatform"],[58,40,1,97],[58,43,1,97,"require"],[58,50,1,97],[58,51,1,97,"_dependencyMap"],[58,65,1,97],[59,2,1,97],[59,6,1,97,"Platform"],[59,14,1,97],[59,17,1,97,"_interopDefault"],[59,32,1,97],[59,33,1,97,"_reactNativeWebDistExportsPlatform"],[59,67,1,97],[60,2,3,0],[60,6,3,0,"_ExpoMediaLibrary"],[60,23,3,0],[60,26,3,0,"require"],[60,33,3,0],[60,34,3,0,"_dependencyMap"],[60,48,3,0],[61,2,3,0],[61,6,3,0,"MediaLibrary"],[61,18,3,0],[61,21,3,0,"_interopDefault"],[61,36,3,0],[61,37,3,0,"_ExpoMediaLibrary"],[61,54,3,0],[62,2,4,0],[62,8,4,6,"isExpoGo"],[62,16,4,14],[62,19,4,17],[62,26,4,24,"expo"],[62,30,4,28],[62,35,4,33],[62,46,4,44],[62,50,4,48,"globalThis"],[62,60,4,58],[62,61,4,59,"expo"],[62,65,4,63],[62,67,4,65,"modules"],[62,74,4,72],[62,76,4,74,"ExpoGo"],[62,82,4,80],[63,2,5,0],[63,6,5,4,"loggedExpoGoWarning"],[63,25,5,23],[63,28,5,26],[63,33,5,31],[64,2,6,0],[64,6,6,4,"isExpoGo"],[64,14,6,12],[64,18,6,16],[64,19,6,17,"loggedExpoGoWarning"],[64,38,6,36],[64,40,6,38],[65,4,7,4,"console"],[65,11,7,11],[65,12,7,12,"warn"],[65,16,7,16],[65,17,7,17],[65,281,7,281],[65,282,7,282],[66,4,8,4,"loggedExpoGoWarning"],[66,23,8,23],[66,26,8,26],[66,30,8,30],[67,2,9,0],[68,2,11,0],[68,11,11,9,"arrayize"],[68,19,11,17,"arrayize"],[68,20,11,18,"item"],[68,24,11,22],[68,26,11,24],[69,4,12,4],[69,8,12,8,"Array"],[69,13,12,13],[69,14,12,14,"isArray"],[69,21,12,21],[69,22,12,22,"item"],[69,26,12,26],[69,27,12,27],[69,29,12,29],[70,6,13,8],[70,13,13,15,"item"],[70,17,13,19],[71,4,14,4],[72,4,15,4],[72,11,15,11,"item"],[72,15,15,15],[72,18,15,18],[72,19,15,19,"item"],[72,23,15,23],[72,24,15,24],[72,27,15,27],[72,29,15,29],[73,2,16,0],[74,2,17,0],[74,11,17,9,"getId"],[74,16,17,14,"getId"],[74,17,17,15,"ref"],[74,20,17,18],[74,22,17,20],[75,4,18,4],[75,8,18,8],[75,15,18,15,"ref"],[75,18,18,18],[75,23,18,23],[75,31,18,31],[75,33,18,33],[76,6,19,8],[76,13,19,15,"ref"],[76,16,19,18],[77,4,20,4],[78,4,21,4],[78,11,21,11,"ref"],[78,14,21,14],[78,17,21,17,"ref"],[78,20,21,20],[78,21,21,21,"id"],[78,23,21,23],[78,26,21,26,"undefined"],[78,35,21,35],[79,2,22,0],[80,2,23,0],[80,11,23,9,"checkAssetIds"],[80,24,23,22,"checkAssetIds"],[80,25,23,23,"assetIds"],[80,33,23,31],[80,35,23,33],[81,4,24,4],[81,8,24,8,"assetIds"],[81,16,24,16],[81,17,24,17,"some"],[81,21,24,21],[81,22,24,23,"id"],[81,24,24,25],[81,28,24,30],[81,29,24,31,"id"],[81,31,24,33],[81,35,24,37],[81,42,24,44,"id"],[81,44,24,46],[81,49,24,51],[81,57,24,59],[81,58,24,60],[81,60,24,62],[82,6,25,8],[82,12,25,14],[82,16,25,18,"Error"],[82,21,25,23],[82,22,25,24],[82,50,25,52],[82,51,25,53],[83,4,26,4],[84,2,27,0],[85,2,28,0],[85,11,28,9,"checkAlbumIds"],[85,24,28,22,"checkAlbumIds"],[85,25,28,23,"albumIds"],[85,33,28,31],[85,35,28,33],[86,4,29,4],[86,8,29,8,"albumIds"],[86,16,29,16],[86,17,29,17,"some"],[86,21,29,21],[86,22,29,23,"id"],[86,24,29,25],[86,28,29,30],[86,29,29,31,"id"],[86,31,29,33],[86,35,29,37],[86,42,29,44,"id"],[86,44,29,46],[86,49,29,51],[86,57,29,59],[86,58,29,60],[86,60,29,62],[87,6,30,8],[87,12,30,14],[87,16,30,18,"Error"],[87,21,30,23],[87,22,30,24],[87,50,30,52],[87,51,30,53],[88,4,31,4],[89,2,32,0],[90,2,33,0],[90,11,33,9,"checkMediaType"],[90,25,33,23,"checkMediaType"],[90,26,33,24,"mediaType"],[90,35,33,33],[90,37,33,35],[91,4,34,4],[91,8,34,8,"Object"],[91,14,34,14],[91,15,34,15,"values"],[91,21,34,21],[91,22,34,22,"MediaType"],[91,31,34,31],[91,32,34,32],[91,33,34,33,"indexOf"],[91,40,34,40],[91,41,34,41,"mediaType"],[91,50,34,50],[91,51,34,51],[91,56,34,56],[91,57,34,57],[91,58,34,58],[91,60,34,60],[92,6,35,8],[92,12,35,14],[92,16,35,18,"Error"],[92,21,35,23],[92,22,35,24],[92,44,35,46,"mediaType"],[92,53,35,55],[92,55,35,57],[92,56,35,58],[93,4,36,4],[94,2,37,0],[95,2,38,0],[95,11,38,9,"checkSortBy"],[95,22,38,20,"checkSortBy"],[95,23,38,21,"sortBy"],[95,29,38,27],[95,31,38,29],[96,4,39,4],[96,8,39,8,"Array"],[96,13,39,13],[96,14,39,14,"isArray"],[96,21,39,21],[96,22,39,22,"sortBy"],[96,28,39,28],[96,29,39,29],[96,31,39,31],[97,6,40,8,"checkSortByKey"],[97,20,40,22],[97,21,40,23,"sortBy"],[97,27,40,29],[97,28,40,30],[97,29,40,31],[97,30,40,32],[97,31,40,33],[98,6,41,8],[98,10,41,12],[98,17,41,19,"sortBy"],[98,23,41,25],[98,24,41,26],[98,25,41,27],[98,26,41,28],[98,31,41,33],[98,40,41,42],[98,42,41,44],[99,8,42,12],[99,14,42,18],[99,18,42,22,"Error"],[99,23,42,27],[99,24,42,28],[99,87,42,91],[99,88,42,92],[100,6,43,8],[101,4,44,4],[101,5,44,5],[101,11,45,9],[102,6,46,8,"checkSortByKey"],[102,20,46,22],[102,21,46,23,"sortBy"],[102,27,46,29],[102,28,46,30],[103,4,47,4],[104,2,48,0],[105,2,49,0],[105,11,49,9,"checkSortByKey"],[105,25,49,23,"checkSortByKey"],[105,26,49,24,"sortBy"],[105,32,49,30],[105,34,49,32],[106,4,50,4],[106,8,50,8,"Object"],[106,14,50,14],[106,15,50,15,"values"],[106,21,50,21],[106,22,50,22,"SortBy"],[106,28,50,28],[106,29,50,29],[106,30,50,30,"indexOf"],[106,37,50,37],[106,38,50,38,"sortBy"],[106,44,50,44],[106,45,50,45],[106,50,50,50],[106,51,50,51],[106,52,50,52],[106,54,50,54],[107,6,51,8],[107,12,51,14],[107,16,51,18,"Error"],[107,21,51,23],[107,22,51,24],[107,45,51,47,"sortBy"],[107,51,51,53],[107,53,51,55],[107,54,51,56],[108,4,52,4],[109,2,53,0],[110,2,54,0],[110,11,54,9,"sortByOptionToString"],[110,31,54,29,"sortByOptionToString"],[110,32,54,30,"sortBy"],[110,38,54,36],[110,40,54,38],[111,4,55,4,"checkSortBy"],[111,15,55,15],[111,16,55,16,"sortBy"],[111,22,55,22],[111,23,55,23],[112,4,56,4],[112,8,56,8,"Array"],[112,13,56,13],[112,14,56,14,"isArray"],[112,21,56,21],[112,22,56,22,"sortBy"],[112,28,56,28],[112,29,56,29],[112,31,56,31],[113,6,57,8],[113,13,57,15],[113,16,57,18,"sortBy"],[113,22,57,24],[113,23,57,25],[113,24,57,26],[113,25,57,27],[113,29,57,31,"sortBy"],[113,35,57,37],[113,36,57,38],[113,37,57,39],[113,38,57,40],[113,41,57,43],[113,46,57,48],[113,49,57,51],[113,55,57,57],[113,57,57,59],[114,4,58,4],[115,4,59,4],[115,11,59,11],[115,14,59,14,"sortBy"],[115,20,59,20],[115,27,59,27],[116,2,60,0],[117,2,61,0],[117,11,61,9,"dateToNumber"],[117,23,61,21,"dateToNumber"],[117,24,61,22,"value"],[117,29,61,27],[117,31,61,29],[118,4,62,4],[118,11,62,11,"value"],[118,16,62,16],[118,28,62,28,"Date"],[118,32,62,32],[118,35,62,35,"value"],[118,40,62,40],[118,41,62,41,"getTime"],[118,48,62,48],[118,49,62,49],[118,50,62,50],[118,53,62,53,"value"],[118,58,62,58],[119,2,63,0],[120,2,64,0],[121,2,65,0],[122,0,66,0],[123,0,67,0],[124,2,68,7],[124,8,68,13,"MediaType"],[124,17,68,22],[124,20,68,25,"MediaLibrary"],[124,32,68,37],[124,33,68,37,"default"],[124,40,68,37],[124,41,68,38,"MediaType"],[124,50,68,47],[125,2,69,0],[126,2,70,0],[127,0,71,0],[128,0,72,0],[129,2,73,7],[129,8,73,13,"SortBy"],[129,14,73,19],[129,17,73,22,"MediaLibrary"],[129,29,73,34],[129,30,73,34,"default"],[129,37,73,34],[129,38,73,35,"SortBy"],[129,44,73,41],[130,2,74,0],[131,2,75,0],[132,0,76,0],[133,0,77,0],[134,0,78,0],[135,0,79,0],[136,2,80,7],[136,17,80,22,"isAvailableAsync"],[136,33,80,38,"isAvailableAsync"],[136,34,80,38],[136,36,80,41],[137,4,81,4],[137,11,81,11],[137,12,81,12],[137,13,81,13,"MediaLibrary"],[137,25,81,25],[137,26,81,25,"default"],[137,33,81,25],[137,37,81,29],[137,53,81,45],[137,57,81,49,"MediaLibrary"],[137,69,81,61],[137,70,81,61,"default"],[137,77,81,61],[138,2,82,0],[139,2,83,0],[140,2,84,0],[141,0,85,0],[142,0,86,0],[143,0,87,0],[144,0,88,0],[145,0,89,0],[146,0,90,0],[147,0,91,0],[148,0,92,0],[149,2,93,7],[149,17,93,22,"requestPermissionsAsync"],[149,40,93,45,"requestPermissionsAsync"],[149,41,93,46,"writeOnly"],[149,50,93,55],[149,53,93,58],[149,58,93,63],[149,60,93,65,"granularPermissions"],[149,79,93,84],[149,81,93,86],[150,4,94,4],[150,8,94,8],[150,9,94,9,"MediaLibrary"],[150,21,94,21],[150,22,94,21,"default"],[150,29,94,21],[150,30,94,22,"requestPermissionsAsync"],[150,53,94,45],[150,55,94,47],[151,6,95,8],[151,12,95,14],[151,16,95,18,"UnavailabilityError"],[151,32,95,37],[151,33,95,37,"UnavailabilityError"],[151,52,95,37],[151,53,95,38],[151,67,95,52],[151,69,95,54],[151,94,95,79],[151,95,95,80],[152,4,96,4],[153,4,97,4],[153,8,97,8,"Platform"],[153,16,97,16],[153,17,97,16,"default"],[153,24,97,16],[153,25,97,17,"OS"],[153,27,97,19],[153,32,97,24],[153,41,97,33],[153,43,97,35],[154,6,98,8],[154,13,98,15],[154,19,98,21,"MediaLibrary"],[154,31,98,33],[154,32,98,33,"default"],[154,39,98,33],[154,40,98,34,"requestPermissionsAsync"],[154,63,98,57],[154,64,98,58,"writeOnly"],[154,73,98,67],[154,75,98,69,"granularPermissions"],[154,94,98,88],[154,95,98,89],[155,4,99,4],[156,4,100,4],[156,11,100,11],[156,17,100,17,"MediaLibrary"],[156,29,100,29],[156,30,100,29,"default"],[156,37,100,29],[156,38,100,30,"requestPermissionsAsync"],[156,61,100,53],[156,62,100,54,"writeOnly"],[156,71,100,63],[156,72,100,64],[157,2,101,0],[158,2,102,0],[159,2,103,0],[160,0,104,0],[161,0,105,0],[162,0,106,0],[163,0,107,0],[164,0,108,0],[165,0,109,0],[166,2,110,7],[166,17,110,22,"getPermissionsAsync"],[166,36,110,41,"getPermissionsAsync"],[166,37,110,42,"writeOnly"],[166,46,110,51],[166,49,110,54],[166,54,110,59],[166,56,110,61,"granularPermissions"],[166,75,110,80],[166,77,110,82],[167,4,111,4],[167,8,111,8],[167,9,111,9,"MediaLibrary"],[167,21,111,21],[167,22,111,21,"default"],[167,29,111,21],[167,30,111,22,"getPermissionsAsync"],[167,49,111,41],[167,51,111,43],[168,6,112,8],[168,12,112,14],[168,16,112,18,"UnavailabilityError"],[168,32,112,37],[168,33,112,37,"UnavailabilityError"],[168,52,112,37],[168,53,112,38],[168,67,112,52],[168,69,112,54],[168,90,112,75],[168,91,112,76],[169,4,113,4],[170,4,114,4],[170,8,114,8,"Platform"],[170,16,114,16],[170,17,114,16,"default"],[170,24,114,16],[170,25,114,17,"OS"],[170,27,114,19],[170,32,114,24],[170,41,114,33],[170,43,114,35],[171,6,115,8],[171,13,115,15],[171,19,115,21,"MediaLibrary"],[171,31,115,33],[171,32,115,33,"default"],[171,39,115,33],[171,40,115,34,"getPermissionsAsync"],[171,59,115,53],[171,60,115,54,"writeOnly"],[171,69,115,63],[171,71,115,65,"granularPermissions"],[171,90,115,84],[171,91,115,85],[172,4,116,4],[173,4,117,4],[173,11,117,11],[173,17,117,17,"MediaLibrary"],[173,29,117,29],[173,30,117,29,"default"],[173,37,117,29],[173,38,117,30,"getPermissionsAsync"],[173,57,117,49],[173,58,117,50,"writeOnly"],[173,67,117,59],[173,68,117,60],[174,2,118,0],[175,2,119,0],[176,2,120,0],[177,0,121,0],[178,0,122,0],[179,0,123,0],[180,0,124,0],[181,0,125,0],[182,0,126,0],[183,0,127,0],[184,0,128,0],[185,2,129,7],[185,8,129,13,"usePermissions"],[185,22,129,27],[185,25,129,30],[185,29,129,30,"createPermissionHook"],[185,45,129,50],[185,46,129,50,"createPermissionHook"],[185,66,129,50],[185,68,129,51],[186,4,130,4],[187,4,131,4,"getMethod"],[187,13,131,13],[187,15,131,16,"options"],[187,22,131,23],[187,26,131,28,"getPermissionsAsync"],[187,45,131,47],[187,46,131,48,"options"],[187,53,131,55],[187,55,131,57,"writeOnly"],[187,64,131,66],[187,66,131,68,"options"],[187,73,131,75],[187,75,131,77,"granularPermissions"],[187,94,131,96],[187,95,131,97],[188,4,132,4,"requestMethod"],[188,17,132,17],[188,19,132,20,"options"],[188,26,132,27],[188,30,132,32,"requestPermissionsAsync"],[188,53,132,55],[188,54,132,56,"options"],[188,61,132,63],[188,63,132,65,"writeOnly"],[188,72,132,74],[188,74,132,76,"options"],[188,81,132,83],[188,83,132,85,"granularPermissions"],[188,102,132,104],[189,2,133,0],[189,3,133,1],[189,4,133,2],[190,2,134,0],[191,2,135,0],[192,0,136,0],[193,0,137,0],[194,0,138,0],[195,0,139,0],[196,0,140,0],[197,0,141,0],[198,0,142,0],[199,0,143,0],[200,0,144,0],[201,0,145,0],[202,0,146,0],[203,0,147,0],[204,0,148,0],[205,2,149,7],[205,17,149,22,"presentPermissionsPickerAsync"],[205,46,149,51,"presentPermissionsPickerAsync"],[205,47,149,52,"mediaTypes"],[205,57,149,62],[205,60,149,65],[205,61,149,66],[205,68,149,73],[205,70,149,75],[205,77,149,82],[205,78,149,83],[205,80,149,85],[206,4,150,4],[206,8,150,8,"Platform"],[206,16,150,16],[206,17,150,16,"default"],[206,24,150,16],[206,25,150,17,"OS"],[206,27,150,19],[206,32,150,24],[206,41,150,33],[206,45,150,37,"isExpoGo"],[206,53,150,45],[206,55,150,47],[207,6,151,8],[207,12,151,14],[207,16,151,18,"UnavailabilityError"],[207,32,151,37],[207,33,151,37,"UnavailabilityError"],[207,52,151,37],[207,53,151,38],[207,67,151,52],[207,69,151,54],[207,126,151,111],[207,127,151,112],[208,4,152,4],[209,4,153,4],[209,8,153,8,"Platform"],[209,16,153,16],[209,17,153,16,"default"],[209,24,153,16],[209,25,153,17,"OS"],[209,27,153,19],[209,32,153,24],[209,41,153,33],[209,45,153,37,"Platform"],[209,53,153,45],[209,54,153,45,"default"],[209,61,153,45],[209,62,153,46,"Version"],[209,69,153,53],[209,73,153,57],[209,75,153,59],[209,77,153,61],[210,6,154,8],[210,12,154,14,"MediaLibrary"],[210,24,154,26],[210,25,154,26,"default"],[210,32,154,26],[210,33,154,27,"requestPermissionsAsync"],[210,56,154,50],[210,57,154,51],[210,62,154,56],[210,64,154,58,"mediaTypes"],[210,74,154,68],[210,75,154,69],[211,6,155,8],[212,4,156,4],[213,4,157,4],[213,8,157,8],[213,9,157,9,"MediaLibrary"],[213,21,157,21],[213,22,157,21,"default"],[213,29,157,21],[213,30,157,22,"presentPermissionsPickerAsync"],[213,59,157,51],[213,61,157,53],[214,6,158,8],[214,12,158,14],[214,16,158,18,"UnavailabilityError"],[214,32,158,37],[214,33,158,37,"UnavailabilityError"],[214,52,158,37],[214,53,158,38],[214,67,158,52],[214,69,158,54],[214,100,158,85],[214,101,158,86],[215,4,159,4],[216,4,160,4],[216,11,160,11],[216,17,160,17,"MediaLibrary"],[216,29,160,29],[216,30,160,29,"default"],[216,37,160,29],[216,38,160,30,"presentPermissionsPickerAsync"],[216,67,160,59],[216,68,160,60],[216,69,160,61],[217,2,161,0],[218,2,162,0],[219,2,163,0],[220,0,164,0],[221,0,165,0],[222,0,166,0],[223,0,167,0],[224,0,168,0],[225,0,169,0],[226,0,170,0],[227,0,171,0],[228,0,172,0],[229,0,173,0],[230,0,174,0],[231,0,175,0],[232,0,176,0],[233,0,177,0],[234,0,178,0],[235,2,179,7],[235,17,179,22,"createAssetAsync"],[235,33,179,38,"createAssetAsync"],[235,34,179,39,"localUri"],[235,42,179,47],[235,44,179,49,"album"],[235,49,179,54],[235,51,179,56],[236,4,180,4],[236,8,180,8],[236,9,180,9,"MediaLibrary"],[236,21,180,21],[236,22,180,21,"default"],[236,29,180,21],[236,30,180,22,"createAssetAsync"],[236,46,180,38],[236,48,180,40],[237,6,181,8],[237,12,181,14],[237,16,181,18,"UnavailabilityError"],[237,32,181,37],[237,33,181,37,"UnavailabilityError"],[237,52,181,37],[237,53,181,38],[237,67,181,52],[237,69,181,54],[237,87,181,72],[237,88,181,73],[238,4,182,4],[239,4,183,4],[239,10,183,10,"albumId"],[239,17,183,17],[239,20,183,20,"getId"],[239,25,183,25],[239,26,183,26,"album"],[239,31,183,31],[239,32,183,32],[240,4,184,4],[240,8,184,8],[240,9,184,9,"localUri"],[240,17,184,17],[240,21,184,21],[240,28,184,28,"localUri"],[240,36,184,36],[240,41,184,41],[240,49,184,49],[240,51,184,51],[241,6,185,8],[241,12,185,14],[241,16,185,18,"Error"],[241,21,185,23],[241,22,185,24],[241,73,185,75],[241,74,185,76],[242,4,186,4],[243,4,187,4],[243,10,187,10,"asset"],[243,15,187,15],[243,18,187,18],[243,24,187,24,"MediaLibrary"],[243,36,187,36],[243,37,187,36,"default"],[243,44,187,36],[243,45,187,37,"createAssetAsync"],[243,61,187,53],[243,62,187,54,"localUri"],[243,70,187,62],[243,72,187,64,"albumId"],[243,79,187,71],[243,80,187,72],[244,4,188,4],[244,8,188,8,"Array"],[244,13,188,13],[244,14,188,14,"isArray"],[244,21,188,21],[244,22,188,22,"asset"],[244,27,188,27],[244,28,188,28],[244,30,188,30],[245,6,189,8],[246,6,190,8],[246,13,190,15,"asset"],[246,18,190,20],[246,19,190,21],[246,20,190,22],[246,21,190,23],[247,4,191,4],[248,4,192,4],[248,11,192,11,"asset"],[248,16,192,16],[249,2,193,0],[250,2,194,0],[251,2,195,0],[252,0,196,0],[253,0,197,0],[254,0,198,0],[255,0,199,0],[256,0,200,0],[257,0,201,0],[258,0,202,0],[259,2,203,7],[259,17,203,22,"saveToLibraryAsync"],[259,35,203,40,"saveToLibraryAsync"],[259,36,203,41,"localUri"],[259,44,203,49],[259,46,203,51],[260,4,204,4],[260,8,204,8],[260,9,204,9,"MediaLibrary"],[260,21,204,21],[260,22,204,21,"default"],[260,29,204,21],[260,30,204,22,"saveToLibraryAsync"],[260,48,204,40],[260,50,204,42],[261,6,205,8],[261,12,205,14],[261,16,205,18,"UnavailabilityError"],[261,32,205,37],[261,33,205,37,"UnavailabilityError"],[261,52,205,37],[261,53,205,38],[261,67,205,52],[261,69,205,54],[261,89,205,74],[261,90,205,75],[262,4,206,4],[263,4,207,4],[263,11,207,11],[263,17,207,17,"MediaLibrary"],[263,29,207,29],[263,30,207,29,"default"],[263,37,207,29],[263,38,207,30,"saveToLibraryAsync"],[263,56,207,48],[263,57,207,49,"localUri"],[263,65,207,57],[263,66,207,58],[264,2,208,0],[265,2,209,0],[266,2,210,0],[267,0,211,0],[268,0,212,0],[269,0,213,0],[270,0,214,0],[271,0,215,0],[272,0,216,0],[273,0,217,0],[274,0,218,0],[275,0,219,0],[276,0,220,0],[277,0,221,0],[278,0,222,0],[279,2,223,7],[279,17,223,22,"addAssetsToAlbumAsync"],[279,38,223,43,"addAssetsToAlbumAsync"],[279,39,223,44,"assets"],[279,45,223,50],[279,47,223,52,"album"],[279,52,223,57],[279,54,223,59,"copy"],[279,58,223,63],[279,61,223,66],[279,65,223,70],[279,67,223,72],[280,4,224,4],[280,8,224,8],[280,9,224,9,"MediaLibrary"],[280,21,224,21],[280,22,224,21,"default"],[280,29,224,21],[280,30,224,22,"addAssetsToAlbumAsync"],[280,51,224,43],[280,53,224,45],[281,6,225,8],[281,12,225,14],[281,16,225,18,"UnavailabilityError"],[281,32,225,37],[281,33,225,37,"UnavailabilityError"],[281,52,225,37],[281,53,225,38],[281,67,225,52],[281,69,225,54],[281,92,225,77],[281,93,225,78],[282,4,226,4],[283,4,227,4],[283,10,227,10,"assetIds"],[283,18,227,18],[283,21,227,21,"arrayize"],[283,29,227,29],[283,30,227,30,"assets"],[283,36,227,36],[283,37,227,37],[283,38,227,38,"map"],[283,41,227,41],[283,42,227,42,"getId"],[283,47,227,47],[283,48,227,48],[284,4,228,4],[284,10,228,10,"albumId"],[284,17,228,17],[284,20,228,20,"getId"],[284,25,228,25],[284,26,228,26,"album"],[284,31,228,31],[284,32,228,32],[285,4,229,4,"checkAssetIds"],[285,17,229,17],[285,18,229,18,"assetIds"],[285,26,229,26],[285,27,229,27],[286,4,230,4],[286,8,230,8],[286,9,230,9,"albumId"],[286,16,230,16],[286,20,230,20],[286,27,230,27,"albumId"],[286,34,230,34],[286,39,230,39],[286,47,230,47],[286,49,230,49],[287,6,231,8],[287,12,231,14],[287,16,231,18,"Error"],[287,21,231,23],[287,22,231,24],[287,62,231,64],[287,63,231,65],[288,4,232,4],[289,4,233,4],[289,8,233,8,"Platform"],[289,16,233,16],[289,17,233,16,"default"],[289,24,233,16],[289,25,233,17,"OS"],[289,27,233,19],[289,32,233,24],[289,37,233,29],[289,39,233,31],[290,6,234,8],[290,13,234,15],[290,19,234,21,"MediaLibrary"],[290,31,234,33],[290,32,234,33,"default"],[290,39,234,33],[290,40,234,34,"addAssetsToAlbumAsync"],[290,61,234,55],[290,62,234,56,"assetIds"],[290,70,234,64],[290,72,234,66,"albumId"],[290,79,234,73],[290,80,234,74],[291,4,235,4],[292,4,236,4],[292,11,236,11],[292,17,236,17,"MediaLibrary"],[292,29,236,29],[292,30,236,29,"default"],[292,37,236,29],[292,38,236,30,"addAssetsToAlbumAsync"],[292,59,236,51],[292,60,236,52,"assetIds"],[292,68,236,60],[292,70,236,62,"albumId"],[292,77,236,69],[292,79,236,71],[292,80,236,72],[292,81,236,73,"copy"],[292,85,236,77],[292,86,236,78],[293,2,237,0],[294,2,238,0],[295,2,239,0],[296,0,240,0],[297,0,241,0],[298,0,242,0],[299,0,243,0],[300,0,244,0],[301,0,245,0],[302,0,246,0],[303,0,247,0],[304,2,248,7],[304,17,248,22,"removeAssetsFromAlbumAsync"],[304,43,248,48,"removeAssetsFromAlbumAsync"],[304,44,248,49,"assets"],[304,50,248,55],[304,52,248,57,"album"],[304,57,248,62],[304,59,248,64],[305,4,249,4],[305,8,249,8],[305,9,249,9,"MediaLibrary"],[305,21,249,21],[305,22,249,21,"default"],[305,29,249,21],[305,30,249,22,"removeAssetsFromAlbumAsync"],[305,56,249,48],[305,58,249,50],[306,6,250,8],[306,12,250,14],[306,16,250,18,"UnavailabilityError"],[306,32,250,37],[306,33,250,37,"UnavailabilityError"],[306,52,250,37],[306,53,250,38],[306,67,250,52],[306,69,250,54],[306,97,250,82],[306,98,250,83],[307,4,251,4],[308,4,252,4],[308,10,252,10,"assetIds"],[308,18,252,18],[308,21,252,21,"arrayize"],[308,29,252,29],[308,30,252,30,"assets"],[308,36,252,36],[308,37,252,37],[308,38,252,38,"map"],[308,41,252,41],[308,42,252,42,"getId"],[308,47,252,47],[308,48,252,48],[309,4,253,4],[309,10,253,10,"albumId"],[309,17,253,17],[309,20,253,20,"getId"],[309,25,253,25],[309,26,253,26,"album"],[309,31,253,31],[309,32,253,32],[310,4,254,4,"checkAssetIds"],[310,17,254,17],[310,18,254,18,"assetIds"],[310,26,254,26],[310,27,254,27],[311,4,255,4],[311,11,255,11],[311,17,255,17,"MediaLibrary"],[311,29,255,29],[311,30,255,29,"default"],[311,37,255,29],[311,38,255,30,"removeAssetsFromAlbumAsync"],[311,64,255,56],[311,65,255,57,"assetIds"],[311,73,255,65],[311,75,255,67,"albumId"],[311,82,255,74],[311,83,255,75],[312,2,256,0],[313,2,257,0],[314,2,258,0],[315,0,259,0],[316,0,260,0],[317,0,261,0],[318,0,262,0],[319,0,263,0],[320,0,264,0],[321,2,265,7],[321,17,265,22,"deleteAssetsAsync"],[321,34,265,39,"deleteAssetsAsync"],[321,35,265,40,"assets"],[321,41,265,46],[321,43,265,48],[322,4,266,4],[322,8,266,8],[322,9,266,9,"MediaLibrary"],[322,21,266,21],[322,22,266,21,"default"],[322,29,266,21],[322,30,266,22,"deleteAssetsAsync"],[322,47,266,39],[322,49,266,41],[323,6,267,8],[323,12,267,14],[323,16,267,18,"UnavailabilityError"],[323,32,267,37],[323,33,267,37,"UnavailabilityError"],[323,52,267,37],[323,53,267,38],[323,67,267,52],[323,69,267,54],[323,88,267,73],[323,89,267,74],[324,4,268,4],[325,4,269,4],[325,10,269,10,"assetIds"],[325,18,269,18],[325,21,269,21,"arrayize"],[325,29,269,29],[325,30,269,30,"assets"],[325,36,269,36],[325,37,269,37],[325,38,269,38,"map"],[325,41,269,41],[325,42,269,42,"getId"],[325,47,269,47],[325,48,269,48],[326,4,270,4,"checkAssetIds"],[326,17,270,17],[326,18,270,18,"assetIds"],[326,26,270,26],[326,27,270,27],[327,4,271,4],[327,11,271,11],[327,17,271,17,"MediaLibrary"],[327,29,271,29],[327,30,271,29,"default"],[327,37,271,29],[327,38,271,30,"deleteAssetsAsync"],[327,55,271,47],[327,56,271,48,"assetIds"],[327,64,271,56],[327,65,271,57],[328,2,272,0],[329,2,273,0],[330,2,274,0],[331,0,275,0],[332,0,276,0],[333,0,277,0],[334,0,278,0],[335,0,279,0],[336,2,280,7],[336,17,280,22,"getAssetInfoAsync"],[336,34,280,39,"getAssetInfoAsync"],[336,35,280,40,"asset"],[336,40,280,45],[336,42,280,47,"options"],[336,49,280,54],[336,52,280,57],[337,4,280,59,"shouldDownloadFromNetwork"],[337,29,280,84],[337,31,280,86],[338,2,280,91],[338,3,280,92],[338,5,280,94],[339,4,281,4],[339,8,281,8],[339,9,281,9,"MediaLibrary"],[339,21,281,21],[339,22,281,21,"default"],[339,29,281,21],[339,30,281,22,"getAssetInfoAsync"],[339,47,281,39],[339,49,281,41],[340,6,282,8],[340,12,282,14],[340,16,282,18,"UnavailabilityError"],[340,32,282,37],[340,33,282,37,"UnavailabilityError"],[340,52,282,37],[340,53,282,38],[340,67,282,52],[340,69,282,54],[340,88,282,73],[340,89,282,74],[341,4,283,4],[342,4,284,4],[342,10,284,10,"assetId"],[342,17,284,17],[342,20,284,20,"getId"],[342,25,284,25],[342,26,284,26,"asset"],[342,31,284,31],[342,32,284,32],[343,4,285,4,"checkAssetIds"],[343,17,285,17],[343,18,285,18],[343,19,285,19,"assetId"],[343,26,285,26],[343,27,285,27],[343,28,285,28],[344,4,286,4],[344,10,286,10,"assetInfo"],[344,19,286,19],[344,22,286,22],[344,28,286,28,"MediaLibrary"],[344,40,286,40],[344,41,286,40,"default"],[344,48,286,40],[344,49,286,41,"getAssetInfoAsync"],[344,66,286,58],[344,67,286,59,"assetId"],[344,74,286,66],[344,76,286,68,"options"],[344,83,286,75],[344,84,286,76],[345,4,287,4],[345,8,287,8,"Array"],[345,13,287,13],[345,14,287,14,"isArray"],[345,21,287,21],[345,22,287,22,"assetInfo"],[345,31,287,31],[345,32,287,32],[345,34,287,34],[346,6,288,8],[347,6,289,8],[347,13,289,15,"assetInfo"],[347,22,289,24],[347,23,289,25],[347,24,289,26],[347,25,289,27],[348,4,290,4],[349,4,291,4],[349,11,291,11,"assetInfo"],[349,20,291,20],[350,2,292,0],[351,2,293,0],[352,2,294,0],[353,0,295,0],[354,0,296,0],[355,0,297,0],[356,0,298,0],[357,2,299,7],[357,17,299,22,"getAlbumsAsync"],[357,31,299,36,"getAlbumsAsync"],[357,32,299,37],[358,4,299,39,"includeSmartAlbums"],[358,22,299,57],[358,25,299,60],[359,2,299,66],[359,3,299,67],[359,6,299,70],[359,7,299,71],[359,8,299,72],[359,10,299,74],[360,4,300,4],[360,8,300,8],[360,9,300,9,"MediaLibrary"],[360,21,300,21],[360,22,300,21,"default"],[360,29,300,21],[360,30,300,22,"getAlbumsAsync"],[360,44,300,36],[360,46,300,38],[361,6,301,8],[361,12,301,14],[361,16,301,18,"UnavailabilityError"],[361,32,301,37],[361,33,301,37,"UnavailabilityError"],[361,52,301,37],[361,53,301,38],[361,67,301,52],[361,69,301,54],[361,85,301,70],[361,86,301,71],[362,4,302,4],[363,4,303,4],[363,11,303,11],[363,17,303,17,"MediaLibrary"],[363,29,303,29],[363,30,303,29,"default"],[363,37,303,29],[363,38,303,30,"getAlbumsAsync"],[363,52,303,44],[363,53,303,45],[364,6,303,47,"includeSmartAlbums"],[365,4,303,66],[365,5,303,67],[365,6,303,68],[366,2,304,0],[367,2,305,0],[368,2,306,0],[369,0,307,0],[370,0,308,0],[371,0,309,0],[372,0,310,0],[373,0,311,0],[374,2,312,7],[374,17,312,22,"getAlbumAsync"],[374,30,312,35,"getAlbumAsync"],[374,31,312,36,"title"],[374,36,312,41],[374,38,312,43],[375,4,313,4],[375,8,313,8],[375,9,313,9,"MediaLibrary"],[375,21,313,21],[375,22,313,21,"default"],[375,29,313,21],[375,30,313,22,"getAlbumAsync"],[375,43,313,35],[375,45,313,37],[376,6,314,8],[376,12,314,14],[376,16,314,18,"UnavailabilityError"],[376,32,314,37],[376,33,314,37,"UnavailabilityError"],[376,52,314,37],[376,53,314,38],[376,67,314,52],[376,69,314,54],[376,84,314,69],[376,85,314,70],[377,4,315,4],[378,4,316,4],[378,8,316,8],[378,15,316,15,"title"],[378,20,316,20],[378,25,316,25],[378,33,316,33],[378,35,316,35],[379,6,317,8],[379,12,317,14],[379,16,317,18,"Error"],[379,21,317,23],[379,22,317,24],[379,53,317,55],[379,54,317,56],[380,4,318,4],[381,4,319,4],[381,11,319,11],[381,17,319,17,"MediaLibrary"],[381,29,319,29],[381,30,319,29,"default"],[381,37,319,29],[381,38,319,30,"getAlbumAsync"],[381,51,319,43],[381,52,319,44,"title"],[381,57,319,49],[381,58,319,50],[382,2,320,0],[383,2,321,0],[384,2,322,0],[385,0,323,0],[386,0,324,0],[387,0,325,0],[388,0,326,0],[389,0,327,0],[390,0,328,0],[391,0,329,0],[392,0,330,0],[393,0,331,0],[394,0,332,0],[395,0,333,0],[396,0,334,0],[397,0,335,0],[398,0,336,0],[399,2,337,7],[399,17,337,22,"createAlbumAsync"],[399,33,337,38,"createAlbumAsync"],[399,34,337,39,"albumName"],[399,43,337,48],[399,45,337,50,"asset"],[399,50,337,55],[399,52,337,57,"copyAsset"],[399,61,337,66],[399,64,337,69],[399,68,337,73],[399,70,337,75,"initialAssetLocalUri"],[399,90,337,95],[399,92,337,97],[400,4,338,4],[400,8,338,8],[400,9,338,9,"MediaLibrary"],[400,21,338,21],[400,22,338,21,"default"],[400,29,338,21],[400,30,338,22,"createAlbumAsync"],[400,46,338,38],[400,48,338,40],[401,6,339,8],[401,12,339,14],[401,16,339,18,"UnavailabilityError"],[401,32,339,37],[401,33,339,37,"UnavailabilityError"],[401,52,339,37],[401,53,339,38],[401,67,339,52],[401,69,339,54],[401,87,339,72],[401,88,339,73],[402,4,340,4],[403,4,341,4],[403,10,341,10,"assetId"],[403,17,341,17],[403,20,341,20,"getId"],[403,25,341,25],[403,26,341,26,"asset"],[403,31,341,31],[403,32,341,32],[404,4,342,4],[404,8,342,8,"Platform"],[404,16,342,16],[404,17,342,16,"default"],[404,24,342,16],[404,25,342,17,"OS"],[404,27,342,19],[404,32,342,24],[404,41,342,33],[404,46,343,9],[404,53,343,16,"assetId"],[404,60,343,23],[404,65,343,28],[404,73,343,36],[404,77,343,40,"assetId"],[404,84,343,47],[404,85,343,48,"length"],[404,91,343,54],[404,96,343,59],[404,97,343,60],[404,98,343,61],[404,102,344,8],[404,103,344,9,"initialAssetLocalUri"],[404,123,344,29],[404,125,344,31],[405,6,345,8],[406,6,346,8],[406,12,346,14],[406,16,346,18,"Error"],[406,21,346,23],[406,22,346,24],[406,108,346,110],[406,109,346,111],[407,4,347,4],[408,4,348,4],[408,8,348,8],[408,9,348,9,"albumName"],[408,18,348,18],[408,22,348,22],[408,29,348,29,"albumName"],[408,38,348,38],[408,43,348,43],[408,51,348,51],[408,53,348,53],[409,6,349,8],[409,12,349,14],[409,16,349,18,"Error"],[409,21,349,23],[409,22,349,24],[409,74,349,76],[409,75,349,77],[410,4,350,4],[411,4,351,4],[411,8,351,8,"assetId"],[411,15,351,15],[411,19,351,19],[411,23,351,23],[411,27,351,27],[411,34,351,34,"assetId"],[411,41,351,41],[411,46,351,46],[411,54,351,54],[411,56,351,56],[412,6,352,8],[412,12,352,14],[412,16,352,18,"Error"],[412,21,352,23],[412,22,352,24],[412,50,352,52],[412,51,352,53],[413,4,353,4],[414,4,354,4],[414,8,354,8,"Platform"],[414,16,354,16],[414,17,354,16,"default"],[414,24,354,16],[414,25,354,17,"OS"],[414,27,354,19],[414,32,354,24],[414,37,354,29],[414,39,354,31],[415,6,355,8],[415,13,355,15],[415,19,355,21,"MediaLibrary"],[415,31,355,33],[415,32,355,33,"default"],[415,39,355,33],[415,40,355,34,"createAlbumAsync"],[415,56,355,50],[415,57,355,51,"albumName"],[415,66,355,60],[415,68,355,62,"assetId"],[415,75,355,69],[415,77,355,71,"initialAssetLocalUri"],[415,97,355,91],[415,98,355,92],[416,4,356,4],[417,4,357,4],[417,11,357,11],[417,17,357,17,"MediaLibrary"],[417,29,357,29],[417,30,357,29,"default"],[417,37,357,29],[417,38,357,30,"createAlbumAsync"],[417,54,357,46],[417,55,357,47,"albumName"],[417,64,357,56],[417,66,357,58,"assetId"],[417,73,357,65],[417,75,357,67],[417,76,357,68],[417,77,357,69,"copyAsset"],[417,86,357,78],[417,88,357,80,"initialAssetLocalUri"],[417,108,357,100],[417,109,357,101],[418,2,358,0],[419,2,359,0],[420,2,360,0],[421,0,361,0],[422,0,362,0],[423,0,363,0],[424,0,364,0],[425,0,365,0],[426,0,366,0],[427,0,367,0],[428,0,368,0],[429,0,369,0],[430,2,370,7],[430,17,370,22,"deleteAlbumsAsync"],[430,34,370,39,"deleteAlbumsAsync"],[430,35,370,40,"albums"],[430,41,370,46],[430,43,370,48,"assetRemove"],[430,54,370,59],[430,57,370,62],[430,62,370,67],[430,64,370,69],[431,4,371,4],[431,8,371,8],[431,9,371,9,"MediaLibrary"],[431,21,371,21],[431,22,371,21,"default"],[431,29,371,21],[431,30,371,22,"deleteAlbumsAsync"],[431,47,371,39],[431,49,371,41],[432,6,372,8],[432,12,372,14],[432,16,372,18,"UnavailabilityError"],[432,32,372,37],[432,33,372,37,"UnavailabilityError"],[432,52,372,37],[432,53,372,38],[432,67,372,52],[432,69,372,54],[432,88,372,73],[432,89,372,74],[433,4,373,4],[434,4,374,4],[434,10,374,10,"albumIds"],[434,18,374,18],[434,21,374,21,"arrayize"],[434,29,374,29],[434,30,374,30,"albums"],[434,36,374,36],[434,37,374,37],[434,38,374,38,"map"],[434,41,374,41],[434,42,374,42,"getId"],[434,47,374,47],[434,48,374,48],[435,4,375,4,"checkAlbumIds"],[435,17,375,17],[435,18,375,18,"albumIds"],[435,26,375,26],[435,27,375,27],[436,4,376,4],[436,8,376,8,"Platform"],[436,16,376,16],[436,17,376,16,"default"],[436,24,376,16],[436,25,376,17,"OS"],[436,27,376,19],[436,32,376,24],[436,41,376,33],[436,43,376,35],[437,6,377,8],[437,13,377,15],[437,19,377,21,"MediaLibrary"],[437,31,377,33],[437,32,377,33,"default"],[437,39,377,33],[437,40,377,34,"deleteAlbumsAsync"],[437,57,377,51],[437,58,377,52,"albumIds"],[437,66,377,60],[437,67,377,61],[438,4,378,4],[439,4,379,4],[439,11,379,11],[439,17,379,17,"MediaLibrary"],[439,29,379,29],[439,30,379,29,"default"],[439,37,379,29],[439,38,379,30,"deleteAlbumsAsync"],[439,55,379,47],[439,56,379,48,"albumIds"],[439,64,379,56],[439,66,379,58],[439,67,379,59],[439,68,379,60,"assetRemove"],[439,79,379,71],[439,80,379,72],[440,2,380,0],[441,2,381,0],[442,2,382,0],[443,0,383,0],[444,0,384,0],[445,0,385,0],[446,0,386,0],[447,2,387,7],[447,17,387,22,"getAssetsAsync"],[447,31,387,36,"getAssetsAsync"],[447,32,387,37,"assetsOptions"],[447,45,387,50],[447,48,387,53],[447,49,387,54],[447,50,387,55],[447,52,387,57],[448,4,388,4],[448,8,388,8],[448,9,388,9,"MediaLibrary"],[448,21,388,21],[448,22,388,21,"default"],[448,29,388,21],[448,30,388,22,"getAssetsAsync"],[448,44,388,36],[448,46,388,38],[449,6,389,8],[449,12,389,14],[449,16,389,18,"UnavailabilityError"],[449,32,389,37],[449,33,389,37,"UnavailabilityError"],[449,52,389,37],[449,53,389,38],[449,67,389,52],[449,69,389,54],[449,85,389,70],[449,86,389,71],[450,4,390,4],[451,4,391,4],[451,10,391,10],[452,6,391,12,"first"],[452,11,391,17],[453,6,391,19,"after"],[453,11,391,24],[454,6,391,26,"album"],[454,11,391,31],[455,6,391,33,"sortBy"],[455,12,391,39],[456,6,391,41,"mediaType"],[456,15,391,50],[457,6,391,52,"createdAfter"],[457,18,391,64],[458,6,391,66,"createdBefore"],[458,19,391,79],[459,6,391,81,"mediaSubtypes"],[459,19,391,94],[460,6,391,96,"resolveWithFullInfo"],[461,4,391,117],[461,5,391,118],[461,8,391,121,"assetsOptions"],[461,21,391,134],[462,4,392,4],[462,10,392,10,"options"],[462,17,392,17],[462,20,392,20],[463,6,393,8,"first"],[463,11,393,13],[463,13,393,15,"first"],[463,18,393,20],[463,22,393,24],[463,26,393,28],[463,29,393,31],[463,31,393,33],[463,34,393,36,"first"],[463,39,393,41],[464,6,394,8,"after"],[464,11,394,13],[464,13,394,15,"getId"],[464,18,394,20],[464,19,394,21,"after"],[464,24,394,26],[464,25,394,27],[465,6,395,8,"album"],[465,11,395,13],[465,13,395,15,"getId"],[465,18,395,20],[465,19,395,21,"album"],[465,24,395,26],[465,25,395,27],[466,6,396,8,"sortBy"],[466,12,396,14],[466,14,396,16,"arrayize"],[466,22,396,24],[466,23,396,25,"sortBy"],[466,29,396,31],[466,30,396,32],[467,6,397,8,"mediaType"],[467,15,397,17],[467,17,397,19,"arrayize"],[467,25,397,27],[467,26,397,28,"mediaType"],[467,35,397,37],[467,39,397,41],[467,40,397,42,"MediaType"],[467,49,397,51],[467,50,397,52,"photo"],[467,55,397,57],[467,56,397,58],[467,57,397,59],[468,6,398,8,"mediaSubtypes"],[468,19,398,21],[468,21,398,23,"arrayize"],[468,29,398,31],[468,30,398,32,"mediaSubtypes"],[468,43,398,45],[468,44,398,46],[469,6,399,8,"createdAfter"],[469,18,399,20],[469,20,399,22,"dateToNumber"],[469,32,399,34],[469,33,399,35,"createdAfter"],[469,45,399,47],[469,46,399,48],[470,6,400,8,"createdBefore"],[470,19,400,21],[470,21,400,23,"dateToNumber"],[470,33,400,35],[470,34,400,36,"createdBefore"],[470,47,400,49],[470,48,400,50],[471,6,401,8,"resolveWithFullInfo"],[471,25,401,27],[471,27,401,29,"resolveWithFullInfo"],[471,46,401,48],[471,50,401,52],[472,4,402,4],[472,5,402,5],[473,4,403,4],[473,8,403,8,"first"],[473,13,403,13],[473,17,403,17],[473,21,403,21],[473,25,403,25],[473,32,403,32,"options"],[473,39,403,39],[473,40,403,40,"first"],[473,45,403,45],[473,50,403,50],[473,58,403,58],[473,60,403,60],[474,6,404,8],[474,12,404,14],[474,16,404,18,"Error"],[474,21,404,23],[474,22,404,24],[474,56,404,58],[474,57,404,59],[475,4,405,4],[476,4,406,4],[476,8,406,8,"after"],[476,13,406,13],[476,17,406,17],[476,21,406,21],[476,25,406,25],[476,32,406,32,"options"],[476,39,406,39],[476,40,406,40,"after"],[476,45,406,45],[476,50,406,50],[476,58,406,58],[476,60,406,60],[477,6,407,8],[477,12,407,14],[477,16,407,18,"Error"],[477,21,407,23],[477,22,407,24],[477,56,407,58],[477,57,407,59],[478,4,408,4],[479,4,409,4],[479,8,409,8,"album"],[479,13,409,13],[479,17,409,17],[479,21,409,21],[479,25,409,25],[479,32,409,32,"options"],[479,39,409,39],[479,40,409,40,"album"],[479,45,409,45],[479,50,409,50],[479,58,409,58],[479,60,409,60],[480,6,410,8],[480,12,410,14],[480,16,410,18,"Error"],[480,21,410,23],[480,22,410,24],[480,56,410,58],[480,57,410,59],[481,4,411,4],[482,4,412,4],[482,8,412,8,"after"],[482,13,412,13],[482,17,412,17],[482,21,412,21],[482,25,412,25,"Platform"],[482,33,412,33],[482,34,412,33,"default"],[482,41,412,33],[482,42,412,34,"OS"],[482,44,412,36],[482,49,412,41],[482,58,412,50],[482,62,412,54,"isNaN"],[482,67,412,59],[482,68,412,60,"parseInt"],[482,76,412,68],[482,77,412,69,"getId"],[482,82,412,74],[482,83,412,75,"after"],[482,88,412,80],[482,89,412,81],[482,91,412,83],[482,93,412,85],[482,94,412,86],[482,95,412,87],[482,97,412,89],[483,6,413,8],[483,12,413,14],[483,16,413,18,"Error"],[483,21,413,23],[483,22,413,24],[483,58,413,60],[483,59,413,61],[484,4,414,4],[485,4,415,4],[485,8,415,8,"first"],[485,13,415,13],[485,17,415,17],[485,21,415,21],[485,25,415,25,"first"],[485,30,415,30],[485,33,415,33],[485,34,415,34],[485,36,415,36],[486,6,416,8],[486,12,416,14],[486,16,416,18,"Error"],[486,21,416,23],[486,22,416,24],[486,66,416,68],[486,67,416,69],[487,4,417,4],[488,4,418,4,"options"],[488,11,418,11],[488,12,418,12,"mediaType"],[488,21,418,21],[488,22,418,22,"forEach"],[488,29,418,29],[488,30,418,30,"checkMediaType"],[488,44,418,44],[488,45,418,45],[489,4,419,4],[490,4,420,4],[490,11,420,11],[490,17,420,17,"MediaLibrary"],[490,29,420,29],[490,30,420,29,"default"],[490,37,420,29],[490,38,420,30,"getAssetsAsync"],[490,52,420,44],[490,53,420,45],[491,6,421,8],[491,9,421,11,"options"],[491,16,421,18],[492,6,422,8,"sortBy"],[492,12,422,14],[492,14,422,16,"options"],[492,21,422,23],[492,22,422,24,"sortBy"],[492,28,422,30],[492,29,422,31,"map"],[492,32,422,34],[492,33,422,35,"sortByOptionToString"],[492,53,422,55],[493,4,423,4],[493,5,423,5],[493,6,423,6],[494,2,424,0],[495,2,425,0],[496,2,426,0],[497,0,427,0],[498,0,428,0],[499,0,429,0],[500,0,430,0],[501,0,431,0],[502,0,432,0],[503,0,433,0],[504,0,434,0],[505,0,435,0],[506,0,436,0],[507,2,437,7],[507,11,437,16,"addListener"],[507,22,437,27,"addListener"],[507,23,437,28,"listener"],[507,31,437,36],[507,33,437,38],[508,4,438,4],[508,11,438,11,"MediaLibrary"],[508,23,438,23],[508,24,438,23,"default"],[508,31,438,23],[508,32,438,24,"addListener"],[508,43,438,35],[508,44,438,36,"MediaLibrary"],[508,56,438,48],[508,57,438,48,"default"],[508,64,438,48],[508,65,438,49,"CHANGE_LISTENER_NAME"],[508,85,438,69],[508,87,438,71,"listener"],[508,95,438,79],[508,96,438,80],[509,2,439,0],[510,2,440,0],[511,2,441,7],[511,11,441,16,"removeSubscription"],[511,29,441,34,"removeSubscription"],[511,30,441,35,"subscription"],[511,42,441,47],[511,44,441,49],[512,4,442,4,"subscription"],[512,16,442,16],[512,17,442,17,"remove"],[512,23,442,23],[512,24,442,24],[512,25,442,25],[513,2,443,0],[514,2,444,0],[515,2,445,0],[516,0,446,0],[517,0,447,0],[518,2,448,7],[518,11,448,16,"removeAllListeners"],[518,29,448,34,"removeAllListeners"],[518,30,448,34],[518,32,448,37],[519,4,449,4,"MediaLibrary"],[519,16,449,16],[519,17,449,16,"default"],[519,24,449,16],[519,25,449,17,"removeAllListeners"],[519,43,449,35],[519,44,449,36,"MediaLibrary"],[519,56,449,48],[519,57,449,48,"default"],[519,64,449,48],[519,65,449,49,"CHANGE_LISTENER_NAME"],[519,85,449,69],[519,86,449,70],[520,2,450,0],[521,2,451,0],[522,2,452,0],[523,0,453,0],[524,0,454,0],[525,0,455,0],[526,0,456,0],[527,0,457,0],[528,2,458,7],[528,17,458,22,"getMomentsAsync"],[528,32,458,37,"getMomentsAsync"],[528,33,458,37],[528,35,458,40],[529,4,459,4],[529,8,459,8],[529,9,459,9,"MediaLibrary"],[529,21,459,21],[529,22,459,21,"default"],[529,29,459,21],[529,30,459,22,"getMomentsAsync"],[529,45,459,37],[529,47,459,39],[530,6,460,8],[530,12,460,14],[530,16,460,18,"UnavailabilityError"],[530,32,460,37],[530,33,460,37,"UnavailabilityError"],[530,52,460,37],[530,53,460,38],[530,67,460,52],[530,69,460,54],[530,86,460,71],[530,87,460,72],[531,4,461,4],[532,4,462,4],[532,11,462,11],[532,17,462,17,"MediaLibrary"],[532,29,462,29],[532,30,462,29,"default"],[532,37,462,29],[532,38,462,30,"getMomentsAsync"],[532,53,462,45],[532,54,462,46],[532,55,462,47],[533,2,463,0],[534,2,464,0],[535,2,465,0],[536,0,466,0],[537,0,467,0],[538,0,468,0],[539,0,469,0],[540,0,470,0],[541,0,471,0],[542,0,472,0],[543,0,473,0],[544,0,474,0],[545,0,475,0],[546,0,476,0],[547,0,477,0],[548,0,478,0],[549,0,479,0],[550,0,480,0],[551,0,481,0],[552,0,482,0],[553,0,483,0],[554,0,484,0],[555,0,485,0],[556,0,486,0],[557,0,487,0],[558,0,488,0],[559,0,489,0],[560,2,490,7],[560,17,490,22,"migrateAlbumIfNeededAsync"],[560,42,490,47,"migrateAlbumIfNeededAsync"],[560,43,490,48,"album"],[560,48,490,53],[560,50,490,55],[561,4,491,4],[561,8,491,8],[561,9,491,9,"MediaLibrary"],[561,21,491,21],[561,22,491,21,"default"],[561,29,491,21],[561,30,491,22,"migrateAlbumIfNeededAsync"],[561,55,491,47],[561,57,491,49],[562,6,492,8],[563,4,493,4],[564,4,494,4],[564,11,494,11],[564,17,494,17,"MediaLibrary"],[564,29,494,29],[564,30,494,29,"default"],[564,37,494,29],[564,38,494,30,"migrateAlbumIfNeededAsync"],[564,63,494,55],[564,64,494,56,"getId"],[564,69,494,61],[564,70,494,62,"album"],[564,75,494,67],[564,76,494,68],[564,77,494,69],[565,2,495,0],[566,2,496,0],[567,2,497,0],[568,0,498,0],[569,0,499,0],[570,0,500,0],[571,0,501,0],[572,0,502,0],[573,0,503,0],[574,2,504,7],[574,17,504,22,"albumNeedsMigrationAsync"],[574,41,504,46,"albumNeedsMigrationAsync"],[574,42,504,47,"album"],[574,47,504,52],[574,49,504,54],[575,4,505,4],[575,8,505,8],[575,9,505,9,"MediaLibrary"],[575,21,505,21],[575,22,505,21,"default"],[575,29,505,21],[575,30,505,22,"albumNeedsMigrationAsync"],[575,54,505,46],[575,56,505,48],[576,6,506,8],[576,13,506,15],[576,18,506,20],[577,4,507,4],[578,4,508,4],[578,11,508,11],[578,17,508,17,"MediaLibrary"],[578,29,508,29],[578,30,508,29,"default"],[578,37,508,29],[578,38,508,30,"albumNeedsMigrationAsync"],[578,62,508,54],[578,63,508,55,"getId"],[578,68,508,60],[578,69,508,61,"album"],[578,74,508,66],[578,75,508,67],[578,76,508,68],[579,2,509,0],[580,0,509,1],[580,3]],"functionMap":{"names":["<global>","arrayize","getId","checkAssetIds","assetIds.some$argument_0","checkAlbumIds","albumIds.some$argument_0","checkMediaType","checkSortBy","checkSortByKey","sortByOptionToString","dateToNumber","isAvailableAsync","requestPermissionsAsync","getPermissionsAsync","createPermissionHook$argument_0.getMethod","createPermissionHook$argument_0.requestMethod","presentPermissionsPickerAsync","createAssetAsync","saveToLibraryAsync","addAssetsToAlbumAsync","removeAssetsFromAlbumAsync","deleteAssetsAsync","getAssetInfoAsync","getAlbumsAsync","getAlbumAsync","createAlbumAsync","deleteAlbumsAsync","getAssetsAsync","addListener","removeSubscription","removeAllListeners","getMomentsAsync","migrateAlbumIfNeededAsync","albumNeedsMigrationAsync"],"mappings":"AAA;ACU;CDK;AEC;CFK;AGC;sBCC,qCD;CHG;AKC;sBCC,qCD;CLG;AOC;CPI;AQC;CRU;ASC;CTI;AUC;CVM;AWC;CXE;OYiB;CZE;OaW;CbQ;OcS;CdQ;eea,kFf;mBgBC,sFhB;OiBiB;CjBY;OkBkB;ClBc;OmBU;CnBK;OoBe;CpBc;OqBW;CrBQ;OsBS;CtBO;OuBQ;CvBY;OwBO;CxBK;OyBQ;CzBQ;O0BiB;C1BqB;O2BY;C3BU;O4BO;C5BqC;O6Ba;C7BE;O8BE;C9BE;O+BK;C/BE;OgCQ;ChCK;OiC2B;CjCK;OkCS;ClCK"},"hasCjsExports":false},"type":"js/module"}]}