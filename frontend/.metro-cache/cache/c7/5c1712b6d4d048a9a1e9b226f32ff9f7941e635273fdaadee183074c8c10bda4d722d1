{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"identity\", {\n    enumerable: true,\n    get: function () {\n      return identity;\n    }\n  });\n  exports.reset = reset;\n  exports.toArray = toArray;\n  exports.append = append;\n  exports.appendTransform = appendTransform;\n  /**\n   * based on\n   * https://github.com/CreateJS/EaselJS/blob/631cdffb85eff9413dab43b4676f059b4232d291/src/easeljs/geom/Matrix2D.js\n   */\n  var DEG_TO_RAD = Math.PI / 180;\n  var identity = [1, 0, 0, 1, 0, 0];\n  var a = 1;\n  var b = 0;\n  var c = 0;\n  var d = 1;\n  var tx = 0;\n  var ty = 0;\n  var hasInitialState = true;\n\n  /**\n   * Represents an affine transformation matrix, and provides tools for concatenating transforms.\n   *\n   * This matrix can be visualized as:\n   *\n   * \t[ a  c  tx\n   * \t  b  d  ty\n   * \t  0  0  1  ]\n   *\n   * Note the locations of b and c.\n   **/\n\n  /**\n   * Reset current matrix to an identity matrix.\n   * @method reset\n   **/\n  function reset() {\n    if (hasInitialState) {\n      return;\n    }\n    a = d = 1;\n    b = c = tx = ty = 0;\n    hasInitialState = true;\n  }\n\n  /**\n   * Returns an array with current matrix values.\n   * @method toArray\n   * @return {Array} an array with current matrix values.\n   **/\n  function toArray() {\n    if (hasInitialState) {\n      return identity;\n    }\n    return [a, b, c, d, tx, ty];\n  }\n\n  /**\n   * Appends the specified matrix properties to this matrix. All parameters are required.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @method append\n   * @param {Number} a2\n   * @param {Number} b2\n   * @param {Number} c2\n   * @param {Number} d2\n   * @param {Number} tx2\n   * @param {Number} ty2\n   **/\n  function append(a2, b2, c2, d2, tx2, ty2) {\n    var change = a2 !== 1 || b2 !== 0 || c2 !== 0 || d2 !== 1;\n    var translate = tx2 !== 0 || ty2 !== 0;\n    if (!change && !translate) {\n      return;\n    }\n    if (hasInitialState) {\n      hasInitialState = false;\n      a = a2;\n      b = b2;\n      c = c2;\n      d = d2;\n      tx = tx2;\n      ty = ty2;\n      return;\n    }\n    var a1 = a;\n    var b1 = b;\n    var c1 = c;\n    var d1 = d;\n    if (change) {\n      a = a1 * a2 + c1 * b2;\n      b = b1 * a2 + d1 * b2;\n      c = a1 * c2 + c1 * d2;\n      d = b1 * c2 + d1 * d2;\n    }\n    if (translate) {\n      tx = a1 * tx2 + c1 * ty2 + tx;\n      ty = b1 * tx2 + d1 * ty2 + ty;\n    }\n  }\n\n  /**\n   * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n   * For example, you can use this to generate a matrix representing the transformations of a display object:\n   *\n   * \treset();\n   * \tappendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n   * \tvar matrix = toArray()\n   *\n   * @method appendTransform\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} scaleX\n   * @param {Number} scaleY\n   * @param {Number} rotation\n   * @param {Number} skewX\n   * @param {Number} skewY\n   * @param {Number} regX Optional.\n   * @param {Number} regY Optional.\n   **/\n  function appendTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    if (x === 0 && y === 0 && scaleX === 1 && scaleY === 1 && rotation === 0 && skewX === 0 && skewY === 0 && regX === 0 && regY === 0) {\n      return;\n    }\n    var cos, sin;\n    if (rotation % 360) {\n      var r = rotation * DEG_TO_RAD;\n      cos = Math.cos(r);\n      sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n    var a2 = cos * scaleX;\n    var b2 = sin * scaleX;\n    var c2 = -sin * scaleY;\n    var d2 = cos * scaleY;\n    if (skewX || skewY) {\n      var b1 = Math.tan(skewY * DEG_TO_RAD);\n      var c1 = Math.tan(skewX * DEG_TO_RAD);\n      append(a2 + c1 * b2, b1 * a2 + b2, c2 + c1 * d2, b1 * c2 + d2, x, y);\n    } else {\n      append(a2, b2, c2, d2, x, y);\n    }\n    if (regX || regY) {\n      // append the registration offset:\n      tx -= regX * a + regY * c;\n      ty -= regX * b + regY * d;\n      hasInitialState = false;\n    }\n  }\n});","lineCount":161,"map":[[7,2,7,0,"Object"],[7,8,7,0],[7,9,7,0,"defineProperty"],[7,23,7,0],[7,24,7,0,"exports"],[7,31,7,0],[8,4,7,0,"enumerable"],[8,14,7,0],[9,4,7,0,"get"],[9,7,7,0],[9,18,7,0,"get"],[9,19,7,0],[10,6,7,0],[10,13,7,0,"identity"],[10,21,7,0],[11,4,7,0],[12,2,7,0],[13,2,35,0,"exports"],[13,9,35,0],[13,10,35,0,"reset"],[13,15,35,0],[13,18,35,0,"reset"],[13,23,35,0],[14,2,49,0,"exports"],[14,9,49,0],[14,10,49,0,"toArray"],[14,17,49,0],[14,20,49,0,"toArray"],[14,27,49,0],[15,2,67,0,"exports"],[15,9,67,0],[15,10,67,0,"append"],[15,16,67,0],[15,19,67,0,"append"],[15,25,67,0],[16,2,125,0,"exports"],[16,9,125,0],[16,10,125,0,"appendTransform"],[16,25,125,0],[16,28,125,0,"appendTransform"],[16,43,125,0],[17,2,1,0],[18,0,2,0],[19,0,3,0],[20,0,4,0],[21,2,5,0],[21,6,5,6,"DEG_TO_RAD"],[21,16,5,16],[21,19,5,19,"Math"],[21,23,5,23],[21,24,5,24,"PI"],[21,26,5,26],[21,29,5,29],[21,32,5,32],[22,2,7,7],[22,6,7,13,"identity"],[22,14,7,71],[22,17,7,74],[22,18,8,2],[22,19,8,3],[22,21,8,5],[22,22,8,6],[22,24,8,8],[22,25,8,9],[22,27,8,11],[22,28,8,12],[22,30,8,14],[22,31,8,15],[22,33,8,17],[22,34,8,18],[22,35,9,1],[23,2,11,0],[23,6,11,4,"a"],[23,7,11,5],[23,10,11,8],[23,11,11,9],[24,2,12,0],[24,6,12,4,"b"],[24,7,12,5],[24,10,12,8],[24,11,12,9],[25,2,13,0],[25,6,13,4,"c"],[25,7,13,5],[25,10,13,8],[25,11,13,9],[26,2,14,0],[26,6,14,4,"d"],[26,7,14,5],[26,10,14,8],[26,11,14,9],[27,2,15,0],[27,6,15,4,"tx"],[27,8,15,6],[27,11,15,9],[27,12,15,10],[28,2,16,0],[28,6,16,4,"ty"],[28,8,16,6],[28,11,16,9],[28,12,16,10],[29,2,17,0],[29,6,17,4,"hasInitialState"],[29,21,17,19],[29,24,17,22],[29,28,17,26],[31,2,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[43,2,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,2,35,7],[47,11,35,16,"reset"],[47,16,35,21,"reset"],[47,17,35,21],[47,19,35,24],[48,4,36,2],[48,8,36,6,"hasInitialState"],[48,23,36,21],[48,25,36,23],[49,6,37,4],[50,4,38,2],[51,4,39,2,"a"],[51,5,39,3],[51,8,39,6,"d"],[51,9,39,7],[51,12,39,10],[51,13,39,11],[52,4,40,2,"b"],[52,5,40,3],[52,8,40,6,"c"],[52,9,40,7],[52,12,40,10,"tx"],[52,14,40,12],[52,17,40,15,"ty"],[52,19,40,17],[52,22,40,20],[52,23,40,21],[53,4,41,2,"hasInitialState"],[53,19,41,17],[53,22,41,20],[53,26,41,24],[54,2,42,0],[56,2,44,0],[57,0,45,0],[58,0,46,0],[59,0,47,0],[60,0,48,0],[61,2,49,7],[61,11,49,16,"toArray"],[61,18,49,23,"toArray"],[61,19,49,23],[61,21,49,76],[62,4,50,2],[62,8,50,6,"hasInitialState"],[62,23,50,21],[62,25,50,23],[63,6,51,4],[63,13,51,11,"identity"],[63,21,51,19],[64,4,52,2],[65,4,53,2],[65,11,53,9],[65,12,53,10,"a"],[65,13,53,11],[65,15,53,13,"b"],[65,16,53,14],[65,18,53,16,"c"],[65,19,53,17],[65,21,53,19,"d"],[65,22,53,20],[65,24,53,22,"tx"],[65,26,53,24],[65,28,53,26,"ty"],[65,30,53,28],[65,31,53,29],[66,2,54,0],[68,2,56,0],[69,0,57,0],[70,0,58,0],[71,0,59,0],[72,0,60,0],[73,0,61,0],[74,0,62,0],[75,0,63,0],[76,0,64,0],[77,0,65,0],[78,0,66,0],[79,2,67,7],[79,11,67,16,"append"],[79,17,67,22,"append"],[79,18,68,2,"a2"],[79,20,68,12],[79,22,69,2,"b2"],[79,24,69,12],[79,26,70,2,"c2"],[79,28,70,12],[79,30,71,2,"d2"],[79,32,71,12],[79,34,72,2,"tx2"],[79,37,72,13],[79,39,73,2,"ty2"],[79,42,73,13],[79,44,74,2],[80,4,75,2],[80,8,75,8,"change"],[80,14,75,14],[80,17,75,17,"a2"],[80,19,75,19],[80,24,75,24],[80,25,75,25],[80,29,75,29,"b2"],[80,31,75,31],[80,36,75,36],[80,37,75,37],[80,41,75,41,"c2"],[80,43,75,43],[80,48,75,48],[80,49,75,49],[80,53,75,53,"d2"],[80,55,75,55],[80,60,75,60],[80,61,75,61],[81,4,76,2],[81,8,76,8,"translate"],[81,17,76,17],[81,20,76,20,"tx2"],[81,23,76,23],[81,28,76,28],[81,29,76,29],[81,33,76,33,"ty2"],[81,36,76,36],[81,41,76,41],[81,42,76,42],[82,4,77,2],[82,8,77,6],[82,9,77,7,"change"],[82,15,77,13],[82,19,77,17],[82,20,77,18,"translate"],[82,29,77,27],[82,31,77,29],[83,6,78,4],[84,4,79,2],[85,4,80,2],[85,8,80,6,"hasInitialState"],[85,23,80,21],[85,25,80,23],[86,6,81,4,"hasInitialState"],[86,21,81,19],[86,24,81,22],[86,29,81,27],[87,6,82,4,"a"],[87,7,82,5],[87,10,82,8,"a2"],[87,12,82,10],[88,6,83,4,"b"],[88,7,83,5],[88,10,83,8,"b2"],[88,12,83,10],[89,6,84,4,"c"],[89,7,84,5],[89,10,84,8,"c2"],[89,12,84,10],[90,6,85,4,"d"],[90,7,85,5],[90,10,85,8,"d2"],[90,12,85,10],[91,6,86,4,"tx"],[91,8,86,6],[91,11,86,9,"tx2"],[91,14,86,12],[92,6,87,4,"ty"],[92,8,87,6],[92,11,87,9,"ty2"],[92,14,87,12],[93,6,88,4],[94,4,89,2],[95,4,90,2],[95,8,90,8,"a1"],[95,10,90,10],[95,13,90,13,"a"],[95,14,90,14],[96,4,91,2],[96,8,91,8,"b1"],[96,10,91,10],[96,13,91,13,"b"],[96,14,91,14],[97,4,92,2],[97,8,92,8,"c1"],[97,10,92,10],[97,13,92,13,"c"],[97,14,92,14],[98,4,93,2],[98,8,93,8,"d1"],[98,10,93,10],[98,13,93,13,"d"],[98,14,93,14],[99,4,94,2],[99,8,94,6,"change"],[99,14,94,12],[99,16,94,14],[100,6,95,4,"a"],[100,7,95,5],[100,10,95,8,"a1"],[100,12,95,10],[100,15,95,13,"a2"],[100,17,95,15],[100,20,95,18,"c1"],[100,22,95,20],[100,25,95,23,"b2"],[100,27,95,25],[101,6,96,4,"b"],[101,7,96,5],[101,10,96,8,"b1"],[101,12,96,10],[101,15,96,13,"a2"],[101,17,96,15],[101,20,96,18,"d1"],[101,22,96,20],[101,25,96,23,"b2"],[101,27,96,25],[102,6,97,4,"c"],[102,7,97,5],[102,10,97,8,"a1"],[102,12,97,10],[102,15,97,13,"c2"],[102,17,97,15],[102,20,97,18,"c1"],[102,22,97,20],[102,25,97,23,"d2"],[102,27,97,25],[103,6,98,4,"d"],[103,7,98,5],[103,10,98,8,"b1"],[103,12,98,10],[103,15,98,13,"c2"],[103,17,98,15],[103,20,98,18,"d1"],[103,22,98,20],[103,25,98,23,"d2"],[103,27,98,25],[104,4,99,2],[105,4,100,2],[105,8,100,6,"translate"],[105,17,100,15],[105,19,100,17],[106,6,101,4,"tx"],[106,8,101,6],[106,11,101,9,"a1"],[106,13,101,11],[106,16,101,14,"tx2"],[106,19,101,17],[106,22,101,20,"c1"],[106,24,101,22],[106,27,101,25,"ty2"],[106,30,101,28],[106,33,101,31,"tx"],[106,35,101,33],[107,6,102,4,"ty"],[107,8,102,6],[107,11,102,9,"b1"],[107,13,102,11],[107,16,102,14,"tx2"],[107,19,102,17],[107,22,102,20,"d1"],[107,24,102,22],[107,27,102,25,"ty2"],[107,30,102,28],[107,33,102,31,"ty"],[107,35,102,33],[108,4,103,2],[109,2,104,0],[111,2,106,0],[112,0,107,0],[113,0,108,0],[114,0,109,0],[115,0,110,0],[116,0,111,0],[117,0,112,0],[118,0,113,0],[119,0,114,0],[120,0,115,0],[121,0,116,0],[122,0,117,0],[123,0,118,0],[124,0,119,0],[125,0,120,0],[126,0,121,0],[127,0,122,0],[128,0,123,0],[129,0,124,0],[130,2,125,7],[130,11,125,16,"appendTransform"],[130,26,125,31,"appendTransform"],[130,27,126,2,"x"],[130,28,126,11],[130,30,127,2,"y"],[130,31,127,11],[130,33,128,2,"scaleX"],[130,39,128,16],[130,41,129,2,"scaleY"],[130,47,129,16],[130,49,130,2,"rotation"],[130,57,130,18],[130,59,131,2,"skewX"],[130,64,131,15],[130,66,132,2,"skewY"],[130,71,132,15],[130,73,133,2,"regX"],[130,77,133,14],[130,79,134,2,"regY"],[130,83,134,14],[130,85,135,2],[131,4,136,2],[131,8,137,4,"x"],[131,9,137,5],[131,14,137,10],[131,15,137,11],[131,19,138,4,"y"],[131,20,138,5],[131,25,138,10],[131,26,138,11],[131,30,139,4,"scaleX"],[131,36,139,10],[131,41,139,15],[131,42,139,16],[131,46,140,4,"scaleY"],[131,52,140,10],[131,57,140,15],[131,58,140,16],[131,62,141,4,"rotation"],[131,70,141,12],[131,75,141,17],[131,76,141,18],[131,80,142,4,"skewX"],[131,85,142,9],[131,90,142,14],[131,91,142,15],[131,95,143,4,"skewY"],[131,100,143,9],[131,105,143,14],[131,106,143,15],[131,110,144,4,"regX"],[131,114,144,8],[131,119,144,13],[131,120,144,14],[131,124,145,4,"regY"],[131,128,145,8],[131,133,145,13],[131,134,145,14],[131,136,146,4],[132,6,147,4],[133,4,148,2],[134,4,149,2],[134,8,149,6,"cos"],[134,11,149,9],[134,13,149,11,"sin"],[134,16,149,14],[135,4,150,2],[135,8,150,6,"rotation"],[135,16,150,14],[135,19,150,17],[135,22,150,20],[135,24,150,22],[136,6,151,4],[136,10,151,10,"r"],[136,11,151,11],[136,14,151,14,"rotation"],[136,22,151,22],[136,25,151,25,"DEG_TO_RAD"],[136,35,151,35],[137,6,152,4,"cos"],[137,9,152,7],[137,12,152,10,"Math"],[137,16,152,14],[137,17,152,15,"cos"],[137,20,152,18],[137,21,152,19,"r"],[137,22,152,20],[137,23,152,21],[138,6,153,4,"sin"],[138,9,153,7],[138,12,153,10,"Math"],[138,16,153,14],[138,17,153,15,"sin"],[138,20,153,18],[138,21,153,19,"r"],[138,22,153,20],[138,23,153,21],[139,4,154,2],[139,5,154,3],[139,11,154,9],[140,6,155,4,"cos"],[140,9,155,7],[140,12,155,10],[140,13,155,11],[141,6,156,4,"sin"],[141,9,156,7],[141,12,156,10],[141,13,156,11],[142,4,157,2],[143,4,159,2],[143,8,159,8,"a2"],[143,10,159,10],[143,13,159,13,"cos"],[143,16,159,16],[143,19,159,19,"scaleX"],[143,25,159,25],[144,4,160,2],[144,8,160,8,"b2"],[144,10,160,10],[144,13,160,13,"sin"],[144,16,160,16],[144,19,160,19,"scaleX"],[144,25,160,25],[145,4,161,2],[145,8,161,8,"c2"],[145,10,161,10],[145,13,161,13],[145,14,161,14,"sin"],[145,17,161,17],[145,20,161,20,"scaleY"],[145,26,161,26],[146,4,162,2],[146,8,162,8,"d2"],[146,10,162,10],[146,13,162,13,"cos"],[146,16,162,16],[146,19,162,19,"scaleY"],[146,25,162,25],[147,4,164,2],[147,8,164,6,"skewX"],[147,13,164,11],[147,17,164,15,"skewY"],[147,22,164,20],[147,24,164,22],[148,6,165,4],[148,10,165,10,"b1"],[148,12,165,12],[148,15,165,15,"Math"],[148,19,165,19],[148,20,165,20,"tan"],[148,23,165,23],[148,24,165,24,"skewY"],[148,29,165,29],[148,32,165,32,"DEG_TO_RAD"],[148,42,165,42],[148,43,165,43],[149,6,166,4],[149,10,166,10,"c1"],[149,12,166,12],[149,15,166,15,"Math"],[149,19,166,19],[149,20,166,20,"tan"],[149,23,166,23],[149,24,166,24,"skewX"],[149,29,166,29],[149,32,166,32,"DEG_TO_RAD"],[149,42,166,42],[149,43,166,43],[150,6,167,4,"append"],[150,12,167,10],[150,13,167,11,"a2"],[150,15,167,13],[150,18,167,16,"c1"],[150,20,167,18],[150,23,167,21,"b2"],[150,25,167,23],[150,27,167,25,"b1"],[150,29,167,27],[150,32,167,30,"a2"],[150,34,167,32],[150,37,167,35,"b2"],[150,39,167,37],[150,41,167,39,"c2"],[150,43,167,41],[150,46,167,44,"c1"],[150,48,167,46],[150,51,167,49,"d2"],[150,53,167,51],[150,55,167,53,"b1"],[150,57,167,55],[150,60,167,58,"c2"],[150,62,167,60],[150,65,167,63,"d2"],[150,67,167,65],[150,69,167,67,"x"],[150,70,167,68],[150,72,167,70,"y"],[150,73,167,71],[150,74,167,72],[151,4,168,2],[151,5,168,3],[151,11,168,9],[152,6,169,4,"append"],[152,12,169,10],[152,13,169,11,"a2"],[152,15,169,13],[152,17,169,15,"b2"],[152,19,169,17],[152,21,169,19,"c2"],[152,23,169,21],[152,25,169,23,"d2"],[152,27,169,25],[152,29,169,27,"x"],[152,30,169,28],[152,32,169,30,"y"],[152,33,169,31],[152,34,169,32],[153,4,170,2],[154,4,172,2],[154,8,172,6,"regX"],[154,12,172,10],[154,16,172,14,"regY"],[154,20,172,18],[154,22,172,20],[155,6,173,4],[156,6,174,4,"tx"],[156,8,174,6],[156,12,174,10,"regX"],[156,16,174,14],[156,19,174,17,"a"],[156,20,174,18],[156,23,174,21,"regY"],[156,27,174,25],[156,30,174,28,"c"],[156,31,174,29],[157,6,175,4,"ty"],[157,8,175,6],[157,12,175,10,"regX"],[157,16,175,14],[157,19,175,17,"b"],[157,20,175,18],[157,23,175,21,"regY"],[157,27,175,25],[157,30,175,28,"d"],[157,31,175,29],[158,6,176,4,"hasInitialState"],[158,21,176,19],[158,24,176,22],[158,29,176,27],[159,4,177,2],[160,2,178,0],[161,0,178,1],[161,3]],"functionMap":{"names":["<global>","reset","toArray","append","appendTransform"],"mappings":"AAA;OCkC;CDO;OEO;CFK;OGa;CHqC;OIqB;CJqD"},"hasCjsExports":false},"type":"js/module"}]}