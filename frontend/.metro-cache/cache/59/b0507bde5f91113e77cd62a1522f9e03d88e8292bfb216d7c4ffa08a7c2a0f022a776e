{"dependencies":[{"name":"../../lib/extract/extractTransform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":76,"index":76}}],"key":"kfBwr9wX8MpuKuAI5utiPg2AKqw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.parseTransformProp = parseTransformProp;\n  exports.stringifyTransformProps = stringifyTransformProps;\n  var _libExtractExtractTransform = require(_dependencyMap[0], \"../../lib/extract/extractTransform\");\n  function parseTransformProp(transform, props) {\n    const transformArray = [];\n    props && transformArray.push(...stringifyTransformProps(props));\n    if (Array.isArray(transform)) {\n      if (typeof transform[0] === 'number') {\n        transformArray.push(`matrix(${transform.join(' ')})`);\n      } else {\n        const stringifiedProps = (0, _libExtractExtractTransform.transformsArrayToProps)(\n        // @ts-expect-error FIXME\n        transform);\n        transformArray.push(...stringifyTransformProps(stringifiedProps));\n      }\n    } else if (typeof transform === 'string') {\n      transformArray.push(transform);\n    }\n    return transformArray.length ? transformArray.join(' ') : undefined;\n  }\n  function stringifyTransformProps(transformProps) {\n    const transformArray = [];\n    if (transformProps.translate != null) {\n      transformArray.push(`translate(${transformProps.translate})`);\n    }\n    if (transformProps.translateX != null || transformProps.translateY != null) {\n      transformArray.push(`translate(${transformProps.translateX || 0}, ${transformProps.translateY || 0})`);\n    }\n    if (transformProps.scale != null) {\n      transformArray.push(`scale(${transformProps.scale})`);\n    }\n    if (transformProps.scaleX != null || transformProps.scaleY != null) {\n      transformArray.push(`scale(${transformProps.scaleX || 1}, ${transformProps.scaleY || 1})`);\n    }\n    // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n    if (transformProps.rotation != null) {\n      transformArray.push(`rotate(${transformProps.rotation})`);\n    }\n    if (transformProps.skewX != null) {\n      transformArray.push(`skewX(${transformProps.skewX})`);\n    }\n    if (transformProps.skewY != null) {\n      transformArray.push(`skewY(${transformProps.skewY})`);\n    }\n    return transformArray;\n  }\n});","lineCount":53,"map":[[7,2,2,0,"exports"],[7,9,2,0],[7,10,2,0,"parseTransformProp"],[7,28,2,0],[7,31,2,0,"parseTransformProp"],[7,49,2,0],[8,2,19,0,"exports"],[8,9,19,0],[8,10,19,0,"stringifyTransformProps"],[8,33,19,0],[8,36,19,0,"stringifyTransformProps"],[8,59,19,0],[9,2,1,0],[9,6,1,0,"_libExtractExtractTransform"],[9,33,1,0],[9,36,1,0,"require"],[9,43,1,0],[9,44,1,0,"_dependencyMap"],[9,58,1,0],[10,2,2,7],[10,11,2,16,"parseTransformProp"],[10,29,2,34,"parseTransformProp"],[10,30,2,35,"transform"],[10,39,2,44],[10,41,2,46,"props"],[10,46,2,51],[10,48,2,53],[11,4,3,2],[11,10,3,8,"transformArray"],[11,24,3,22],[11,27,3,25],[11,29,3,27],[12,4,4,2,"props"],[12,9,4,7],[12,13,4,11,"transformArray"],[12,27,4,25],[12,28,4,26,"push"],[12,32,4,30],[12,33,4,31],[12,36,4,34,"stringifyTransformProps"],[12,59,4,57],[12,60,4,58,"props"],[12,65,4,63],[12,66,4,64],[12,67,4,65],[13,4,5,2],[13,8,5,6,"Array"],[13,13,5,11],[13,14,5,12,"isArray"],[13,21,5,19],[13,22,5,20,"transform"],[13,31,5,29],[13,32,5,30],[13,34,5,32],[14,6,6,4],[14,10,6,8],[14,17,6,15,"transform"],[14,26,6,24],[14,27,6,25],[14,28,6,26],[14,29,6,27],[14,34,6,32],[14,42,6,40],[14,44,6,42],[15,8,7,6,"transformArray"],[15,22,7,20],[15,23,7,21,"push"],[15,27,7,25],[15,28,7,26],[15,38,7,36,"transform"],[15,47,7,45],[15,48,7,46,"join"],[15,52,7,50],[15,53,7,51],[15,56,7,54],[15,57,7,55],[15,60,7,58],[15,61,7,59],[16,6,8,4],[16,7,8,5],[16,13,8,11],[17,8,9,6],[17,14,9,12,"stringifiedProps"],[17,30,9,28],[17,33,9,31],[17,37,9,31,"transformsArrayToProps"],[17,64,9,53],[17,65,9,53,"transformsArrayToProps"],[17,87,9,53],[18,8,10,6],[19,8,11,6,"transform"],[19,17,11,15],[19,18,11,16],[20,8,12,6,"transformArray"],[20,22,12,20],[20,23,12,21,"push"],[20,27,12,25],[20,28,12,26],[20,31,12,29,"stringifyTransformProps"],[20,54,12,52],[20,55,12,53,"stringifiedProps"],[20,71,12,69],[20,72,12,70],[20,73,12,71],[21,6,13,4],[22,4,14,2],[22,5,14,3],[22,11,14,9],[22,15,14,13],[22,22,14,20,"transform"],[22,31,14,29],[22,36,14,34],[22,44,14,42],[22,46,14,44],[23,6,15,4,"transformArray"],[23,20,15,18],[23,21,15,19,"push"],[23,25,15,23],[23,26,15,24,"transform"],[23,35,15,33],[23,36,15,34],[24,4,16,2],[25,4,17,2],[25,11,17,9,"transformArray"],[25,25,17,23],[25,26,17,24,"length"],[25,32,17,30],[25,35,17,33,"transformArray"],[25,49,17,47],[25,50,17,48,"join"],[25,54,17,52],[25,55,17,53],[25,58,17,56],[25,59,17,57],[25,62,17,60,"undefined"],[25,71,17,69],[26,2,18,0],[27,2,19,7],[27,11,19,16,"stringifyTransformProps"],[27,34,19,39,"stringifyTransformProps"],[27,35,19,40,"transformProps"],[27,49,19,54],[27,51,19,56],[28,4,20,2],[28,10,20,8,"transformArray"],[28,24,20,22],[28,27,20,25],[28,29,20,27],[29,4,21,2],[29,8,21,6,"transformProps"],[29,22,21,20],[29,23,21,21,"translate"],[29,32,21,30],[29,36,21,34],[29,40,21,38],[29,42,21,40],[30,6,22,4,"transformArray"],[30,20,22,18],[30,21,22,19,"push"],[30,25,22,23],[30,26,22,24],[30,39,22,37,"transformProps"],[30,53,22,51],[30,54,22,52,"translate"],[30,63,22,61],[30,66,22,64],[30,67,22,65],[31,4,23,2],[32,4,24,2],[32,8,24,6,"transformProps"],[32,22,24,20],[32,23,24,21,"translateX"],[32,33,24,31],[32,37,24,35],[32,41,24,39],[32,45,24,43,"transformProps"],[32,59,24,57],[32,60,24,58,"translateY"],[32,70,24,68],[32,74,24,72],[32,78,24,76],[32,80,24,78],[33,6,25,4,"transformArray"],[33,20,25,18],[33,21,25,19,"push"],[33,25,25,23],[33,26,25,24],[33,39,25,37,"transformProps"],[33,53,25,51],[33,54,25,52,"translateX"],[33,64,25,62],[33,68,25,66],[33,69,25,67],[33,74,25,72,"transformProps"],[33,88,25,86],[33,89,25,87,"translateY"],[33,99,25,97],[33,103,25,101],[33,104,25,102],[33,107,25,105],[33,108,25,106],[34,4,26,2],[35,4,27,2],[35,8,27,6,"transformProps"],[35,22,27,20],[35,23,27,21,"scale"],[35,28,27,26],[35,32,27,30],[35,36,27,34],[35,38,27,36],[36,6,28,4,"transformArray"],[36,20,28,18],[36,21,28,19,"push"],[36,25,28,23],[36,26,28,24],[36,35,28,33,"transformProps"],[36,49,28,47],[36,50,28,48,"scale"],[36,55,28,53],[36,58,28,56],[36,59,28,57],[37,4,29,2],[38,4,30,2],[38,8,30,6,"transformProps"],[38,22,30,20],[38,23,30,21,"scaleX"],[38,29,30,27],[38,33,30,31],[38,37,30,35],[38,41,30,39,"transformProps"],[38,55,30,53],[38,56,30,54,"scaleY"],[38,62,30,60],[38,66,30,64],[38,70,30,68],[38,72,30,70],[39,6,31,4,"transformArray"],[39,20,31,18],[39,21,31,19,"push"],[39,25,31,23],[39,26,31,24],[39,35,31,33,"transformProps"],[39,49,31,47],[39,50,31,48,"scaleX"],[39,56,31,54],[39,60,31,58],[39,61,31,59],[39,66,31,64,"transformProps"],[39,80,31,78],[39,81,31,79,"scaleY"],[39,87,31,85],[39,91,31,89],[39,92,31,90],[39,95,31,93],[39,96,31,94],[40,4,32,2],[41,4,33,2],[42,4,34,2],[42,8,34,6,"transformProps"],[42,22,34,20],[42,23,34,21,"rotation"],[42,31,34,29],[42,35,34,33],[42,39,34,37],[42,41,34,39],[43,6,35,4,"transformArray"],[43,20,35,18],[43,21,35,19,"push"],[43,25,35,23],[43,26,35,24],[43,36,35,34,"transformProps"],[43,50,35,48],[43,51,35,49,"rotation"],[43,59,35,57],[43,62,35,60],[43,63,35,61],[44,4,36,2],[45,4,37,2],[45,8,37,6,"transformProps"],[45,22,37,20],[45,23,37,21,"skewX"],[45,28,37,26],[45,32,37,30],[45,36,37,34],[45,38,37,36],[46,6,38,4,"transformArray"],[46,20,38,18],[46,21,38,19,"push"],[46,25,38,23],[46,26,38,24],[46,35,38,33,"transformProps"],[46,49,38,47],[46,50,38,48,"skewX"],[46,55,38,53],[46,58,38,56],[46,59,38,57],[47,4,39,2],[48,4,40,2],[48,8,40,6,"transformProps"],[48,22,40,20],[48,23,40,21,"skewY"],[48,28,40,26],[48,32,40,30],[48,36,40,34],[48,38,40,36],[49,6,41,4,"transformArray"],[49,20,41,18],[49,21,41,19,"push"],[49,25,41,23],[49,26,41,24],[49,35,41,33,"transformProps"],[49,49,41,47],[49,50,41,48,"skewY"],[49,55,41,53],[49,58,41,56],[49,59,41,57],[50,4,42,2],[51,4,43,2],[51,11,43,9,"transformArray"],[51,25,43,23],[52,2,44,0],[53,0,44,1],[53,3]],"functionMap":{"names":["<global>","parseTransformProp","stringifyTransformProps"],"mappings":"AAA;OCC;CDgB;OEC;CFyB"},"hasCjsExports":false},"type":"js/module"}]}