{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"RGB_RGBA_PATTERN\", {\n    enumerable: true,\n    get: function () {\n      return RGB_RGBA_PATTERN;\n    }\n  });\n  Object.defineProperty(exports, \"convertPercentageColor\", {\n    enumerable: true,\n    get: function () {\n      return convertPercentageColor;\n    }\n  });\n  var RGB_RGBA_PATTERN = /^rgba?\\(\\s*(100%|\\d{1,2}(\\.\\d+)?%)\\s*,\\s*(100%|\\d{1,2}(\\.\\d+)?%)\\s*,\\s*(100%|\\d{1,2}(\\.\\d+)?%)\\s*(?:,\\s*(1|0(\\.\\d+)?|100%|\\d{1,2}(\\.\\d+)?%)\\s*)?\\)$/;\n  var percentTo255 = percent => Math.round(parseFloat(percent) * 2.55);\n  var parseAlpha = alpha => alpha.endsWith('%') ? parseFloat(alpha) / 100 : parseFloat(alpha);\n  function parsePercentageRGBColor(color) {\n    var currentMatch = RGB_RGBA_PATTERN.exec(color);\n    if (!currentMatch) {\n      console.warn(`\"${color}\" is not a valid percentage rgb/rgba color`);\n      return color;\n    }\n    var red = currentMatch[1];\n    var green = currentMatch[3];\n    var blue = currentMatch[5];\n    var alpha = currentMatch[7];\n    var rgb = `${percentTo255(red)}, ${percentTo255(green)}, ${percentTo255(blue)}`;\n    return alpha ? `rgba(${rgb}, ${parseAlpha(alpha)})` : `rgb(${rgb})`;\n  }\n  var convertPercentageColor = color => {\n    if (typeof color !== 'string') {\n      return color;\n    }\n    var rgbColorWithoutSpaces = color.replace(/\\s/g, '');\n    var isPercentageRgb = RGB_RGBA_PATTERN.test(rgbColorWithoutSpaces);\n    return isPercentageRgb ? parsePercentageRGBColor(rgbColorWithoutSpaces) : color;\n  };\n});","lineCount":43,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"RGB_RGBA_PATTERN"],[10,29,3,0],[11,4,3,0],[12,2,3,0],[13,2,32,0,"Object"],[13,8,32,0],[13,9,32,0,"defineProperty"],[13,23,32,0],[13,24,32,0,"exports"],[13,31,32,0],[14,4,32,0,"enumerable"],[14,14,32,0],[15,4,32,0,"get"],[15,7,32,0],[15,18,32,0,"get"],[15,19,32,0],[16,6,32,0],[16,13,32,0,"convertPercentageColor"],[16,35,32,0],[17,4,32,0],[18,2,32,0],[19,2,3,7],[19,6,3,13,"RGB_RGBA_PATTERN"],[19,22,3,29],[19,25,4,2],[19,174,4,151],[20,2,6,0],[20,6,6,6,"percentTo255"],[20,18,6,18],[20,21,6,22,"percent"],[20,28,6,37],[20,32,7,2,"Math"],[20,36,7,6],[20,37,7,7,"round"],[20,42,7,12],[20,43,7,13,"parseFloat"],[20,53,7,23],[20,54,7,24,"percent"],[20,61,7,31],[20,62,7,32],[20,65,7,35],[20,69,7,39],[20,70,7,40],[21,2,9,0],[21,6,9,6,"parseAlpha"],[21,16,9,16],[21,19,9,20,"alpha"],[21,24,9,33],[21,28,10,2,"alpha"],[21,33,10,7],[21,34,10,8,"endsWith"],[21,42,10,16],[21,43,10,17],[21,46,10,20],[21,47,10,21],[21,50,10,24,"parseFloat"],[21,60,10,34],[21,61,10,35,"alpha"],[21,66,10,40],[21,67,10,41],[21,70,10,44],[21,73,10,47],[21,76,10,50,"parseFloat"],[21,86,10,60],[21,87,10,61,"alpha"],[21,92,10,66],[21,93,10,67],[22,2,12,0],[22,11,12,9,"parsePercentageRGBColor"],[22,34,12,32,"parsePercentageRGBColor"],[22,35,12,33,"color"],[22,40,12,46],[22,42,12,56],[23,4,13,2],[23,8,13,8,"currentMatch"],[23,20,13,20],[23,23,13,23,"RGB_RGBA_PATTERN"],[23,39,13,39],[23,40,13,40,"exec"],[23,44,13,44],[23,45,13,45,"color"],[23,50,13,50],[23,51,13,51],[24,4,15,2],[24,8,15,6],[24,9,15,7,"currentMatch"],[24,21,15,19],[24,23,15,21],[25,6,16,4,"console"],[25,13,16,11],[25,14,16,12,"warn"],[25,18,16,16],[25,19,16,17],[25,23,16,21,"color"],[25,28,16,26],[25,72,16,70],[25,73,16,71],[26,6,17,4],[26,13,17,11,"color"],[26,18,17,16],[27,4,18,2],[28,4,20,2],[28,8,20,8,"red"],[28,11,20,11],[28,14,20,14,"currentMatch"],[28,26,20,26],[28,27,20,27],[28,28,20,28],[28,29,20,29],[29,4,21,2],[29,8,21,8,"green"],[29,13,21,13],[29,16,21,16,"currentMatch"],[29,28,21,28],[29,29,21,29],[29,30,21,30],[29,31,21,31],[30,4,22,2],[30,8,22,8,"blue"],[30,12,22,12],[30,15,22,15,"currentMatch"],[30,27,22,27],[30,28,22,28],[30,29,22,29],[30,30,22,30],[31,4,23,2],[31,8,23,8,"alpha"],[31,13,23,13],[31,16,23,16,"currentMatch"],[31,28,23,28],[31,29,23,29],[31,30,23,30],[31,31,23,31],[32,4,25,2],[32,8,25,8,"rgb"],[32,11,25,11],[32,14,25,14],[32,17,25,17,"percentTo255"],[32,29,25,29],[32,30,25,30,"red"],[32,33,25,33],[32,34,25,34],[32,39,25,39,"percentTo255"],[32,51,25,51],[32,52,25,52,"green"],[32,57,25,57],[32,58,25,58],[32,63,25,63,"percentTo255"],[32,75,25,75],[32,76,26,4,"blue"],[32,80,27,2],[32,81,27,3],[32,83,27,5],[33,4,29,2],[33,11,29,9,"alpha"],[33,16,29,14],[33,19,29,17],[33,27,29,25,"rgb"],[33,30,29,28],[33,35,29,33,"parseAlpha"],[33,45,29,43],[33,46,29,44,"alpha"],[33,51,29,49],[33,52,29,50],[33,55,29,53],[33,58,29,56],[33,65,29,63,"rgb"],[33,68,29,66],[33,71,29,69],[34,2,30,0],[35,2,32,7],[35,6,32,13,"convertPercentageColor"],[35,28,32,35],[35,31,32,39,"color"],[35,36,32,56],[35,40,32,61],[36,4,33,2],[36,8,33,6],[36,15,33,13,"color"],[36,20,33,18],[36,25,33,23],[36,33,33,31],[36,35,33,33],[37,6,34,4],[37,13,34,11,"color"],[37,18,34,16],[38,4,35,2],[39,4,36,2],[39,8,36,8,"rgbColorWithoutSpaces"],[39,29,36,29],[39,32,36,32,"color"],[39,37,36,37],[39,38,36,38,"replace"],[39,45,36,45],[39,46,36,46],[39,51,36,51],[39,53,36,53],[39,55,36,55],[39,56,36,56],[40,4,37,2],[40,8,37,8,"isPercentageRgb"],[40,23,37,23],[40,26,37,26,"RGB_RGBA_PATTERN"],[40,42,37,42],[40,43,37,43,"test"],[40,47,37,47],[40,48,37,48,"rgbColorWithoutSpaces"],[40,69,37,69],[40,70,37,70],[41,4,38,2],[41,11,38,9,"isPercentageRgb"],[41,26,38,24],[41,29,39,6,"parsePercentageRGBColor"],[41,52,39,29],[41,53,39,30,"rgbColorWithoutSpaces"],[41,74,39,51],[41,75,39,52],[41,78,40,6,"color"],[41,83,40,11],[42,2,41,0],[42,3,41,1],[43,0,41,2],[43,3]],"functionMap":{"names":["<global>","percentTo255","parseAlpha","parsePercentageRGBColor","convertPercentageColor"],"mappings":"AAA;qBCK;wCDC;mBEE;mEFC;AGE;CHkB;sCIE;CJS"},"hasCjsExports":false},"type":"js/module"}]}