{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":69,"index":103}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useMeasurementStore\", {\n    enumerable: true,\n    get: function () {\n      return useMeasurementStore;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _zustand = require(_dependencyMap[1], \"zustand\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var STORAGE_KEY = '@measurements';\n  var useMeasurementStore = (0, _zustand.create)((set, get) => ({\n    measurements: [],\n    currentMode: 'distance',\n    currentPoints: [],\n    calibrationScale: null,\n    isCalibrated: false,\n    unit: 'metric',\n    currentMeasurement: null,\n    setMode: mode => set({\n      currentMode: mode,\n      currentPoints: []\n    }),\n    addPoint: point => {\n      var newPoint = {\n        ...point,\n        id: Date.now().toString()\n      };\n      set(state => ({\n        currentPoints: [...state.currentPoints, newPoint]\n      }));\n    },\n    removeLastPoint: () => {\n      set(state => ({\n        currentPoints: state.currentPoints.slice(0, -1)\n      }));\n    },\n    clearPoints: () => set({\n      currentPoints: []\n    }),\n    setCalibration: scale => set({\n      calibrationScale: scale,\n      isCalibrated: true\n    }),\n    toggleUnit: () => set(state => ({\n      unit: state.unit === 'metric' ? 'imperial' : 'metric'\n    })),\n    calculateResult: () => {\n      var _get = get(),\n        currentPoints = _get.currentPoints,\n        calibrationScale = _get.calibrationScale,\n        currentMode = _get.currentMode;\n      if (!calibrationScale || currentPoints.length < 2) return {};\n      var pixelsToMm = pixels => pixels / calibrationScale;\n      if (currentMode === 'distance') {\n        var totalDistance = 0;\n        for (var i = 0; i < currentPoints.length - 1; i++) {\n          var dx = currentPoints[i + 1].x - currentPoints[i].x;\n          var dy = currentPoints[i + 1].y - currentPoints[i].y;\n          var distancePixels = Math.sqrt(dx * dx + dy * dy);\n          totalDistance += pixelsToMm(distancePixels);\n        }\n        return {\n          distance: totalDistance\n        };\n      }\n      if ((currentMode === 'area' || currentMode === 'volume') && currentPoints.length >= 3) {\n        // Shoelace formula for polygon area\n        var area = 0;\n        var perimeter = 0;\n        var n = currentPoints.length;\n        for (var _i = 0; _i < n; _i++) {\n          var j = (_i + 1) % n;\n          var xi = pixelsToMm(currentPoints[_i].x);\n          var yi = pixelsToMm(currentPoints[_i].y);\n          var xj = pixelsToMm(currentPoints[j].x);\n          var yj = pixelsToMm(currentPoints[j].y);\n          area += xi * yj - xj * yi;\n          var _dx = xj - xi;\n          var _dy = yj - yi;\n          perimeter += Math.sqrt(_dx * _dx + _dy * _dy);\n        }\n        area = Math.abs(area) / 2;\n        return {\n          area,\n          perimeter\n        };\n      }\n      return {};\n    },\n    saveMeasurement: function () {\n      var _ref = (0, _asyncToGenerator.default)(function* (name, imageData) {\n        var _get2 = get(),\n          currentMode = _get2.currentMode,\n          currentPoints = _get2.currentPoints,\n          calibrationScale = _get2.calibrationScale,\n          unit = _get2.unit;\n        if (!calibrationScale || currentPoints.length < 2) return;\n        var result = get().calculateResult();\n        var measurement = {\n          id: Date.now().toString(),\n          name,\n          mode: currentMode,\n          points: currentPoints,\n          calibrationScale,\n          result,\n          unit,\n          timestamp: Date.now(),\n          imageData\n        };\n        var measurements = [...get().measurements, measurement];\n        set({\n          measurements,\n          currentPoints: []\n        });\n        try {\n          yield AsyncStorage.default.setItem(STORAGE_KEY, JSON.stringify(measurements));\n        } catch (error) {\n          console.error('Error saving measurement:', error);\n        }\n      });\n      return function saveMeasurement(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    loadMeasurements: function () {\n      var _ref2 = (0, _asyncToGenerator.default)(function* () {\n        try {\n          var data = yield AsyncStorage.default.getItem(STORAGE_KEY);\n          if (data) {\n            var measurements = JSON.parse(data);\n            set({\n              measurements\n            });\n          }\n        } catch (error) {\n          console.error('Error loading measurements:', error);\n        }\n      });\n      return function loadMeasurements() {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    deleteMeasurement: function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* (id) {\n        var measurements = get().measurements.filter(m => m.id !== id);\n        set({\n          measurements\n        });\n        try {\n          yield AsyncStorage.default.setItem(STORAGE_KEY, JSON.stringify(measurements));\n        } catch (error) {\n          console.error('Error deleting measurement:', error);\n        }\n      });\n      return function deleteMeasurement(_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  }));\n});","lineCount":173,"map":[[12,2,54,0,"Object"],[12,8,54,0],[12,9,54,0,"defineProperty"],[12,23,54,0],[12,24,54,0,"exports"],[12,31,54,0],[13,4,54,0,"enumerable"],[13,14,54,0],[14,4,54,0,"get"],[14,7,54,0],[14,18,54,0,"get"],[14,19,54,0],[15,6,54,0],[15,13,54,0,"useMeasurementStore"],[15,32,54,0],[16,4,54,0],[17,2,54,0],[18,2,174,4],[18,6,174,4,"_babelRuntimeHelpersAsyncToGenerator"],[18,42,174,4],[18,45,174,4,"require"],[18,52,174,4],[18,53,174,4,"_dependencyMap"],[18,67,174,4],[19,2,174,4],[19,6,174,4,"_asyncToGenerator"],[19,23,174,4],[19,26,174,4,"_interopDefault"],[19,41,174,4],[19,42,174,4,"_babelRuntimeHelpersAsyncToGenerator"],[19,78,174,4],[20,2,1,0],[20,6,1,0,"_zustand"],[20,14,1,0],[20,17,1,0,"require"],[20,24,1,0],[20,25,1,0,"_dependencyMap"],[20,39,1,0],[21,2,2,0],[21,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[21,42,2,0],[21,45,2,0,"require"],[21,52,2,0],[21,53,2,0,"_dependencyMap"],[21,67,2,0],[22,2,2,0],[22,6,2,0,"AsyncStorage"],[22,18,2,0],[22,21,2,0,"_interopDefault"],[22,36,2,0],[22,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[22,73,2,0],[23,2,52,0],[23,6,52,6,"STORAGE_KEY"],[23,17,52,17],[23,20,52,20],[23,35,52,35],[24,2,54,7],[24,6,54,13,"useMeasurementStore"],[24,25,54,32],[24,28,54,35],[24,32,54,35,"create"],[24,40,54,41],[24,41,54,41,"create"],[24,47,54,41],[24,49,54,60],[24,50,54,61,"set"],[24,53,54,64],[24,55,54,66,"get"],[24,58,54,69],[24,64,54,75],[25,4,55,2,"measurements"],[25,16,55,14],[25,18,55,16],[25,20,55,18],[26,4,56,2,"currentMode"],[26,15,56,13],[26,17,56,15],[26,27,56,25],[27,4,57,2,"currentPoints"],[27,17,57,15],[27,19,57,17],[27,21,57,19],[28,4,58,2,"calibrationScale"],[28,20,58,18],[28,22,58,20],[28,26,58,24],[29,4,59,2,"isCalibrated"],[29,16,59,14],[29,18,59,16],[29,23,59,21],[30,4,60,2,"unit"],[30,8,60,6],[30,10,60,8],[30,18,60,16],[31,4,61,2,"currentMeasurement"],[31,22,61,20],[31,24,61,22],[31,28,61,26],[32,4,63,2,"setMode"],[32,11,63,9],[32,13,63,12,"mode"],[32,17,63,16],[32,21,63,21,"set"],[32,24,63,24],[32,25,63,25],[33,6,63,27,"currentMode"],[33,17,63,38],[33,19,63,40,"mode"],[33,23,63,44],[34,6,63,46,"currentPoints"],[34,19,63,59],[34,21,63,61],[35,4,63,64],[35,5,63,65],[35,6,63,66],[36,4,65,2,"addPoint"],[36,12,65,10],[36,14,65,13,"point"],[36,19,65,18],[36,23,65,23],[37,6,66,4],[37,10,66,10,"newPoint"],[37,18,66,18],[37,21,66,21],[38,8,66,23],[38,11,66,26,"point"],[38,16,66,31],[39,8,66,33,"id"],[39,10,66,35],[39,12,66,37,"Date"],[39,16,66,41],[39,17,66,42,"now"],[39,20,66,45],[39,21,66,46],[39,22,66,47],[39,23,66,48,"toString"],[39,31,66,56],[39,32,66,57],[40,6,66,59],[40,7,66,60],[41,6,67,4,"set"],[41,9,67,7],[41,10,67,9,"state"],[41,15,67,14],[41,20,67,20],[42,8,67,22,"currentPoints"],[42,21,67,35],[42,23,67,37],[42,24,67,38],[42,27,67,41,"state"],[42,32,67,46],[42,33,67,47,"currentPoints"],[42,46,67,60],[42,48,67,62,"newPoint"],[42,56,67,70],[43,6,67,72],[43,7,67,73],[43,8,67,74],[43,9,67,75],[44,4,68,2],[44,5,68,3],[45,4,70,2,"removeLastPoint"],[45,19,70,17],[45,21,70,19,"removeLastPoint"],[45,22,70,19],[45,27,70,25],[46,6,71,4,"set"],[46,9,71,7],[46,10,71,9,"state"],[46,15,71,14],[46,20,71,20],[47,8,72,6,"currentPoints"],[47,21,72,19],[47,23,72,21,"state"],[47,28,72,26],[47,29,72,27,"currentPoints"],[47,42,72,40],[47,43,72,41,"slice"],[47,48,72,46],[47,49,72,47],[47,50,72,48],[47,52,72,50],[47,53,72,51],[47,54,72,52],[48,6,73,4],[48,7,73,5],[48,8,73,6],[48,9,73,7],[49,4,74,2],[49,5,74,3],[50,4,76,2,"clearPoints"],[50,15,76,13],[50,17,76,15,"clearPoints"],[50,18,76,15],[50,23,76,21,"set"],[50,26,76,24],[50,27,76,25],[51,6,76,27,"currentPoints"],[51,19,76,40],[51,21,76,42],[52,4,76,45],[52,5,76,46],[52,6,76,47],[53,4,78,2,"setCalibration"],[53,18,78,16],[53,20,78,19,"scale"],[53,25,78,24],[53,29,78,29,"set"],[53,32,78,32],[53,33,78,33],[54,6,78,35,"calibrationScale"],[54,22,78,51],[54,24,78,53,"scale"],[54,29,78,58],[55,6,78,60,"isCalibrated"],[55,18,78,72],[55,20,78,74],[56,4,78,79],[56,5,78,80],[56,6,78,81],[57,4,80,2,"toggleUnit"],[57,14,80,12],[57,16,80,14,"toggleUnit"],[57,17,80,14],[57,22,80,20,"set"],[57,25,80,23],[57,26,80,25,"state"],[57,31,80,30],[57,36,80,36],[58,6,80,38,"unit"],[58,10,80,42],[58,12,80,44,"state"],[58,17,80,49],[58,18,80,50,"unit"],[58,22,80,54],[58,27,80,59],[58,35,80,67],[58,38,80,70],[58,48,80,80],[58,51,80,83],[59,4,80,92],[59,5,80,93],[59,6,80,94],[59,7,80,95],[60,4,82,2,"calculateResult"],[60,19,82,17],[60,21,82,19,"calculateResult"],[60,22,82,19],[60,27,82,25],[61,6,83,4],[61,10,83,4,"_get"],[61,14,83,4],[61,17,83,61,"get"],[61,20,83,64],[61,21,83,65],[61,22,83,66],[62,8,83,12,"currentPoints"],[62,21,83,25],[62,24,83,25,"_get"],[62,28,83,25],[62,29,83,12,"currentPoints"],[62,42,83,25],[63,8,83,27,"calibrationScale"],[63,24,83,43],[63,27,83,43,"_get"],[63,31,83,43],[63,32,83,27,"calibrationScale"],[63,48,83,43],[64,8,83,45,"currentMode"],[64,19,83,56],[64,22,83,56,"_get"],[64,26,83,56],[64,27,83,45,"currentMode"],[64,38,83,56],[65,6,84,4],[65,10,84,8],[65,11,84,9,"calibrationScale"],[65,27,84,25],[65,31,84,29,"currentPoints"],[65,44,84,42],[65,45,84,43,"length"],[65,51,84,49],[65,54,84,52],[65,55,84,53],[65,57,84,55],[65,64,84,62],[65,65,84,63],[65,66,84,64],[66,6,86,4],[66,10,86,10,"pixelsToMm"],[66,20,86,20],[66,23,86,24,"pixels"],[66,29,86,38],[66,33,86,43,"pixels"],[66,39,86,49],[66,42,86,52,"calibrationScale"],[66,58,86,68],[67,6,88,4],[67,10,88,8,"currentMode"],[67,21,88,19],[67,26,88,24],[67,36,88,34],[67,38,88,36],[68,8,89,6],[68,12,89,10,"totalDistance"],[68,25,89,23],[68,28,89,26],[68,29,89,27],[69,8,90,6],[69,13,90,11],[69,17,90,15,"i"],[69,18,90,16],[69,21,90,19],[69,22,90,20],[69,24,90,22,"i"],[69,25,90,23],[69,28,90,26,"currentPoints"],[69,41,90,39],[69,42,90,40,"length"],[69,48,90,46],[69,51,90,49],[69,52,90,50],[69,54,90,52,"i"],[69,55,90,53],[69,57,90,55],[69,59,90,57],[70,10,91,8],[70,14,91,14,"dx"],[70,16,91,16],[70,19,91,19,"currentPoints"],[70,32,91,32],[70,33,91,33,"i"],[70,34,91,34],[70,37,91,37],[70,38,91,38],[70,39,91,39],[70,40,91,40,"x"],[70,41,91,41],[70,44,91,44,"currentPoints"],[70,57,91,57],[70,58,91,58,"i"],[70,59,91,59],[70,60,91,60],[70,61,91,61,"x"],[70,62,91,62],[71,10,92,8],[71,14,92,14,"dy"],[71,16,92,16],[71,19,92,19,"currentPoints"],[71,32,92,32],[71,33,92,33,"i"],[71,34,92,34],[71,37,92,37],[71,38,92,38],[71,39,92,39],[71,40,92,40,"y"],[71,41,92,41],[71,44,92,44,"currentPoints"],[71,57,92,57],[71,58,92,58,"i"],[71,59,92,59],[71,60,92,60],[71,61,92,61,"y"],[71,62,92,62],[72,10,93,8],[72,14,93,14,"distancePixels"],[72,28,93,28],[72,31,93,31,"Math"],[72,35,93,35],[72,36,93,36,"sqrt"],[72,40,93,40],[72,41,93,41,"dx"],[72,43,93,43],[72,46,93,46,"dx"],[72,48,93,48],[72,51,93,51,"dy"],[72,53,93,53],[72,56,93,56,"dy"],[72,58,93,58],[72,59,93,59],[73,10,94,8,"totalDistance"],[73,23,94,21],[73,27,94,25,"pixelsToMm"],[73,37,94,35],[73,38,94,36,"distancePixels"],[73,52,94,50],[73,53,94,51],[74,8,95,6],[75,8,96,6],[75,15,96,13],[76,10,96,15,"distance"],[76,18,96,23],[76,20,96,25,"totalDistance"],[77,8,96,39],[77,9,96,40],[78,6,97,4],[79,6,99,4],[79,10,99,8],[79,11,99,9,"currentMode"],[79,22,99,20],[79,27,99,25],[79,33,99,31],[79,37,99,35,"currentMode"],[79,48,99,46],[79,53,99,51],[79,61,99,59],[79,66,99,64,"currentPoints"],[79,79,99,77],[79,80,99,78,"length"],[79,86,99,84],[79,90,99,88],[79,91,99,89],[79,93,99,91],[80,8,100,6],[81,8,101,6],[81,12,101,10,"area"],[81,16,101,14],[81,19,101,17],[81,20,101,18],[82,8,102,6],[82,12,102,10,"perimeter"],[82,21,102,19],[82,24,102,22],[82,25,102,23],[83,8,103,6],[83,12,103,12,"n"],[83,13,103,13],[83,16,103,16,"currentPoints"],[83,29,103,29],[83,30,103,30,"length"],[83,36,103,36],[84,8,105,6],[84,13,105,11],[84,17,105,15,"i"],[84,19,105,16],[84,22,105,19],[84,23,105,20],[84,25,105,22,"i"],[84,27,105,23],[84,30,105,26,"n"],[84,31,105,27],[84,33,105,29,"i"],[84,35,105,30],[84,37,105,32],[84,39,105,34],[85,10,106,8],[85,14,106,14,"j"],[85,15,106,15],[85,18,106,18],[85,19,106,19,"i"],[85,21,106,20],[85,24,106,23],[85,25,106,24],[85,29,106,28,"n"],[85,30,106,29],[86,10,107,8],[86,14,107,14,"xi"],[86,16,107,16],[86,19,107,19,"pixelsToMm"],[86,29,107,29],[86,30,107,30,"currentPoints"],[86,43,107,43],[86,44,107,44,"i"],[86,46,107,45],[86,47,107,46],[86,48,107,47,"x"],[86,49,107,48],[86,50,107,49],[87,10,108,8],[87,14,108,14,"yi"],[87,16,108,16],[87,19,108,19,"pixelsToMm"],[87,29,108,29],[87,30,108,30,"currentPoints"],[87,43,108,43],[87,44,108,44,"i"],[87,46,108,45],[87,47,108,46],[87,48,108,47,"y"],[87,49,108,48],[87,50,108,49],[88,10,109,8],[88,14,109,14,"xj"],[88,16,109,16],[88,19,109,19,"pixelsToMm"],[88,29,109,29],[88,30,109,30,"currentPoints"],[88,43,109,43],[88,44,109,44,"j"],[88,45,109,45],[88,46,109,46],[88,47,109,47,"x"],[88,48,109,48],[88,49,109,49],[89,10,110,8],[89,14,110,14,"yj"],[89,16,110,16],[89,19,110,19,"pixelsToMm"],[89,29,110,29],[89,30,110,30,"currentPoints"],[89,43,110,43],[89,44,110,44,"j"],[89,45,110,45],[89,46,110,46],[89,47,110,47,"y"],[89,48,110,48],[89,49,110,49],[90,10,112,8,"area"],[90,14,112,12],[90,18,112,16,"xi"],[90,20,112,18],[90,23,112,21,"yj"],[90,25,112,23],[90,28,112,26,"xj"],[90,30,112,28],[90,33,112,31,"yi"],[90,35,112,33],[91,10,114,8],[91,14,114,14,"dx"],[91,17,114,16],[91,20,114,19,"xj"],[91,22,114,21],[91,25,114,24,"xi"],[91,27,114,26],[92,10,115,8],[92,14,115,14,"dy"],[92,17,115,16],[92,20,115,19,"yj"],[92,22,115,21],[92,25,115,24,"yi"],[92,27,115,26],[93,10,116,8,"perimeter"],[93,19,116,17],[93,23,116,21,"Math"],[93,27,116,25],[93,28,116,26,"sqrt"],[93,32,116,30],[93,33,116,31,"dx"],[93,36,116,33],[93,39,116,36,"dx"],[93,42,116,38],[93,45,116,41,"dy"],[93,48,116,43],[93,51,116,46,"dy"],[93,54,116,48],[93,55,116,49],[94,8,117,6],[95,8,119,6,"area"],[95,12,119,10],[95,15,119,13,"Math"],[95,19,119,17],[95,20,119,18,"abs"],[95,23,119,21],[95,24,119,22,"area"],[95,28,119,26],[95,29,119,27],[95,32,119,30],[95,33,119,31],[96,8,120,6],[96,15,120,13],[97,10,120,15,"area"],[97,14,120,19],[98,10,120,21,"perimeter"],[99,8,120,31],[99,9,120,32],[100,6,121,4],[101,6,123,4],[101,13,123,11],[101,14,123,12],[101,15,123,13],[102,4,124,2],[102,5,124,3],[103,4,126,2,"saveMeasurement"],[103,19,126,17],[104,6,126,17],[104,10,126,17,"_ref"],[104,14,126,17],[104,21,126,17,"_asyncToGenerator"],[104,38,126,17],[104,39,126,17,"default"],[104,46,126,17],[104,48,126,19],[104,59,126,26,"name"],[104,63,126,30],[104,65,126,32,"imageData"],[104,74,126,41],[104,76,126,46],[105,8,127,4],[105,12,127,4,"_get2"],[105,17,127,4],[105,20,127,67,"get"],[105,23,127,70],[105,24,127,71],[105,25,127,72],[106,10,127,12,"currentMode"],[106,21,127,23],[106,24,127,23,"_get2"],[106,29,127,23],[106,30,127,12,"currentMode"],[106,41,127,23],[107,10,127,25,"currentPoints"],[107,23,127,38],[107,26,127,38,"_get2"],[107,31,127,38],[107,32,127,25,"currentPoints"],[107,45,127,38],[108,10,127,40,"calibrationScale"],[108,26,127,56],[108,29,127,56,"_get2"],[108,34,127,56],[108,35,127,40,"calibrationScale"],[108,51,127,56],[109,10,127,58,"unit"],[109,14,127,62],[109,17,127,62,"_get2"],[109,22,127,62],[109,23,127,58,"unit"],[109,27,127,62],[110,8,128,4],[110,12,128,8],[110,13,128,9,"calibrationScale"],[110,29,128,25],[110,33,128,29,"currentPoints"],[110,46,128,42],[110,47,128,43,"length"],[110,53,128,49],[110,56,128,52],[110,57,128,53],[110,59,128,55],[111,8,130,4],[111,12,130,10,"result"],[111,18,130,16],[111,21,130,19,"get"],[111,24,130,22],[111,25,130,23],[111,26,130,24],[111,27,130,25,"calculateResult"],[111,42,130,40],[111,43,130,41],[111,44,130,42],[112,8,131,4],[112,12,131,10,"measurement"],[112,23,131,34],[112,26,131,37],[113,10,132,6,"id"],[113,12,132,8],[113,14,132,10,"Date"],[113,18,132,14],[113,19,132,15,"now"],[113,22,132,18],[113,23,132,19],[113,24,132,20],[113,25,132,21,"toString"],[113,33,132,29],[113,34,132,30],[113,35,132,31],[114,10,133,6,"name"],[114,14,133,10],[115,10,134,6,"mode"],[115,14,134,10],[115,16,134,12,"currentMode"],[115,27,134,23],[116,10,135,6,"points"],[116,16,135,12],[116,18,135,14,"currentPoints"],[116,31,135,27],[117,10,136,6,"calibrationScale"],[117,26,136,22],[118,10,137,6,"result"],[118,16,137,12],[119,10,138,6,"unit"],[119,14,138,10],[120,10,139,6,"timestamp"],[120,19,139,15],[120,21,139,17,"Date"],[120,25,139,21],[120,26,139,22,"now"],[120,29,139,25],[120,30,139,26],[120,31,139,27],[121,10,140,6,"imageData"],[122,8,141,4],[122,9,141,5],[123,8,143,4],[123,12,143,10,"measurements"],[123,24,143,22],[123,27,143,25],[123,28,143,26],[123,31,143,29,"get"],[123,34,143,32],[123,35,143,33],[123,36,143,34],[123,37,143,35,"measurements"],[123,49,143,47],[123,51,143,49,"measurement"],[123,62,143,60],[123,63,143,61],[124,8,144,4,"set"],[124,11,144,7],[124,12,144,8],[125,10,144,10,"measurements"],[125,22,144,22],[126,10,144,24,"currentPoints"],[126,23,144,37],[126,25,144,39],[127,8,144,42],[127,9,144,43],[127,10,144,44],[128,8,146,4],[128,12,146,8],[129,10,147,6],[129,16,147,12,"AsyncStorage"],[129,28,147,24],[129,29,147,24,"default"],[129,36,147,24],[129,37,147,25,"setItem"],[129,44,147,32],[129,45,147,33,"STORAGE_KEY"],[129,56,147,44],[129,58,147,46,"JSON"],[129,62,147,50],[129,63,147,51,"stringify"],[129,72,147,60],[129,73,147,61,"measurements"],[129,85,147,73],[129,86,147,74],[129,87,147,75],[130,8,148,4],[130,9,148,5],[130,10,148,6],[130,17,148,13,"error"],[130,22,148,18],[130,24,148,20],[131,10,149,6,"console"],[131,17,149,13],[131,18,149,14,"error"],[131,23,149,19],[131,24,149,20],[131,51,149,47],[131,53,149,49,"error"],[131,58,149,54],[131,59,149,55],[132,8,150,4],[133,6,151,2],[133,7,151,3],[134,6,151,3],[134,22,126,2,"saveMeasurement"],[134,37,126,17,"saveMeasurement"],[134,38,126,17,"_x"],[134,40,126,17],[134,42,126,17,"_x2"],[134,45,126,17],[135,8,126,17],[135,15,126,17,"_ref"],[135,19,126,17],[135,20,126,17,"apply"],[135,25,126,17],[135,32,126,17,"arguments"],[135,41,126,17],[136,6,126,17],[137,4,126,17],[137,7,151,3],[138,4,153,2,"loadMeasurements"],[138,20,153,18],[139,6,153,18],[139,10,153,18,"_ref2"],[139,15,153,18],[139,22,153,18,"_asyncToGenerator"],[139,39,153,18],[139,40,153,18,"default"],[139,47,153,18],[139,49,153,20],[139,62,153,32],[140,8,154,4],[140,12,154,8],[141,10,155,6],[141,14,155,12,"data"],[141,18,155,16],[141,27,155,25,"AsyncStorage"],[141,39,155,37],[141,40,155,37,"default"],[141,47,155,37],[141,48,155,38,"getItem"],[141,55,155,45],[141,56,155,46,"STORAGE_KEY"],[141,67,155,57],[141,68,155,58],[142,10,156,6],[142,14,156,10,"data"],[142,18,156,14],[142,20,156,16],[143,12,157,8],[143,16,157,14,"measurements"],[143,28,157,26],[143,31,157,29,"JSON"],[143,35,157,33],[143,36,157,34,"parse"],[143,41,157,39],[143,42,157,40,"data"],[143,46,157,44],[143,47,157,45],[144,12,158,8,"set"],[144,15,158,11],[144,16,158,12],[145,14,158,14,"measurements"],[146,12,158,27],[146,13,158,28],[146,14,158,29],[147,10,159,6],[148,8,160,4],[148,9,160,5],[148,10,160,6],[148,17,160,13,"error"],[148,22,160,18],[148,24,160,20],[149,10,161,6,"console"],[149,17,161,13],[149,18,161,14,"error"],[149,23,161,19],[149,24,161,20],[149,53,161,49],[149,55,161,51,"error"],[149,60,161,56],[149,61,161,57],[150,8,162,4],[151,6,163,2],[151,7,163,3],[152,6,163,3],[152,22,153,2,"loadMeasurements"],[152,38,153,18,"loadMeasurements"],[152,39,153,18],[153,8,153,18],[153,15,153,18,"_ref2"],[153,20,153,18],[153,21,153,18,"apply"],[153,26,153,18],[153,33,153,18,"arguments"],[153,42,153,18],[154,6,153,18],[155,4,153,18],[155,7,163,3],[156,4,165,2,"deleteMeasurement"],[156,21,165,19],[157,6,165,19],[157,10,165,19,"_ref3"],[157,15,165,19],[157,22,165,19,"_asyncToGenerator"],[157,39,165,19],[157,40,165,19,"default"],[157,47,165,19],[157,49,165,21],[157,60,165,28,"id"],[157,62,165,30],[157,64,165,35],[158,8,166,4],[158,12,166,10,"measurements"],[158,24,166,22],[158,27,166,25,"get"],[158,30,166,28],[158,31,166,29],[158,32,166,30],[158,33,166,31,"measurements"],[158,45,166,43],[158,46,166,44,"filter"],[158,52,166,50],[158,53,166,52,"m"],[158,54,166,53],[158,58,166,58,"m"],[158,59,166,59],[158,60,166,60,"id"],[158,62,166,62],[158,67,166,67,"id"],[158,69,166,69],[158,70,166,70],[159,8,167,4,"set"],[159,11,167,7],[159,12,167,8],[160,10,167,10,"measurements"],[161,8,167,23],[161,9,167,24],[161,10,167,25],[162,8,168,4],[162,12,168,8],[163,10,169,6],[163,16,169,12,"AsyncStorage"],[163,28,169,24],[163,29,169,24,"default"],[163,36,169,24],[163,37,169,25,"setItem"],[163,44,169,32],[163,45,169,33,"STORAGE_KEY"],[163,56,169,44],[163,58,169,46,"JSON"],[163,62,169,50],[163,63,169,51,"stringify"],[163,72,169,60],[163,73,169,61,"measurements"],[163,85,169,73],[163,86,169,74],[163,87,169,75],[164,8,170,4],[164,9,170,5],[164,10,170,6],[164,17,170,13,"error"],[164,22,170,18],[164,24,170,20],[165,10,171,6,"console"],[165,17,171,13],[165,18,171,14,"error"],[165,23,171,19],[165,24,171,20],[165,53,171,49],[165,55,171,51,"error"],[165,60,171,56],[165,61,171,57],[166,8,172,4],[167,6,173,2],[167,7,173,3],[168,6,173,3],[168,22,165,2,"deleteMeasurement"],[168,39,165,19,"deleteMeasurement"],[168,40,165,19,"_x3"],[168,43,165,19],[169,8,165,19],[169,15,165,19,"_ref3"],[169,20,165,19],[169,21,165,19,"apply"],[169,26,165,19],[169,33,165,19,"arguments"],[169,42,165,19],[170,6,165,19],[171,4,165,19],[172,2,174,0],[172,3,174,1],[172,4,174,2],[172,5,174,3],[173,0,174,4],[173,3]],"functionMap":{"names":["<global>","create$argument_0","setMode","addPoint","set$argument_0","removeLastPoint","clearPoints","setCalibration","toggleUnit","calculateResult","pixelsToMm","saveMeasurement","loadMeasurements","deleteMeasurement","get.measurements.filter$argument_0"],"mappings":"AAA;4DCqD;WCS,uDD;YEE;QCE,kED;GFC;mBIE;QDC;MCE;GJC;eKE,gCL;kBME,+DN;cOE,UJ,sEI,CP;mBQE;uBCI,6CD;GRsC;mBUE;GVyB;oBWE;GXU;qBYE;mDCC,kBD;GZO;EDC"},"hasCjsExports":false},"type":"js/module"}]}