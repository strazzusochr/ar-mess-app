{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}},{"name":"./Audio/RecordingConstants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":105},"end":{"line":3,"column":69,"index":174}}],"key":"PLZx+w+meD0mX+Vfg7jl8Oy4mG0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[1], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  var _AudioRecordingConstants = require(_dependencyMap[2], \"./Audio/RecordingConstants\");\n  async function getPermissionWithQueryAsync(name) {\n    if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n    try {\n      const {\n        state\n      } = await navigator.permissions.query({\n        name\n      });\n      switch (state) {\n        case 'granted':\n          return _expoModulesCore.PermissionStatus.GRANTED;\n        case 'denied':\n          return _expoModulesCore.PermissionStatus.DENIED;\n        default:\n          return _expoModulesCore.PermissionStatus.UNDETERMINED;\n      }\n    } catch {\n      // Firefox - TypeError: 'microphone' (value of 'name' member of PermissionDescriptor) is not a valid value for enumeration PermissionName.\n      return _expoModulesCore.PermissionStatus.UNDETERMINED;\n    }\n  }\n  function getUserMedia(constraints) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia(constraints);\n    }\n    // Some browsers partially implement mediaDevices. We can't just assign an object\n    // with getUserMedia as it would overwrite existing properties.\n    // Here, we will just add the getUserMedia property if it's missing.\n    // First get ahold of the legacy getUserMedia, if present\n    const getUserMedia =\n    // TODO: this method is deprecated, migrate to https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n      const error = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n    return new Promise((resolve, reject) => {\n      // TODO(@kitten): The types indicates that this is incorrect.\n      // Please check whether this is correct!\n      // @ts-expect-error: The `successCallback` doesn't match a `resolve` function\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  }\n  function getStatusFromMedia(media) {\n    if (!media) {\n      return {\n        isLoaded: false,\n        error: undefined\n      };\n    }\n    const isPlaying = !!(media.currentTime > 0 && !media.paused && !media.ended && media.readyState > 2);\n    const status = {\n      isLoaded: true,\n      uri: media.src,\n      progressUpdateIntervalMillis: 100,\n      //TODO: Bacon: Add interval between calls\n      durationMillis: media.duration * 1000,\n      positionMillis: media.currentTime * 1000,\n      // playableDurationMillis: media.buffered * 1000,\n      // seekMillisToleranceBefore?: number\n      // seekMillisToleranceAfter?: number\n      shouldPlay: media.autoplay,\n      isPlaying,\n      isBuffering: false,\n      //media.waiting,\n      rate: media.playbackRate,\n      // TODO: Bacon: This seems too complicated right now: https://webaudio.github.io/web-audio-api/#dom-biquadfilternode-frequency\n      shouldCorrectPitch: false,\n      volume: media.volume,\n      audioPan: 0,\n      isMuted: media.muted,\n      isLooping: media.loop,\n      didJustFinish: media.ended\n    };\n    return status;\n  }\n  async function setStatusForMedia(media, status) {\n    if (status.positionMillis !== undefined) {\n      media.currentTime = status.positionMillis / 1000;\n    }\n    // if (status.progressUpdateIntervalMillis !== undefined) {\n    //   media.progressUpdateIntervalMillis = status.progressUpdateIntervalMillis;\n    // }\n    // if (status.seekMillisToleranceBefore !== undefined) {\n    //   media.seekMillisToleranceBefore = status.seekMillisToleranceBefore;\n    // }\n    // if (status.seekMillisToleranceAfter !== undefined) {\n    //   media.seekMillisToleranceAfter = status.seekMillisToleranceAfter;\n    // }\n    // if (status.shouldCorrectPitch !== undefined) {\n    //   media.shouldCorrectPitch = status.shouldCorrectPitch;\n    // }\n    if (status.shouldPlay !== undefined) {\n      if (status.shouldPlay) {\n        await media.play();\n      } else {\n        await media.pause();\n      }\n    }\n    if (status.rate !== undefined) {\n      media.playbackRate = status.rate;\n    }\n    if (status.shouldCorrectPitch !== undefined) {\n      media.preservesPitch = status.shouldCorrectPitch;\n    }\n    if (status.volume !== undefined) {\n      media.volume = status.volume;\n    }\n    if (status.isMuted !== undefined) {\n      media.muted = status.isMuted;\n    }\n    if (status.isLooping !== undefined) {\n      media.loop = status.isLooping;\n    }\n    return getStatusFromMedia(media);\n  }\n  let mediaRecorder = null;\n  let mediaRecorderUptimeOfLastStartResume = 0;\n  let mediaRecorderDurationAlreadyRecorded = 0;\n  let mediaRecorderIsRecording = false;\n  function getAudioRecorderDurationMillis() {\n    let duration = mediaRecorderDurationAlreadyRecorded;\n    if (mediaRecorderIsRecording && mediaRecorderUptimeOfLastStartResume > 0) {\n      duration += Date.now() - mediaRecorderUptimeOfLastStartResume;\n    }\n    return duration;\n  }\n  var _default = {\n    async getStatusForVideo(element) {\n      return getStatusFromMedia(element);\n    },\n    async loadForVideo(element, nativeSource, fullInitialStatus) {\n      return getStatusFromMedia(element);\n    },\n    async unloadForVideo(element) {\n      return getStatusFromMedia(element);\n    },\n    async setStatusForVideo(element, status) {\n      return setStatusForMedia(element, status);\n    },\n    async replayVideo(element, status) {\n      return setStatusForMedia(element, status);\n    },\n    /* Audio */\n    async setAudioMode() {},\n    async setAudioIsEnabled() {},\n    async getStatusForSound(element) {\n      return getStatusFromMedia(element);\n    },\n    async loadForSound(nativeSource, fullInitialStatus) {\n      const source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n      const media = new Audio(source);\n      media.ontimeupdate = () => {\n        DeviceEventEmitter.default.emit('didUpdatePlaybackStatus', {\n          key: media,\n          status: getStatusFromMedia(media)\n        });\n      };\n      media.onerror = () => {\n        DeviceEventEmitter.default.emit('ExponentAV.onError', {\n          key: media,\n          error: media.error.message\n        });\n      };\n      const status = await setStatusForMedia(media, fullInitialStatus);\n      return [media, status];\n    },\n    async unloadForSound(element) {\n      element.pause();\n      element.removeAttribute('src');\n      element.load();\n      return getStatusFromMedia(element);\n    },\n    async setStatusForSound(element, status) {\n      return setStatusForMedia(element, status);\n    },\n    async replaySound(element, status) {\n      return setStatusForMedia(element, status);\n    },\n    /* Recording */\n    //   async setUnloadedCallbackForAndroidRecording() {},\n    async getAudioRecordingStatus() {\n      return {\n        canRecord: mediaRecorder?.state === 'recording' || mediaRecorder?.state === 'inactive',\n        isRecording: mediaRecorder?.state === 'recording',\n        isDoneRecording: false,\n        durationMillis: getAudioRecorderDurationMillis(),\n        uri: null\n      };\n    },\n    // TODO(@kitten): Needs to be typed\n    async prepareAudioRecorder(options) {\n      if (typeof navigator !== 'undefined' && !navigator.mediaDevices) {\n        throw new Error('No media devices available');\n      }\n      mediaRecorderUptimeOfLastStartResume = 0;\n      mediaRecorderDurationAlreadyRecorded = 0;\n      const stream = await getUserMedia({\n        audio: true\n      });\n      mediaRecorder = new window.MediaRecorder(stream, options?.web || _AudioRecordingConstants.RecordingOptionsPresets.HIGH_QUALITY.web);\n      mediaRecorder.addEventListener('pause', () => {\n        mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n        mediaRecorderIsRecording = false;\n      });\n      mediaRecorder.addEventListener('resume', () => {\n        mediaRecorderUptimeOfLastStartResume = Date.now();\n        mediaRecorderIsRecording = true;\n      });\n      mediaRecorder.addEventListener('start', () => {\n        mediaRecorderUptimeOfLastStartResume = Date.now();\n        mediaRecorderDurationAlreadyRecorded = 0;\n        mediaRecorderIsRecording = true;\n      });\n      mediaRecorder.addEventListener('stop', () => {\n        mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n        mediaRecorderIsRecording = false;\n        // Clears recording icon in Chrome tab\n        stream.getTracks().forEach(track => track.stop());\n      });\n      const {\n        uri,\n        ...status\n      } = await this.getAudioRecordingStatus();\n      return {\n        uri: null,\n        status\n      };\n    },\n    async startAudioRecording() {\n      if (mediaRecorder === null) {\n        throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n      }\n      if (mediaRecorder.state === 'paused') {\n        mediaRecorder.resume();\n      } else {\n        mediaRecorder.start();\n      }\n      return this.getAudioRecordingStatus();\n    },\n    async pauseAudioRecording() {\n      if (mediaRecorder === null) {\n        throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n      }\n      // Set status to paused\n      mediaRecorder.pause();\n      return this.getAudioRecordingStatus();\n    },\n    async stopAudioRecording() {\n      const _mediaRecorder = mediaRecorder;\n      if (_mediaRecorder === null) {\n        throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n      }\n      if (_mediaRecorder.state === 'inactive') {\n        return this.getAudioRecordingStatus();\n      }\n      const dataPromise = new Promise(resolve => _mediaRecorder.addEventListener('dataavailable', e => resolve(e.data)));\n      _mediaRecorder.stop();\n      const data = await dataPromise;\n      const url = URL.createObjectURL(data);\n      return {\n        ...(await this.getAudioRecordingStatus()),\n        uri: url\n      };\n    },\n    async unloadAudioRecorder() {\n      mediaRecorder = null;\n    },\n    async getPermissionsAsync() {\n      const maybeStatus = await getPermissionWithQueryAsync('microphone');\n      switch (maybeStatus) {\n        case _expoModulesCore.PermissionStatus.GRANTED:\n          return {\n            status: _expoModulesCore.PermissionStatus.GRANTED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: true\n          };\n        case _expoModulesCore.PermissionStatus.DENIED:\n          return {\n            status: _expoModulesCore.PermissionStatus.DENIED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false\n          };\n        default:\n          return await this.requestPermissionsAsync();\n      }\n    },\n    async requestPermissionsAsync() {\n      try {\n        const stream = await getUserMedia({\n          audio: true\n        });\n        stream.getTracks().forEach(track => track.stop());\n        return {\n          status: _expoModulesCore.PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true\n        };\n      } catch {\n        return {\n          status: _expoModulesCore.PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false\n        };\n      }\n    }\n  };\n});","lineCount":334,"map":[[12,2,135,0,"Object"],[12,8,135,0],[12,9,135,0,"defineProperty"],[12,23,135,0],[12,24,135,0,"exports"],[12,31,135,0],[13,4,135,0,"enumerable"],[13,14,135,0],[14,4,135,0,"get"],[14,7,135,0],[14,18,135,0,"get"],[14,19,135,0],[15,6,135,0],[15,13,135,0,"_default"],[15,21,135,0],[16,4,135,0],[17,2,135,0],[18,2,1,0],[18,6,1,0,"_expoModulesCore"],[18,22,1,0],[18,25,1,0,"require"],[18,32,1,0],[18,33,1,0,"_dependencyMap"],[18,47,1,0],[19,2,1,53],[19,6,1,53,"_reactNativeWebDistExportsDeviceEventEmitter"],[19,50,1,53],[19,53,1,53,"require"],[19,60,1,53],[19,61,1,53,"_dependencyMap"],[19,75,1,53],[20,2,1,53],[20,6,1,53,"DeviceEventEmitter"],[20,24,1,53],[20,27,1,53,"_interopDefault"],[20,42,1,53],[20,43,1,53,"_reactNativeWebDistExportsDeviceEventEmitter"],[20,87,1,53],[21,2,3,0],[21,6,3,0,"_AudioRecordingConstants"],[21,30,3,0],[21,33,3,0,"require"],[21,40,3,0],[21,41,3,0,"_dependencyMap"],[21,55,3,0],[22,2,4,0],[22,17,4,15,"getPermissionWithQueryAsync"],[22,44,4,42,"getPermissionWithQueryAsync"],[22,45,4,43,"name"],[22,49,4,47],[22,51,4,49],[23,4,5,4],[23,8,5,8],[23,9,5,9,"navigator"],[23,18,5,18],[23,22,5,22],[23,23,5,23,"navigator"],[23,32,5,32],[23,33,5,33,"permissions"],[23,44,5,44],[23,48,5,48],[23,49,5,49,"navigator"],[23,58,5,58],[23,59,5,59,"permissions"],[23,70,5,70],[23,71,5,71,"query"],[23,76,5,76],[23,78,6,8],[23,85,6,15],[23,89,6,19],[24,4,7,4],[24,8,7,8],[25,6,8,8],[25,12,8,14],[26,8,8,16,"state"],[27,6,8,22],[27,7,8,23],[27,10,8,26],[27,16,8,32,"navigator"],[27,25,8,41],[27,26,8,42,"permissions"],[27,37,8,53],[27,38,8,54,"query"],[27,43,8,59],[27,44,8,60],[28,8,8,62,"name"],[29,6,8,67],[29,7,8,68],[29,8,8,69],[30,6,9,8],[30,14,9,16,"state"],[30,19,9,21],[31,8,10,12],[31,13,10,17],[31,22,10,26],[32,10,11,16],[32,17,11,23,"PermissionStatus"],[32,33,11,39],[32,34,11,39,"PermissionStatus"],[32,50,11,39],[32,51,11,40,"GRANTED"],[32,58,11,47],[33,8,12,12],[33,13,12,17],[33,21,12,25],[34,10,13,16],[34,17,13,23,"PermissionStatus"],[34,33,13,39],[34,34,13,39,"PermissionStatus"],[34,50,13,39],[34,51,13,40,"DENIED"],[34,57,13,46],[35,8,14,12],[36,10,15,16],[36,17,15,23,"PermissionStatus"],[36,33,15,39],[36,34,15,39,"PermissionStatus"],[36,50,15,39],[36,51,15,40,"UNDETERMINED"],[36,63,15,52],[37,6,16,8],[38,4,17,4],[38,5,17,5],[38,6,18,4],[38,12,18,10],[39,6,19,8],[40,6,20,8],[40,13,20,15,"PermissionStatus"],[40,29,20,31],[40,30,20,31,"PermissionStatus"],[40,46,20,31],[40,47,20,32,"UNDETERMINED"],[40,59,20,44],[41,4,21,4],[42,2,22,0],[43,2,23,0],[43,11,23,9,"getUserMedia"],[43,23,23,21,"getUserMedia"],[43,24,23,22,"constraints"],[43,35,23,33],[43,37,23,35],[44,4,24,4],[44,8,24,8,"navigator"],[44,17,24,17],[44,18,24,18,"mediaDevices"],[44,30,24,30],[44,34,24,34,"navigator"],[44,43,24,43],[44,44,24,44,"mediaDevices"],[44,56,24,56],[44,57,24,57,"getUserMedia"],[44,69,24,69],[44,71,24,71],[45,6,25,8],[45,13,25,15,"navigator"],[45,22,25,24],[45,23,25,25,"mediaDevices"],[45,35,25,37],[45,36,25,38,"getUserMedia"],[45,48,25,50],[45,49,25,51,"constraints"],[45,60,25,62],[45,61,25,63],[46,4,26,4],[47,4,27,4],[48,4,28,4],[49,4,29,4],[50,4,30,4],[51,4,31,4],[51,10,31,10,"getUserMedia"],[51,22,31,22],[52,4,32,4],[53,4,33,4,"navigator"],[53,13,33,13],[53,14,33,14,"getUserMedia"],[53,26,33,26],[53,30,34,8,"navigator"],[53,39,34,17],[53,40,34,18,"webkitGetUserMedia"],[53,58,34,36],[53,62,35,8,"navigator"],[53,71,35,17],[53,72,35,18,"mozGetUserMedia"],[53,87,35,33],[53,91,36,8],[53,103,36,20],[54,6,37,12],[54,12,37,18,"error"],[54,17,37,23],[54,20,37,26],[54,24,37,30,"Error"],[54,29,37,35],[54,30,37,36],[54,56,37,62],[54,57,37,63],[55,6,38,12,"error"],[55,11,38,17],[55,12,38,18,"code"],[55,16,38,22],[55,19,38,25],[55,20,38,26],[56,6,39,12,"error"],[56,11,39,17],[56,12,39,18,"name"],[56,16,39,22],[56,19,39,25],[56,36,39,42],[57,6,40,12],[57,12,40,18,"error"],[57,17,40,23],[58,4,41,8],[58,5,41,9],[59,4,42,4],[59,11,42,11],[59,15,42,15,"Promise"],[59,22,42,22],[59,23,42,23],[59,24,42,24,"resolve"],[59,31,42,31],[59,33,42,33,"reject"],[59,39,42,39],[59,44,42,44],[60,6,43,8],[61,6,44,8],[62,6,45,8],[63,6,46,8,"getUserMedia"],[63,18,46,20],[63,19,46,21,"call"],[63,23,46,25],[63,24,46,26,"navigator"],[63,33,46,35],[63,35,46,37,"constraints"],[63,46,46,48],[63,48,46,50,"resolve"],[63,55,46,57],[63,57,46,59,"reject"],[63,63,46,65],[63,64,46,66],[64,4,47,4],[64,5,47,5],[64,6,47,6],[65,2,48,0],[66,2,49,0],[66,11,49,9,"getStatusFromMedia"],[66,29,49,27,"getStatusFromMedia"],[66,30,49,28,"media"],[66,35,49,33],[66,37,49,35],[67,4,50,4],[67,8,50,8],[67,9,50,9,"media"],[67,14,50,14],[67,16,50,16],[68,6,51,8],[68,13,51,15],[69,8,52,12,"isLoaded"],[69,16,52,20],[69,18,52,22],[69,23,52,27],[70,8,53,12,"error"],[70,13,53,17],[70,15,53,19,"undefined"],[71,6,54,8],[71,7,54,9],[72,4,55,4],[73,4,56,4],[73,10,56,10,"isPlaying"],[73,19,56,19],[73,22,56,22],[73,23,56,23],[73,25,56,25,"media"],[73,30,56,30],[73,31,56,31,"currentTime"],[73,42,56,42],[73,45,56,45],[73,46,56,46],[73,50,57,8],[73,51,57,9,"media"],[73,56,57,14],[73,57,57,15,"paused"],[73,63,57,21],[73,67,58,8],[73,68,58,9,"media"],[73,73,58,14],[73,74,58,15,"ended"],[73,79,58,20],[73,83,59,8,"media"],[73,88,59,13],[73,89,59,14,"readyState"],[73,99,59,24],[73,102,59,27],[73,103,59,28],[73,104,59,29],[74,4,60,4],[74,10,60,10,"status"],[74,16,60,16],[74,19,60,19],[75,6,61,8,"isLoaded"],[75,14,61,16],[75,16,61,18],[75,20,61,22],[76,6,62,8,"uri"],[76,9,62,11],[76,11,62,13,"media"],[76,16,62,18],[76,17,62,19,"src"],[76,20,62,22],[77,6,63,8,"progressUpdateIntervalMillis"],[77,34,63,36],[77,36,63,38],[77,39,63,41],[78,6,63,43],[79,6,64,8,"durationMillis"],[79,20,64,22],[79,22,64,24,"media"],[79,27,64,29],[79,28,64,30,"duration"],[79,36,64,38],[79,39,64,41],[79,43,64,45],[80,6,65,8,"positionMillis"],[80,20,65,22],[80,22,65,24,"media"],[80,27,65,29],[80,28,65,30,"currentTime"],[80,39,65,41],[80,42,65,44],[80,46,65,48],[81,6,66,8],[82,6,67,8],[83,6,68,8],[84,6,69,8,"shouldPlay"],[84,16,69,18],[84,18,69,20,"media"],[84,23,69,25],[84,24,69,26,"autoplay"],[84,32,69,34],[85,6,70,8,"isPlaying"],[85,15,70,17],[86,6,71,8,"isBuffering"],[86,17,71,19],[86,19,71,21],[86,24,71,26],[87,6,71,28],[88,6,72,8,"rate"],[88,10,72,12],[88,12,72,14,"media"],[88,17,72,19],[88,18,72,20,"playbackRate"],[88,30,72,32],[89,6,73,8],[90,6,74,8,"shouldCorrectPitch"],[90,24,74,26],[90,26,74,28],[90,31,74,33],[91,6,75,8,"volume"],[91,12,75,14],[91,14,75,16,"media"],[91,19,75,21],[91,20,75,22,"volume"],[91,26,75,28],[92,6,76,8,"audioPan"],[92,14,76,16],[92,16,76,18],[92,17,76,19],[93,6,77,8,"isMuted"],[93,13,77,15],[93,15,77,17,"media"],[93,20,77,22],[93,21,77,23,"muted"],[93,26,77,28],[94,6,78,8,"isLooping"],[94,15,78,17],[94,17,78,19,"media"],[94,22,78,24],[94,23,78,25,"loop"],[94,27,78,29],[95,6,79,8,"didJustFinish"],[95,19,79,21],[95,21,79,23,"media"],[95,26,79,28],[95,27,79,29,"ended"],[96,4,80,4],[96,5,80,5],[97,4,81,4],[97,11,81,11,"status"],[97,17,81,17],[98,2,82,0],[99,2,83,0],[99,17,83,15,"setStatusForMedia"],[99,34,83,32,"setStatusForMedia"],[99,35,83,33,"media"],[99,40,83,38],[99,42,83,40,"status"],[99,48,83,46],[99,50,83,48],[100,4,84,4],[100,8,84,8,"status"],[100,14,84,14],[100,15,84,15,"positionMillis"],[100,29,84,29],[100,34,84,34,"undefined"],[100,43,84,43],[100,45,84,45],[101,6,85,8,"media"],[101,11,85,13],[101,12,85,14,"currentTime"],[101,23,85,25],[101,26,85,28,"status"],[101,32,85,34],[101,33,85,35,"positionMillis"],[101,47,85,49],[101,50,85,52],[101,54,85,56],[102,4,86,4],[103,4,87,4],[104,4,88,4],[105,4,89,4],[106,4,90,4],[107,4,91,4],[108,4,92,4],[109,4,93,4],[110,4,94,4],[111,4,95,4],[112,4,96,4],[113,4,97,4],[114,4,98,4],[115,4,99,4],[115,8,99,8,"status"],[115,14,99,14],[115,15,99,15,"shouldPlay"],[115,25,99,25],[115,30,99,30,"undefined"],[115,39,99,39],[115,41,99,41],[116,6,100,8],[116,10,100,12,"status"],[116,16,100,18],[116,17,100,19,"shouldPlay"],[116,27,100,29],[116,29,100,31],[117,8,101,12],[117,14,101,18,"media"],[117,19,101,23],[117,20,101,24,"play"],[117,24,101,28],[117,25,101,29],[117,26,101,30],[118,6,102,8],[118,7,102,9],[118,13,103,13],[119,8,104,12],[119,14,104,18,"media"],[119,19,104,23],[119,20,104,24,"pause"],[119,25,104,29],[119,26,104,30],[119,27,104,31],[120,6,105,8],[121,4,106,4],[122,4,107,4],[122,8,107,8,"status"],[122,14,107,14],[122,15,107,15,"rate"],[122,19,107,19],[122,24,107,24,"undefined"],[122,33,107,33],[122,35,107,35],[123,6,108,8,"media"],[123,11,108,13],[123,12,108,14,"playbackRate"],[123,24,108,26],[123,27,108,29,"status"],[123,33,108,35],[123,34,108,36,"rate"],[123,38,108,40],[124,4,109,4],[125,4,110,4],[125,8,110,8,"status"],[125,14,110,14],[125,15,110,15,"shouldCorrectPitch"],[125,33,110,33],[125,38,110,38,"undefined"],[125,47,110,47],[125,49,110,49],[126,6,111,8,"media"],[126,11,111,13],[126,12,111,14,"preservesPitch"],[126,26,111,28],[126,29,111,31,"status"],[126,35,111,37],[126,36,111,38,"shouldCorrectPitch"],[126,54,111,56],[127,4,112,4],[128,4,113,4],[128,8,113,8,"status"],[128,14,113,14],[128,15,113,15,"volume"],[128,21,113,21],[128,26,113,26,"undefined"],[128,35,113,35],[128,37,113,37],[129,6,114,8,"media"],[129,11,114,13],[129,12,114,14,"volume"],[129,18,114,20],[129,21,114,23,"status"],[129,27,114,29],[129,28,114,30,"volume"],[129,34,114,36],[130,4,115,4],[131,4,116,4],[131,8,116,8,"status"],[131,14,116,14],[131,15,116,15,"isMuted"],[131,22,116,22],[131,27,116,27,"undefined"],[131,36,116,36],[131,38,116,38],[132,6,117,8,"media"],[132,11,117,13],[132,12,117,14,"muted"],[132,17,117,19],[132,20,117,22,"status"],[132,26,117,28],[132,27,117,29,"isMuted"],[132,34,117,36],[133,4,118,4],[134,4,119,4],[134,8,119,8,"status"],[134,14,119,14],[134,15,119,15,"isLooping"],[134,24,119,24],[134,29,119,29,"undefined"],[134,38,119,38],[134,40,119,40],[135,6,120,8,"media"],[135,11,120,13],[135,12,120,14,"loop"],[135,16,120,18],[135,19,120,21,"status"],[135,25,120,27],[135,26,120,28,"isLooping"],[135,35,120,37],[136,4,121,4],[137,4,122,4],[137,11,122,11,"getStatusFromMedia"],[137,29,122,29],[137,30,122,30,"media"],[137,35,122,35],[137,36,122,36],[138,2,123,0],[139,2,124,0],[139,6,124,4,"mediaRecorder"],[139,19,124,17],[139,22,124,20],[139,26,124,24],[140,2,125,0],[140,6,125,4,"mediaRecorderUptimeOfLastStartResume"],[140,42,125,40],[140,45,125,43],[140,46,125,44],[141,2,126,0],[141,6,126,4,"mediaRecorderDurationAlreadyRecorded"],[141,42,126,40],[141,45,126,43],[141,46,126,44],[142,2,127,0],[142,6,127,4,"mediaRecorderIsRecording"],[142,30,127,28],[142,33,127,31],[142,38,127,36],[143,2,128,0],[143,11,128,9,"getAudioRecorderDurationMillis"],[143,41,128,39,"getAudioRecorderDurationMillis"],[143,42,128,39],[143,44,128,42],[144,4,129,4],[144,8,129,8,"duration"],[144,16,129,16],[144,19,129,19,"mediaRecorderDurationAlreadyRecorded"],[144,55,129,55],[145,4,130,4],[145,8,130,8,"mediaRecorderIsRecording"],[145,32,130,32],[145,36,130,36,"mediaRecorderUptimeOfLastStartResume"],[145,72,130,72],[145,75,130,75],[145,76,130,76],[145,78,130,78],[146,6,131,8,"duration"],[146,14,131,16],[146,18,131,20,"Date"],[146,22,131,24],[146,23,131,25,"now"],[146,26,131,28],[146,27,131,29],[146,28,131,30],[146,31,131,33,"mediaRecorderUptimeOfLastStartResume"],[146,67,131,69],[147,4,132,4],[148,4,133,4],[148,11,133,11,"duration"],[148,19,133,19],[149,2,134,0],[150,2,135,0],[150,6,135,0,"_default"],[150,14,135,0],[150,17,135,15],[151,4,136,4],[151,10,136,10,"getStatusForVideo"],[151,27,136,27,"getStatusForVideo"],[151,28,136,28,"element"],[151,35,136,35],[151,37,136,37],[152,6,137,8],[152,13,137,15,"getStatusFromMedia"],[152,31,137,33],[152,32,137,34,"element"],[152,39,137,41],[152,40,137,42],[153,4,138,4],[153,5,138,5],[154,4,139,4],[154,10,139,10,"loadForVideo"],[154,22,139,22,"loadForVideo"],[154,23,139,23,"element"],[154,30,139,30],[154,32,139,32,"nativeSource"],[154,44,139,44],[154,46,139,46,"fullInitialStatus"],[154,63,139,63],[154,65,139,65],[155,6,140,8],[155,13,140,15,"getStatusFromMedia"],[155,31,140,33],[155,32,140,34,"element"],[155,39,140,41],[155,40,140,42],[156,4,141,4],[156,5,141,5],[157,4,142,4],[157,10,142,10,"unloadForVideo"],[157,24,142,24,"unloadForVideo"],[157,25,142,25,"element"],[157,32,142,32],[157,34,142,34],[158,6,143,8],[158,13,143,15,"getStatusFromMedia"],[158,31,143,33],[158,32,143,34,"element"],[158,39,143,41],[158,40,143,42],[159,4,144,4],[159,5,144,5],[160,4,145,4],[160,10,145,10,"setStatusForVideo"],[160,27,145,27,"setStatusForVideo"],[160,28,145,28,"element"],[160,35,145,35],[160,37,145,37,"status"],[160,43,145,43],[160,45,145,45],[161,6,146,8],[161,13,146,15,"setStatusForMedia"],[161,30,146,32],[161,31,146,33,"element"],[161,38,146,40],[161,40,146,42,"status"],[161,46,146,48],[161,47,146,49],[162,4,147,4],[162,5,147,5],[163,4,148,4],[163,10,148,10,"replayVideo"],[163,21,148,21,"replayVideo"],[163,22,148,22,"element"],[163,29,148,29],[163,31,148,31,"status"],[163,37,148,37],[163,39,148,39],[164,6,149,8],[164,13,149,15,"setStatusForMedia"],[164,30,149,32],[164,31,149,33,"element"],[164,38,149,40],[164,40,149,42,"status"],[164,46,149,48],[164,47,149,49],[165,4,150,4],[165,5,150,5],[166,4,151,4],[167,4,152,4],[167,10,152,10,"setAudioMode"],[167,22,152,22,"setAudioMode"],[167,23,152,22],[167,25,152,25],[167,26,152,27],[167,27,152,28],[168,4,153,4],[168,10,153,10,"setAudioIsEnabled"],[168,27,153,27,"setAudioIsEnabled"],[168,28,153,27],[168,30,153,30],[168,31,153,32],[168,32,153,33],[169,4,154,4],[169,10,154,10,"getStatusForSound"],[169,27,154,27,"getStatusForSound"],[169,28,154,28,"element"],[169,35,154,35],[169,37,154,37],[170,6,155,8],[170,13,155,15,"getStatusFromMedia"],[170,31,155,33],[170,32,155,34,"element"],[170,39,155,41],[170,40,155,42],[171,4,156,4],[171,5,156,5],[172,4,157,4],[172,10,157,10,"loadForSound"],[172,22,157,22,"loadForSound"],[172,23,157,23,"nativeSource"],[172,35,157,35],[172,37,157,37,"fullInitialStatus"],[172,54,157,54],[172,56,157,56],[173,6,158,8],[173,12,158,14,"source"],[173,18,158,20],[173,21,158,23],[173,28,158,30,"nativeSource"],[173,40,158,42],[173,45,158,47],[173,53,158,55],[173,56,158,58,"nativeSource"],[173,68,158,70],[173,71,158,73,"nativeSource"],[173,83,158,85],[173,84,158,86,"uri"],[173,87,158,89],[174,6,159,8],[174,12,159,14,"media"],[174,17,159,19],[174,20,159,22],[174,24,159,26,"Audio"],[174,29,159,31],[174,30,159,32,"source"],[174,36,159,38],[174,37,159,39],[175,6,160,8,"media"],[175,11,160,13],[175,12,160,14,"ontimeupdate"],[175,24,160,26],[175,27,160,29],[175,33,160,35],[176,8,161,12,"DeviceEventEmitter"],[176,26,161,30],[176,27,161,30,"default"],[176,34,161,30],[176,35,161,31,"emit"],[176,39,161,35],[176,40,161,36],[176,65,161,61],[176,67,161,63],[177,10,162,16,"key"],[177,13,162,19],[177,15,162,21,"media"],[177,20,162,26],[178,10,163,16,"status"],[178,16,163,22],[178,18,163,24,"getStatusFromMedia"],[178,36,163,42],[178,37,163,43,"media"],[178,42,163,48],[179,8,164,12],[179,9,164,13],[179,10,164,14],[180,6,165,8],[180,7,165,9],[181,6,166,8,"media"],[181,11,166,13],[181,12,166,14,"onerror"],[181,19,166,21],[181,22,166,24],[181,28,166,30],[182,8,167,12,"DeviceEventEmitter"],[182,26,167,30],[182,27,167,30,"default"],[182,34,167,30],[182,35,167,31,"emit"],[182,39,167,35],[182,40,167,36],[182,60,167,56],[182,62,167,58],[183,10,168,16,"key"],[183,13,168,19],[183,15,168,21,"media"],[183,20,168,26],[184,10,169,16,"error"],[184,15,169,21],[184,17,169,23,"media"],[184,22,169,28],[184,23,169,29,"error"],[184,28,169,34],[184,29,169,35,"message"],[185,8,170,12],[185,9,170,13],[185,10,170,14],[186,6,171,8],[186,7,171,9],[187,6,172,8],[187,12,172,14,"status"],[187,18,172,20],[187,21,172,23],[187,27,172,29,"setStatusForMedia"],[187,44,172,46],[187,45,172,47,"media"],[187,50,172,52],[187,52,172,54,"fullInitialStatus"],[187,69,172,71],[187,70,172,72],[188,6,173,8],[188,13,173,15],[188,14,173,16,"media"],[188,19,173,21],[188,21,173,23,"status"],[188,27,173,29],[188,28,173,30],[189,4,174,4],[189,5,174,5],[190,4,175,4],[190,10,175,10,"unloadForSound"],[190,24,175,24,"unloadForSound"],[190,25,175,25,"element"],[190,32,175,32],[190,34,175,34],[191,6,176,8,"element"],[191,13,176,15],[191,14,176,16,"pause"],[191,19,176,21],[191,20,176,22],[191,21,176,23],[192,6,177,8,"element"],[192,13,177,15],[192,14,177,16,"removeAttribute"],[192,29,177,31],[192,30,177,32],[192,35,177,37],[192,36,177,38],[193,6,178,8,"element"],[193,13,178,15],[193,14,178,16,"load"],[193,18,178,20],[193,19,178,21],[193,20,178,22],[194,6,179,8],[194,13,179,15,"getStatusFromMedia"],[194,31,179,33],[194,32,179,34,"element"],[194,39,179,41],[194,40,179,42],[195,4,180,4],[195,5,180,5],[196,4,181,4],[196,10,181,10,"setStatusForSound"],[196,27,181,27,"setStatusForSound"],[196,28,181,28,"element"],[196,35,181,35],[196,37,181,37,"status"],[196,43,181,43],[196,45,181,45],[197,6,182,8],[197,13,182,15,"setStatusForMedia"],[197,30,182,32],[197,31,182,33,"element"],[197,38,182,40],[197,40,182,42,"status"],[197,46,182,48],[197,47,182,49],[198,4,183,4],[198,5,183,5],[199,4,184,4],[199,10,184,10,"replaySound"],[199,21,184,21,"replaySound"],[199,22,184,22,"element"],[199,29,184,29],[199,31,184,31,"status"],[199,37,184,37],[199,39,184,39],[200,6,185,8],[200,13,185,15,"setStatusForMedia"],[200,30,185,32],[200,31,185,33,"element"],[200,38,185,40],[200,40,185,42,"status"],[200,46,185,48],[200,47,185,49],[201,4,186,4],[201,5,186,5],[202,4,187,4],[203,4,188,4],[204,4,189,4],[204,10,189,10,"getAudioRecordingStatus"],[204,33,189,33,"getAudioRecordingStatus"],[204,34,189,33],[204,36,189,36],[205,6,190,8],[205,13,190,15],[206,8,191,12,"canRecord"],[206,17,191,21],[206,19,191,23,"mediaRecorder"],[206,32,191,36],[206,34,191,38,"state"],[206,39,191,43],[206,44,191,48],[206,55,191,59],[206,59,191,63,"mediaRecorder"],[206,72,191,76],[206,74,191,78,"state"],[206,79,191,83],[206,84,191,88],[206,94,191,98],[207,8,192,12,"isRecording"],[207,19,192,23],[207,21,192,25,"mediaRecorder"],[207,34,192,38],[207,36,192,40,"state"],[207,41,192,45],[207,46,192,50],[207,57,192,61],[208,8,193,12,"isDoneRecording"],[208,23,193,27],[208,25,193,29],[208,30,193,34],[209,8,194,12,"durationMillis"],[209,22,194,26],[209,24,194,28,"getAudioRecorderDurationMillis"],[209,54,194,58],[209,55,194,59],[209,56,194,60],[210,8,195,12,"uri"],[210,11,195,15],[210,13,195,17],[211,6,196,8],[211,7,196,9],[212,4,197,4],[212,5,197,5],[213,4,198,4],[214,4,199,4],[214,10,199,10,"prepareAudioRecorder"],[214,30,199,30,"prepareAudioRecorder"],[214,31,199,31,"options"],[214,38,199,38],[214,40,199,40],[215,6,200,8],[215,10,200,12],[215,17,200,19,"navigator"],[215,26,200,28],[215,31,200,33],[215,42,200,44],[215,46,200,48],[215,47,200,49,"navigator"],[215,56,200,58],[215,57,200,59,"mediaDevices"],[215,69,200,71],[215,71,200,73],[216,8,201,12],[216,14,201,18],[216,18,201,22,"Error"],[216,23,201,27],[216,24,201,28],[216,52,201,56],[216,53,201,57],[217,6,202,8],[218,6,203,8,"mediaRecorderUptimeOfLastStartResume"],[218,42,203,44],[218,45,203,47],[218,46,203,48],[219,6,204,8,"mediaRecorderDurationAlreadyRecorded"],[219,42,204,44],[219,45,204,47],[219,46,204,48],[220,6,205,8],[220,12,205,14,"stream"],[220,18,205,20],[220,21,205,23],[220,27,205,29,"getUserMedia"],[220,39,205,41],[220,40,205,42],[221,8,205,44,"audio"],[221,13,205,49],[221,15,205,51],[222,6,205,56],[222,7,205,57],[222,8,205,58],[223,6,206,8,"mediaRecorder"],[223,19,206,21],[223,22,206,24],[223,26,206,28,"window"],[223,32,206,34],[223,33,206,35,"MediaRecorder"],[223,46,206,48],[223,47,206,49,"stream"],[223,53,206,55],[223,55,206,57,"options"],[223,62,206,64],[223,64,206,66,"web"],[223,67,206,69],[223,71,206,73,"RecordingOptionsPresets"],[223,95,206,96],[223,96,206,96,"RecordingOptionsPresets"],[223,119,206,96],[223,120,206,97,"HIGH_QUALITY"],[223,132,206,109],[223,133,206,110,"web"],[223,136,206,113],[223,137,206,114],[224,6,207,8,"mediaRecorder"],[224,19,207,21],[224,20,207,22,"addEventListener"],[224,36,207,38],[224,37,207,39],[224,44,207,46],[224,46,207,48],[224,52,207,54],[225,8,208,12,"mediaRecorderDurationAlreadyRecorded"],[225,44,208,48],[225,47,208,51,"getAudioRecorderDurationMillis"],[225,77,208,81],[225,78,208,82],[225,79,208,83],[226,8,209,12,"mediaRecorderIsRecording"],[226,32,209,36],[226,35,209,39],[226,40,209,44],[227,6,210,8],[227,7,210,9],[227,8,210,10],[228,6,211,8,"mediaRecorder"],[228,19,211,21],[228,20,211,22,"addEventListener"],[228,36,211,38],[228,37,211,39],[228,45,211,47],[228,47,211,49],[228,53,211,55],[229,8,212,12,"mediaRecorderUptimeOfLastStartResume"],[229,44,212,48],[229,47,212,51,"Date"],[229,51,212,55],[229,52,212,56,"now"],[229,55,212,59],[229,56,212,60],[229,57,212,61],[230,8,213,12,"mediaRecorderIsRecording"],[230,32,213,36],[230,35,213,39],[230,39,213,43],[231,6,214,8],[231,7,214,9],[231,8,214,10],[232,6,215,8,"mediaRecorder"],[232,19,215,21],[232,20,215,22,"addEventListener"],[232,36,215,38],[232,37,215,39],[232,44,215,46],[232,46,215,48],[232,52,215,54],[233,8,216,12,"mediaRecorderUptimeOfLastStartResume"],[233,44,216,48],[233,47,216,51,"Date"],[233,51,216,55],[233,52,216,56,"now"],[233,55,216,59],[233,56,216,60],[233,57,216,61],[234,8,217,12,"mediaRecorderDurationAlreadyRecorded"],[234,44,217,48],[234,47,217,51],[234,48,217,52],[235,8,218,12,"mediaRecorderIsRecording"],[235,32,218,36],[235,35,218,39],[235,39,218,43],[236,6,219,8],[236,7,219,9],[236,8,219,10],[237,6,220,8,"mediaRecorder"],[237,19,220,21],[237,20,220,22,"addEventListener"],[237,36,220,38],[237,37,220,39],[237,43,220,45],[237,45,220,47],[237,51,220,53],[238,8,221,12,"mediaRecorderDurationAlreadyRecorded"],[238,44,221,48],[238,47,221,51,"getAudioRecorderDurationMillis"],[238,77,221,81],[238,78,221,82],[238,79,221,83],[239,8,222,12,"mediaRecorderIsRecording"],[239,32,222,36],[239,35,222,39],[239,40,222,44],[240,8,223,12],[241,8,224,12,"stream"],[241,14,224,18],[241,15,224,19,"getTracks"],[241,24,224,28],[241,25,224,29],[241,26,224,30],[241,27,224,31,"forEach"],[241,34,224,38],[241,35,224,40,"track"],[241,40,224,45],[241,44,224,50,"track"],[241,49,224,55],[241,50,224,56,"stop"],[241,54,224,60],[241,55,224,61],[241,56,224,62],[241,57,224,63],[242,6,225,8],[242,7,225,9],[242,8,225,10],[243,6,226,8],[243,12,226,14],[244,8,226,16,"uri"],[244,11,226,19],[245,8,226,21],[245,11,226,24,"status"],[246,6,226,31],[246,7,226,32],[246,10,226,35],[246,16,226,41],[246,20,226,45],[246,21,226,46,"getAudioRecordingStatus"],[246,44,226,69],[246,45,226,70],[246,46,226,71],[247,6,227,8],[247,13,227,15],[248,8,227,17,"uri"],[248,11,227,20],[248,13,227,22],[248,17,227,26],[249,8,227,28,"status"],[250,6,227,35],[250,7,227,36],[251,4,228,4],[251,5,228,5],[252,4,229,4],[252,10,229,10,"startAudioRecording"],[252,29,229,29,"startAudioRecording"],[252,30,229,29],[252,32,229,32],[253,6,230,8],[253,10,230,12,"mediaRecorder"],[253,23,230,25],[253,28,230,30],[253,32,230,34],[253,34,230,36],[254,8,231,12],[254,14,231,18],[254,18,231,22,"Error"],[254,23,231,27],[254,24,231,28],[254,169,231,173],[254,170,231,174],[255,6,232,8],[256,6,233,8],[256,10,233,12,"mediaRecorder"],[256,23,233,25],[256,24,233,26,"state"],[256,29,233,31],[256,34,233,36],[256,42,233,44],[256,44,233,46],[257,8,234,12,"mediaRecorder"],[257,21,234,25],[257,22,234,26,"resume"],[257,28,234,32],[257,29,234,33],[257,30,234,34],[258,6,235,8],[258,7,235,9],[258,13,236,13],[259,8,237,12,"mediaRecorder"],[259,21,237,25],[259,22,237,26,"start"],[259,27,237,31],[259,28,237,32],[259,29,237,33],[260,6,238,8],[261,6,239,8],[261,13,239,15],[261,17,239,19],[261,18,239,20,"getAudioRecordingStatus"],[261,41,239,43],[261,42,239,44],[261,43,239,45],[262,4,240,4],[262,5,240,5],[263,4,241,4],[263,10,241,10,"pauseAudioRecording"],[263,29,241,29,"pauseAudioRecording"],[263,30,241,29],[263,32,241,32],[264,6,242,8],[264,10,242,12,"mediaRecorder"],[264,23,242,25],[264,28,242,30],[264,32,242,34],[264,34,242,36],[265,8,243,12],[265,14,243,18],[265,18,243,22,"Error"],[265,23,243,27],[265,24,243,28],[265,169,243,173],[265,170,243,174],[266,6,244,8],[267,6,245,8],[268,6,246,8,"mediaRecorder"],[268,19,246,21],[268,20,246,22,"pause"],[268,25,246,27],[268,26,246,28],[268,27,246,29],[269,6,247,8],[269,13,247,15],[269,17,247,19],[269,18,247,20,"getAudioRecordingStatus"],[269,41,247,43],[269,42,247,44],[269,43,247,45],[270,4,248,4],[270,5,248,5],[271,4,249,4],[271,10,249,10,"stopAudioRecording"],[271,28,249,28,"stopAudioRecording"],[271,29,249,28],[271,31,249,31],[272,6,250,8],[272,12,250,14,"_mediaRecorder"],[272,26,250,28],[272,29,250,31,"mediaRecorder"],[272,42,250,44],[273,6,251,8],[273,10,251,12,"_mediaRecorder"],[273,24,251,26],[273,29,251,31],[273,33,251,35],[273,35,251,37],[274,8,252,12],[274,14,252,18],[274,18,252,22,"Error"],[274,23,252,27],[274,24,252,28],[274,169,252,173],[274,170,252,174],[275,6,253,8],[276,6,254,8],[276,10,254,12,"_mediaRecorder"],[276,24,254,26],[276,25,254,27,"state"],[276,30,254,32],[276,35,254,37],[276,45,254,47],[276,47,254,49],[277,8,255,12],[277,15,255,19],[277,19,255,23],[277,20,255,24,"getAudioRecordingStatus"],[277,43,255,47],[277,44,255,48],[277,45,255,49],[278,6,256,8],[279,6,257,8],[279,12,257,14,"dataPromise"],[279,23,257,25],[279,26,257,28],[279,30,257,32,"Promise"],[279,37,257,39],[279,38,257,41,"resolve"],[279,45,257,48],[279,49,257,53,"_mediaRecorder"],[279,63,257,67],[279,64,257,68,"addEventListener"],[279,80,257,84],[279,81,257,85],[279,96,257,100],[279,98,257,103,"e"],[279,99,257,104],[279,103,257,109,"resolve"],[279,110,257,116],[279,111,257,117,"e"],[279,112,257,118],[279,113,257,119,"data"],[279,117,257,123],[279,118,257,124],[279,119,257,125],[279,120,257,126],[280,6,258,8,"_mediaRecorder"],[280,20,258,22],[280,21,258,23,"stop"],[280,25,258,27],[280,26,258,28],[280,27,258,29],[281,6,259,8],[281,12,259,14,"data"],[281,16,259,18],[281,19,259,21],[281,25,259,27,"dataPromise"],[281,36,259,38],[282,6,260,8],[282,12,260,14,"url"],[282,15,260,17],[282,18,260,20,"URL"],[282,21,260,23],[282,22,260,24,"createObjectURL"],[282,37,260,39],[282,38,260,40,"data"],[282,42,260,44],[282,43,260,45],[283,6,261,8],[283,13,261,15],[284,8,262,12],[284,12,262,16],[284,18,262,22],[284,22,262,26],[284,23,262,27,"getAudioRecordingStatus"],[284,46,262,50],[284,47,262,51],[284,48,262,52],[284,49,262,53],[285,8,263,12,"uri"],[285,11,263,15],[285,13,263,17,"url"],[286,6,264,8],[286,7,264,9],[287,4,265,4],[287,5,265,5],[288,4,266,4],[288,10,266,10,"unloadAudioRecorder"],[288,29,266,29,"unloadAudioRecorder"],[288,30,266,29],[288,32,266,32],[289,6,267,8,"mediaRecorder"],[289,19,267,21],[289,22,267,24],[289,26,267,28],[290,4,268,4],[290,5,268,5],[291,4,269,4],[291,10,269,10,"getPermissionsAsync"],[291,29,269,29,"getPermissionsAsync"],[291,30,269,29],[291,32,269,32],[292,6,270,8],[292,12,270,14,"maybeStatus"],[292,23,270,25],[292,26,270,28],[292,32,270,34,"getPermissionWithQueryAsync"],[292,59,270,61],[292,60,270,62],[292,72,270,74],[292,73,270,75],[293,6,271,8],[293,14,271,16,"maybeStatus"],[293,25,271,27],[294,8,272,12],[294,13,272,17,"PermissionStatus"],[294,29,272,33],[294,30,272,33,"PermissionStatus"],[294,46,272,33],[294,47,272,34,"GRANTED"],[294,54,272,41],[295,10,273,16],[295,17,273,23],[296,12,274,20,"status"],[296,18,274,26],[296,20,274,28,"PermissionStatus"],[296,36,274,44],[296,37,274,44,"PermissionStatus"],[296,53,274,44],[296,54,274,45,"GRANTED"],[296,61,274,52],[297,12,275,20,"expires"],[297,19,275,27],[297,21,275,29],[297,28,275,36],[298,12,276,20,"canAskAgain"],[298,23,276,31],[298,25,276,33],[298,29,276,37],[299,12,277,20,"granted"],[299,19,277,27],[299,21,277,29],[300,10,278,16],[300,11,278,17],[301,8,279,12],[301,13,279,17,"PermissionStatus"],[301,29,279,33],[301,30,279,33,"PermissionStatus"],[301,46,279,33],[301,47,279,34,"DENIED"],[301,53,279,40],[302,10,280,16],[302,17,280,23],[303,12,281,20,"status"],[303,18,281,26],[303,20,281,28,"PermissionStatus"],[303,36,281,44],[303,37,281,44,"PermissionStatus"],[303,53,281,44],[303,54,281,45,"DENIED"],[303,60,281,51],[304,12,282,20,"expires"],[304,19,282,27],[304,21,282,29],[304,28,282,36],[305,12,283,20,"canAskAgain"],[305,23,283,31],[305,25,283,33],[305,29,283,37],[306,12,284,20,"granted"],[306,19,284,27],[306,21,284,29],[307,10,285,16],[307,11,285,17],[308,8,286,12],[309,10,287,16],[309,17,287,23],[309,23,287,29],[309,27,287,33],[309,28,287,34,"requestPermissionsAsync"],[309,51,287,57],[309,52,287,58],[309,53,287,59],[310,6,288,8],[311,4,289,4],[311,5,289,5],[312,4,290,4],[312,10,290,10,"requestPermissionsAsync"],[312,33,290,33,"requestPermissionsAsync"],[312,34,290,33],[312,36,290,36],[313,6,291,8],[313,10,291,12],[314,8,292,12],[314,14,292,18,"stream"],[314,20,292,24],[314,23,292,27],[314,29,292,33,"getUserMedia"],[314,41,292,45],[314,42,292,46],[315,10,292,48,"audio"],[315,15,292,53],[315,17,292,55],[316,8,292,60],[316,9,292,61],[316,10,292,62],[317,8,293,12,"stream"],[317,14,293,18],[317,15,293,19,"getTracks"],[317,24,293,28],[317,25,293,29],[317,26,293,30],[317,27,293,31,"forEach"],[317,34,293,38],[317,35,293,40,"track"],[317,40,293,45],[317,44,293,50,"track"],[317,49,293,55],[317,50,293,56,"stop"],[317,54,293,60],[317,55,293,61],[317,56,293,62],[317,57,293,63],[318,8,294,12],[318,15,294,19],[319,10,295,16,"status"],[319,16,295,22],[319,18,295,24,"PermissionStatus"],[319,34,295,40],[319,35,295,40,"PermissionStatus"],[319,51,295,40],[319,52,295,41,"GRANTED"],[319,59,295,48],[320,10,296,16,"expires"],[320,17,296,23],[320,19,296,25],[320,26,296,32],[321,10,297,16,"canAskAgain"],[321,21,297,27],[321,23,297,29],[321,27,297,33],[322,10,298,16,"granted"],[322,17,298,23],[322,19,298,25],[323,8,299,12],[323,9,299,13],[324,6,300,8],[324,7,300,9],[324,8,301,8],[324,14,301,14],[325,8,302,12],[325,15,302,19],[326,10,303,16,"status"],[326,16,303,22],[326,18,303,24,"PermissionStatus"],[326,34,303,40],[326,35,303,40,"PermissionStatus"],[326,51,303,40],[326,52,303,41,"DENIED"],[326,58,303,47],[327,10,304,16,"expires"],[327,17,304,23],[327,19,304,25],[327,26,304,32],[328,10,305,16,"canAskAgain"],[328,21,305,27],[328,23,305,29],[328,27,305,33],[329,10,306,16,"granted"],[329,17,306,23],[329,19,306,25],[330,8,307,12],[330,9,307,13],[331,6,308,8],[332,4,309,4],[333,2,310,0],[333,3,310,1],[334,0,310,2],[334,3]],"functionMap":{"names":["<global>","getPermissionWithQueryAsync","getUserMedia","<anonymous>","Promise$argument_0","getStatusFromMedia","setStatusForMedia","getAudioRecorderDurationMillis","default.getStatusForVideo","default.loadForVideo","default.unloadForVideo","default.setStatusForVideo","default.replayVideo","default.setAudioMode","default.setAudioIsEnabled","default.getStatusForSound","default.loadForSound","media.ontimeupdate","media.onerror","default.unloadForSound","default.setStatusForSound","default.replaySound","default.getAudioRecordingStatus","default.prepareAudioRecorder","mediaRecorder.addEventListener$argument_1","stream.getTracks.forEach$argument_0","default.startAudioRecording","default.pauseAudioRecording","default.stopAudioRecording","_mediaRecorder.addEventListener$argument_1","default.unloadAudioRecorder","default.getPermissionsAsync","default.requestPermissionsAsync"],"mappings":"AAA;ACG;CDkB;AEC;QCa;SDK;uBEC;KFK;CFC;AKC;CLiC;AMC;CNwC;AOK;CPM;IQE;KRE;ISC;KTE;IUC;KVE;IWC;KXE;IYC;KZE;IaE,wBb;IcC,6Bd;IeC;KfE;IgBC;6BCG;SDK;wBEC;SFK;KhBG;ImBC;KnBK;IoBC;KpBE;IqBC;KrBE;IsBG;KtBQ;IuBE;gDCQ;SDG;iDCC;SDG;gDCC;SDI;+CCC;uCCI,uBD;SDC;KvBG;I0BC;K1BW;I2BC;K3BO;I4BC;wCxBQ,8DyB,sBzB,CwB;K5BQ;I8BC;K9BE;I+BC;K/BoB;IgCC;uCPG,uBO;KhCgB"},"hasCjsExports":false},"type":"js/module"}]}