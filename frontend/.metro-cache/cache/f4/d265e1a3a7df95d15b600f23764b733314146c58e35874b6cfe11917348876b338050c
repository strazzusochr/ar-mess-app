{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./Camera.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":51,"index":108}}],"key":"YcvES77PsJEiJoknRXvymJVPk40=","exportNames":["*"],"imports":1}},{"name":"./web/WebUserMediaManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":118,"index":227}}],"key":"akJjvp4N1IdGH6uLgZRZFAIpjyQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _CameraTypes = require(_dependencyMap[1], \"./Camera.types\");\n  var _webWebUserMediaManager = require(_dependencyMap[2], \"./web/WebUserMediaManager\");\n  function getUserMedia(constraints) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia(constraints);\n    }\n    // Some browsers partially implement mediaDevices. We can't just assign an object\n    // with getUserMedia as it would overwrite existing properties.\n    // Here, we will just add the getUserMedia property if it's missing.\n    // First get ahold of the legacy getUserMedia, if present\n    const getUserMedia =\n    // TODO: this method is deprecated, migrate to https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n      const error = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n    return new Promise((resolve, reject) => {\n      // TODO(@kitten): The types indicates that this is incorrect.\n      // Please check whether this is correct!\n      // @ts-expect-error: The `successCallback` doesn't match a `resolve` function\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  }\n  function handleGetUserMediaError({\n    message\n  }) {\n    // name: NotAllowedError\n    // code: 0\n    if (message === 'Permission dismissed') {\n      return {\n        status: _CameraTypes.PermissionStatus.UNDETERMINED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false\n      };\n    } else {\n      // TODO: Bacon: [OSX] The system could deny access to chrome.\n      // TODO: Bacon: add: { status: 'unimplemented' }\n      return {\n        status: _CameraTypes.PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false\n      };\n    }\n  }\n  async function handleRequestPermissionsAsync() {\n    try {\n      const streams = await getUserMedia({\n        video: true\n      });\n      // We need to close the media stream returned by getUserMedia\n      // to avoid using the camera since we won't use these streams now\n      // https://developer.mozilla.org/fr/docs/Web/API/MediaDevices/getUserMedia\n      streams.getTracks().forEach(track => {\n        track.stop();\n        streams.removeTrack(track);\n      });\n      return {\n        status: _CameraTypes.PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true\n      };\n    } catch (error) {\n      return handleGetUserMediaError(error.message);\n    }\n  }\n  async function handlePermissionsQueryAsync(query) {\n    if (!navigator?.permissions?.query) {\n      throw new _expoModulesCore.UnavailabilityError('expo-camera', 'navigator.permissions API is not available');\n    }\n    try {\n      const {\n        state\n      } = await navigator.permissions.query({\n        name: query\n      });\n      switch (state) {\n        case 'prompt':\n          return {\n            status: _CameraTypes.PermissionStatus.UNDETERMINED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false\n          };\n        case 'granted':\n          return {\n            status: _CameraTypes.PermissionStatus.GRANTED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: true\n          };\n        case 'denied':\n          return {\n            status: _CameraTypes.PermissionStatus.DENIED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false\n          };\n      }\n    } catch (e) {\n      // Firefox doesn't support querying for the camera permission, so return undetermined status\n      if (e instanceof TypeError) {\n        return {\n          status: _CameraTypes.PermissionStatus.UNDETERMINED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false\n        };\n      }\n      throw e;\n    }\n  }\n  var _default = {\n    get Type() {\n      return {\n        back: 'back',\n        front: 'front'\n      };\n    },\n    get FlashMode() {\n      return {\n        on: 'on',\n        off: 'off',\n        auto: 'auto',\n        torch: 'torch'\n      };\n    },\n    get AutoFocus() {\n      return {\n        on: 'on',\n        off: 'off',\n        auto: 'auto',\n        singleShot: 'singleShot'\n      };\n    },\n    get WhiteBalance() {\n      return {\n        auto: 'auto',\n        continuous: 'continuous',\n        manual: 'manual'\n      };\n    },\n    get VideoQuality() {\n      return {};\n    },\n    get VideoStabilization() {\n      return {};\n    },\n    async isAvailableAsync() {\n      return (0, _webWebUserMediaManager.canGetUserMedia)();\n    },\n    async takePicture(options, camera) {\n      return await camera.takePicture(options);\n    },\n    async pausePreview(camera) {\n      await camera.pausePreview();\n    },\n    async resumePreview(camera) {\n      return await camera.resumePreview();\n    },\n    async getAvailableCameraTypesAsync() {\n      if (!(0, _webWebUserMediaManager.canGetUserMedia)() || !navigator.mediaDevices.enumerateDevices) return [];\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const types = await Promise.all([(await (0, _webWebUserMediaManager.isFrontCameraAvailableAsync)(devices)) && 'front', (await (0, _webWebUserMediaManager.isBackCameraAvailableAsync)()) && 'back']);\n      return types.filter(Boolean);\n    },\n    async getAvailablePictureSizes(ratio, camera) {\n      return await camera.getAvailablePictureSizes(ratio);\n    },\n    /*\n    async record(\n      options?: CameraRecordingOptions,\n      camera: ExponentCameraRef\n    ): Promise<{ uri: string }> {\n      // TODO: Support on web\n    },\n    async stopRecording(camera: ExponentCameraRef): Promise<void> {\n      // TODO: Support on web\n    }, */\n    async getPermissionsAsync() {\n      return handlePermissionsQueryAsync('camera');\n    },\n    async requestPermissionsAsync() {\n      return handleRequestPermissionsAsync();\n    },\n    async getCameraPermissionsAsync() {\n      return handlePermissionsQueryAsync('camera');\n    },\n    async requestCameraPermissionsAsync() {\n      return handleRequestPermissionsAsync();\n    },\n    async getMicrophonePermissionsAsync() {\n      return handlePermissionsQueryAsync('microphone');\n    },\n    async requestMicrophonePermissionsAsync() {\n      try {\n        await getUserMedia({\n          audio: true\n        });\n        return {\n          status: _CameraTypes.PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true\n        };\n      } catch (error) {\n        return handleGetUserMediaError(error.message);\n      }\n    }\n  };\n});","lineCount":228,"map":[[7,2,118,0,"Object"],[7,8,118,0],[7,9,118,0,"defineProperty"],[7,23,118,0],[7,24,118,0,"exports"],[7,31,118,0],[8,4,118,0,"enumerable"],[8,14,118,0],[9,4,118,0,"get"],[9,7,118,0],[9,18,118,0,"get"],[9,19,118,0],[10,6,118,0],[10,13,118,0,"_default"],[10,21,118,0],[11,4,118,0],[12,2,118,0],[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_CameraTypes"],[14,18,2,0],[14,21,2,0,"require"],[14,28,2,0],[14,29,2,0,"_dependencyMap"],[14,43,2,0],[15,2,3,0],[15,6,3,0,"_webWebUserMediaManager"],[15,29,3,0],[15,32,3,0,"require"],[15,39,3,0],[15,40,3,0,"_dependencyMap"],[15,54,3,0],[16,2,4,0],[16,11,4,9,"getUserMedia"],[16,23,4,21,"getUserMedia"],[16,24,4,22,"constraints"],[16,35,4,33],[16,37,4,35],[17,4,5,4],[17,8,5,8,"navigator"],[17,17,5,17],[17,18,5,18,"mediaDevices"],[17,30,5,30],[17,34,5,34,"navigator"],[17,43,5,43],[17,44,5,44,"mediaDevices"],[17,56,5,56],[17,57,5,57,"getUserMedia"],[17,69,5,69],[17,71,5,71],[18,6,6,8],[18,13,6,15,"navigator"],[18,22,6,24],[18,23,6,25,"mediaDevices"],[18,35,6,37],[18,36,6,38,"getUserMedia"],[18,48,6,50],[18,49,6,51,"constraints"],[18,60,6,62],[18,61,6,63],[19,4,7,4],[20,4,8,4],[21,4,9,4],[22,4,10,4],[23,4,11,4],[24,4,12,4],[24,10,12,10,"getUserMedia"],[24,22,12,22],[25,4,13,4],[26,4,14,4,"navigator"],[26,13,14,13],[26,14,14,14,"getUserMedia"],[26,26,14,26],[26,30,15,8,"navigator"],[26,39,15,17],[26,40,15,18,"webkitGetUserMedia"],[26,58,15,36],[26,62,16,8,"navigator"],[26,71,16,17],[26,72,16,18,"mozGetUserMedia"],[26,87,16,33],[26,91,17,8],[26,103,17,20],[27,6,18,12],[27,12,18,18,"error"],[27,17,18,23],[27,20,18,26],[27,24,18,30,"Error"],[27,29,18,35],[27,30,18,36],[27,56,18,62],[27,57,18,63],[28,6,19,12,"error"],[28,11,19,17],[28,12,19,18,"code"],[28,16,19,22],[28,19,19,25],[28,20,19,26],[29,6,20,12,"error"],[29,11,20,17],[29,12,20,18,"name"],[29,16,20,22],[29,19,20,25],[29,36,20,42],[30,6,21,12],[30,12,21,18,"error"],[30,17,21,23],[31,4,22,8],[31,5,22,9],[32,4,23,4],[32,11,23,11],[32,15,23,15,"Promise"],[32,22,23,22],[32,23,23,23],[32,24,23,24,"resolve"],[32,31,23,31],[32,33,23,33,"reject"],[32,39,23,39],[32,44,23,44],[33,6,24,8],[34,6,25,8],[35,6,26,8],[36,6,27,8,"getUserMedia"],[36,18,27,20],[36,19,27,21,"call"],[36,23,27,25],[36,24,27,26,"navigator"],[36,33,27,35],[36,35,27,37,"constraints"],[36,46,27,48],[36,48,27,50,"resolve"],[36,55,27,57],[36,57,27,59,"reject"],[36,63,27,65],[36,64,27,66],[37,4,28,4],[37,5,28,5],[37,6,28,6],[38,2,29,0],[39,2,30,0],[39,11,30,9,"handleGetUserMediaError"],[39,34,30,32,"handleGetUserMediaError"],[39,35,30,33],[40,4,30,35,"message"],[41,2,30,43],[41,3,30,44],[41,5,30,46],[42,4,31,4],[43,4,32,4],[44,4,33,4],[44,8,33,8,"message"],[44,15,33,15],[44,20,33,20],[44,42,33,42],[44,44,33,44],[45,6,34,8],[45,13,34,15],[46,8,35,12,"status"],[46,14,35,18],[46,16,35,20,"PermissionStatus"],[46,28,35,36],[46,29,35,36,"PermissionStatus"],[46,45,35,36],[46,46,35,37,"UNDETERMINED"],[46,58,35,49],[47,8,36,12,"expires"],[47,15,36,19],[47,17,36,21],[47,24,36,28],[48,8,37,12,"canAskAgain"],[48,19,37,23],[48,21,37,25],[48,25,37,29],[49,8,38,12,"granted"],[49,15,38,19],[49,17,38,21],[50,6,39,8],[50,7,39,9],[51,4,40,4],[51,5,40,5],[51,11,41,9],[52,6,42,8],[53,6,43,8],[54,6,44,8],[54,13,44,15],[55,8,45,12,"status"],[55,14,45,18],[55,16,45,20,"PermissionStatus"],[55,28,45,36],[55,29,45,36,"PermissionStatus"],[55,45,45,36],[55,46,45,37,"DENIED"],[55,52,45,43],[56,8,46,12,"expires"],[56,15,46,19],[56,17,46,21],[56,24,46,28],[57,8,47,12,"canAskAgain"],[57,19,47,23],[57,21,47,25],[57,25,47,29],[58,8,48,12,"granted"],[58,15,48,19],[58,17,48,21],[59,6,49,8],[59,7,49,9],[60,4,50,4],[61,2,51,0],[62,2,52,0],[62,17,52,15,"handleRequestPermissionsAsync"],[62,46,52,44,"handleRequestPermissionsAsync"],[62,47,52,44],[62,49,52,47],[63,4,53,4],[63,8,53,8],[64,6,54,8],[64,12,54,14,"streams"],[64,19,54,21],[64,22,54,24],[64,28,54,30,"getUserMedia"],[64,40,54,42],[64,41,54,43],[65,8,55,12,"video"],[65,13,55,17],[65,15,55,19],[66,6,56,8],[66,7,56,9],[66,8,56,10],[67,6,57,8],[68,6,58,8],[69,6,59,8],[70,6,60,8,"streams"],[70,13,60,15],[70,14,60,16,"getTracks"],[70,23,60,25],[70,24,60,26],[70,25,60,27],[70,26,60,28,"forEach"],[70,33,60,35],[70,34,60,37,"track"],[70,39,60,42],[70,43,60,47],[71,8,61,12,"track"],[71,13,61,17],[71,14,61,18,"stop"],[71,18,61,22],[71,19,61,23],[71,20,61,24],[72,8,62,12,"streams"],[72,15,62,19],[72,16,62,20,"removeTrack"],[72,27,62,31],[72,28,62,32,"track"],[72,33,62,37],[72,34,62,38],[73,6,63,8],[73,7,63,9],[73,8,63,10],[74,6,64,8],[74,13,64,15],[75,8,65,12,"status"],[75,14,65,18],[75,16,65,20,"PermissionStatus"],[75,28,65,36],[75,29,65,36,"PermissionStatus"],[75,45,65,36],[75,46,65,37,"GRANTED"],[75,53,65,44],[76,8,66,12,"expires"],[76,15,66,19],[76,17,66,21],[76,24,66,28],[77,8,67,12,"canAskAgain"],[77,19,67,23],[77,21,67,25],[77,25,67,29],[78,8,68,12,"granted"],[78,15,68,19],[78,17,68,21],[79,6,69,8],[79,7,69,9],[80,4,70,4],[80,5,70,5],[80,6,71,4],[80,13,71,11,"error"],[80,18,71,16],[80,20,71,18],[81,6,72,8],[81,13,72,15,"handleGetUserMediaError"],[81,36,72,38],[81,37,72,39,"error"],[81,42,72,44],[81,43,72,45,"message"],[81,50,72,52],[81,51,72,53],[82,4,73,4],[83,2,74,0],[84,2,75,0],[84,17,75,15,"handlePermissionsQueryAsync"],[84,44,75,42,"handlePermissionsQueryAsync"],[84,45,75,43,"query"],[84,50,75,48],[84,52,75,50],[85,4,76,4],[85,8,76,8],[85,9,76,9,"navigator"],[85,18,76,18],[85,20,76,20,"permissions"],[85,31,76,31],[85,33,76,33,"query"],[85,38,76,38],[85,40,76,40],[86,6,77,8],[86,12,77,14],[86,16,77,18,"UnavailabilityError"],[86,32,77,37],[86,33,77,37,"UnavailabilityError"],[86,52,77,37],[86,53,77,38],[86,66,77,51],[86,68,77,53],[86,112,77,97],[86,113,77,98],[87,4,78,4],[88,4,79,4],[88,8,79,8],[89,6,80,8],[89,12,80,14],[90,8,80,16,"state"],[91,6,80,22],[91,7,80,23],[91,10,80,26],[91,16,80,32,"navigator"],[91,25,80,41],[91,26,80,42,"permissions"],[91,37,80,53],[91,38,80,54,"query"],[91,43,80,59],[91,44,80,60],[92,8,80,62,"name"],[92,12,80,66],[92,14,80,68,"query"],[93,6,80,74],[93,7,80,75],[93,8,80,76],[94,6,81,8],[94,14,81,16,"state"],[94,19,81,21],[95,8,82,12],[95,13,82,17],[95,21,82,25],[96,10,83,16],[96,17,83,23],[97,12,84,20,"status"],[97,18,84,26],[97,20,84,28,"PermissionStatus"],[97,32,84,44],[97,33,84,44,"PermissionStatus"],[97,49,84,44],[97,50,84,45,"UNDETERMINED"],[97,62,84,57],[98,12,85,20,"expires"],[98,19,85,27],[98,21,85,29],[98,28,85,36],[99,12,86,20,"canAskAgain"],[99,23,86,31],[99,25,86,33],[99,29,86,37],[100,12,87,20,"granted"],[100,19,87,27],[100,21,87,29],[101,10,88,16],[101,11,88,17],[102,8,89,12],[102,13,89,17],[102,22,89,26],[103,10,90,16],[103,17,90,23],[104,12,91,20,"status"],[104,18,91,26],[104,20,91,28,"PermissionStatus"],[104,32,91,44],[104,33,91,44,"PermissionStatus"],[104,49,91,44],[104,50,91,45,"GRANTED"],[104,57,91,52],[105,12,92,20,"expires"],[105,19,92,27],[105,21,92,29],[105,28,92,36],[106,12,93,20,"canAskAgain"],[106,23,93,31],[106,25,93,33],[106,29,93,37],[107,12,94,20,"granted"],[107,19,94,27],[107,21,94,29],[108,10,95,16],[108,11,95,17],[109,8,96,12],[109,13,96,17],[109,21,96,25],[110,10,97,16],[110,17,97,23],[111,12,98,20,"status"],[111,18,98,26],[111,20,98,28,"PermissionStatus"],[111,32,98,44],[111,33,98,44,"PermissionStatus"],[111,49,98,44],[111,50,98,45,"DENIED"],[111,56,98,51],[112,12,99,20,"expires"],[112,19,99,27],[112,21,99,29],[112,28,99,36],[113,12,100,20,"canAskAgain"],[113,23,100,31],[113,25,100,33],[113,29,100,37],[114,12,101,20,"granted"],[114,19,101,27],[114,21,101,29],[115,10,102,16],[115,11,102,17],[116,6,103,8],[117,4,104,4],[117,5,104,5],[117,6,105,4],[117,13,105,11,"e"],[117,14,105,12],[117,16,105,14],[118,6,106,8],[119,6,107,8],[119,10,107,12,"e"],[119,11,107,13],[119,23,107,25,"TypeError"],[119,32,107,34],[119,34,107,36],[120,8,108,12],[120,15,108,19],[121,10,109,16,"status"],[121,16,109,22],[121,18,109,24,"PermissionStatus"],[121,30,109,40],[121,31,109,40,"PermissionStatus"],[121,47,109,40],[121,48,109,41,"UNDETERMINED"],[121,60,109,53],[122,10,110,16,"expires"],[122,17,110,23],[122,19,110,25],[122,26,110,32],[123,10,111,16,"canAskAgain"],[123,21,111,27],[123,23,111,29],[123,27,111,33],[124,10,112,16,"granted"],[124,17,112,23],[124,19,112,25],[125,8,113,12],[125,9,113,13],[126,6,114,8],[127,6,115,8],[127,12,115,14,"e"],[127,13,115,15],[128,4,116,4],[129,2,117,0],[130,2,118,0],[130,6,118,0,"_default"],[130,14,118,0],[130,17,118,15],[131,4,119,4],[131,8,119,8,"Type"],[131,12,119,12,"Type"],[131,13,119,12],[131,15,119,15],[132,6,120,8],[132,13,120,15],[133,8,121,12,"back"],[133,12,121,16],[133,14,121,18],[133,20,121,24],[134,8,122,12,"front"],[134,13,122,17],[134,15,122,19],[135,6,123,8],[135,7,123,9],[136,4,124,4],[136,5,124,5],[137,4,125,4],[137,8,125,8,"FlashMode"],[137,17,125,17,"FlashMode"],[137,18,125,17],[137,20,125,20],[138,6,126,8],[138,13,126,15],[139,8,127,12,"on"],[139,10,127,14],[139,12,127,16],[139,16,127,20],[140,8,128,12,"off"],[140,11,128,15],[140,13,128,17],[140,18,128,22],[141,8,129,12,"auto"],[141,12,129,16],[141,14,129,18],[141,20,129,24],[142,8,130,12,"torch"],[142,13,130,17],[142,15,130,19],[143,6,131,8],[143,7,131,9],[144,4,132,4],[144,5,132,5],[145,4,133,4],[145,8,133,8,"AutoFocus"],[145,17,133,17,"AutoFocus"],[145,18,133,17],[145,20,133,20],[146,6,134,8],[146,13,134,15],[147,8,135,12,"on"],[147,10,135,14],[147,12,135,16],[147,16,135,20],[148,8,136,12,"off"],[148,11,136,15],[148,13,136,17],[148,18,136,22],[149,8,137,12,"auto"],[149,12,137,16],[149,14,137,18],[149,20,137,24],[150,8,138,12,"singleShot"],[150,18,138,22],[150,20,138,24],[151,6,139,8],[151,7,139,9],[152,4,140,4],[152,5,140,5],[153,4,141,4],[153,8,141,8,"WhiteBalance"],[153,20,141,20,"WhiteBalance"],[153,21,141,20],[153,23,141,23],[154,6,142,8],[154,13,142,15],[155,8,143,12,"auto"],[155,12,143,16],[155,14,143,18],[155,20,143,24],[156,8,144,12,"continuous"],[156,18,144,22],[156,20,144,24],[156,32,144,36],[157,8,145,12,"manual"],[157,14,145,18],[157,16,145,20],[158,6,146,8],[158,7,146,9],[159,4,147,4],[159,5,147,5],[160,4,148,4],[160,8,148,8,"VideoQuality"],[160,20,148,20,"VideoQuality"],[160,21,148,20],[160,23,148,23],[161,6,149,8],[161,13,149,15],[161,14,149,16],[161,15,149,17],[162,4,150,4],[162,5,150,5],[163,4,151,4],[163,8,151,8,"VideoStabilization"],[163,26,151,26,"VideoStabilization"],[163,27,151,26],[163,29,151,29],[164,6,152,8],[164,13,152,15],[164,14,152,16],[164,15,152,17],[165,4,153,4],[165,5,153,5],[166,4,154,4],[166,10,154,10,"isAvailableAsync"],[166,26,154,26,"isAvailableAsync"],[166,27,154,26],[166,29,154,29],[167,6,155,8],[167,13,155,15],[167,17,155,15,"canGetUserMedia"],[167,40,155,30],[167,41,155,30,"canGetUserMedia"],[167,56,155,30],[167,58,155,31],[167,59,155,32],[168,4,156,4],[168,5,156,5],[169,4,157,4],[169,10,157,10,"takePicture"],[169,21,157,21,"takePicture"],[169,22,157,22,"options"],[169,29,157,29],[169,31,157,31,"camera"],[169,37,157,37],[169,39,157,39],[170,6,158,8],[170,13,158,15],[170,19,158,21,"camera"],[170,25,158,27],[170,26,158,28,"takePicture"],[170,37,158,39],[170,38,158,40,"options"],[170,45,158,47],[170,46,158,48],[171,4,159,4],[171,5,159,5],[172,4,160,4],[172,10,160,10,"pausePreview"],[172,22,160,22,"pausePreview"],[172,23,160,23,"camera"],[172,29,160,29],[172,31,160,31],[173,6,161,8],[173,12,161,14,"camera"],[173,18,161,20],[173,19,161,21,"pausePreview"],[173,31,161,33],[173,32,161,34],[173,33,161,35],[174,4,162,4],[174,5,162,5],[175,4,163,4],[175,10,163,10,"resumePreview"],[175,23,163,23,"resumePreview"],[175,24,163,24,"camera"],[175,30,163,30],[175,32,163,32],[176,6,164,8],[176,13,164,15],[176,19,164,21,"camera"],[176,25,164,27],[176,26,164,28,"resumePreview"],[176,39,164,41],[176,40,164,42],[176,41,164,43],[177,4,165,4],[177,5,165,5],[178,4,166,4],[178,10,166,10,"getAvailableCameraTypesAsync"],[178,38,166,38,"getAvailableCameraTypesAsync"],[178,39,166,38],[178,41,166,41],[179,6,167,8],[179,10,167,12],[179,11,167,13],[179,15,167,13,"canGetUserMedia"],[179,38,167,28],[179,39,167,28,"canGetUserMedia"],[179,54,167,28],[179,56,167,29],[179,57,167,30],[179,61,167,34],[179,62,167,35,"navigator"],[179,71,167,44],[179,72,167,45,"mediaDevices"],[179,84,167,57],[179,85,167,58,"enumerateDevices"],[179,101,167,74],[179,103,168,12],[179,110,168,19],[179,112,168,21],[180,6,169,8],[180,12,169,14,"devices"],[180,19,169,21],[180,22,169,24],[180,28,169,30,"navigator"],[180,37,169,39],[180,38,169,40,"mediaDevices"],[180,50,169,52],[180,51,169,53,"enumerateDevices"],[180,67,169,69],[180,68,169,70],[180,69,169,71],[181,6,170,8],[181,12,170,14,"types"],[181,17,170,19],[181,20,170,22],[181,26,170,28,"Promise"],[181,33,170,35],[181,34,170,36,"all"],[181,37,170,39],[181,38,170,40],[181,39,171,12],[181,40,171,13],[181,46,171,19],[181,50,171,19,"isFrontCameraAvailableAsync"],[181,73,171,46],[181,74,171,46,"isFrontCameraAvailableAsync"],[181,101,171,46],[181,103,171,47,"devices"],[181,110,171,54],[181,111,171,55],[181,116,171,60],[181,123,171,67],[181,125,172,12],[181,126,172,13],[181,132,172,19],[181,136,172,19,"isBackCameraAvailableAsync"],[181,159,172,45],[181,160,172,45,"isBackCameraAvailableAsync"],[181,186,172,45],[181,188,172,46],[181,189,172,47],[181,194,172,52],[181,200,172,58],[181,201,173,9],[181,202,173,10],[182,6,174,8],[182,13,174,15,"types"],[182,18,174,20],[182,19,174,21,"filter"],[182,25,174,27],[182,26,174,28,"Boolean"],[182,33,174,35],[182,34,174,36],[183,4,175,4],[183,5,175,5],[184,4,176,4],[184,10,176,10,"getAvailablePictureSizes"],[184,34,176,34,"getAvailablePictureSizes"],[184,35,176,35,"ratio"],[184,40,176,40],[184,42,176,42,"camera"],[184,48,176,48],[184,50,176,50],[185,6,177,8],[185,13,177,15],[185,19,177,21,"camera"],[185,25,177,27],[185,26,177,28,"getAvailablePictureSizes"],[185,50,177,52],[185,51,177,53,"ratio"],[185,56,177,58],[185,57,177,59],[186,4,178,4],[186,5,178,5],[187,4,179,4],[188,0,180,0],[189,0,181,0],[190,0,182,0],[191,0,183,0],[192,0,184,0],[193,0,185,0],[194,0,186,0],[195,0,187,0],[196,0,188,0],[197,4,189,4],[197,10,189,10,"getPermissionsAsync"],[197,29,189,29,"getPermissionsAsync"],[197,30,189,29],[197,32,189,32],[198,6,190,8],[198,13,190,15,"handlePermissionsQueryAsync"],[198,40,190,42],[198,41,190,43],[198,49,190,51],[198,50,190,52],[199,4,191,4],[199,5,191,5],[200,4,192,4],[200,10,192,10,"requestPermissionsAsync"],[200,33,192,33,"requestPermissionsAsync"],[200,34,192,33],[200,36,192,36],[201,6,193,8],[201,13,193,15,"handleRequestPermissionsAsync"],[201,42,193,44],[201,43,193,45],[201,44,193,46],[202,4,194,4],[202,5,194,5],[203,4,195,4],[203,10,195,10,"getCameraPermissionsAsync"],[203,35,195,35,"getCameraPermissionsAsync"],[203,36,195,35],[203,38,195,38],[204,6,196,8],[204,13,196,15,"handlePermissionsQueryAsync"],[204,40,196,42],[204,41,196,43],[204,49,196,51],[204,50,196,52],[205,4,197,4],[205,5,197,5],[206,4,198,4],[206,10,198,10,"requestCameraPermissionsAsync"],[206,39,198,39,"requestCameraPermissionsAsync"],[206,40,198,39],[206,42,198,42],[207,6,199,8],[207,13,199,15,"handleRequestPermissionsAsync"],[207,42,199,44],[207,43,199,45],[207,44,199,46],[208,4,200,4],[208,5,200,5],[209,4,201,4],[209,10,201,10,"getMicrophonePermissionsAsync"],[209,39,201,39,"getMicrophonePermissionsAsync"],[209,40,201,39],[209,42,201,42],[210,6,202,8],[210,13,202,15,"handlePermissionsQueryAsync"],[210,40,202,42],[210,41,202,43],[210,53,202,55],[210,54,202,56],[211,4,203,4],[211,5,203,5],[212,4,204,4],[212,10,204,10,"requestMicrophonePermissionsAsync"],[212,43,204,43,"requestMicrophonePermissionsAsync"],[212,44,204,43],[212,46,204,46],[213,6,205,8],[213,10,205,12],[214,8,206,12],[214,14,206,18,"getUserMedia"],[214,26,206,30],[214,27,206,31],[215,10,207,16,"audio"],[215,15,207,21],[215,17,207,23],[216,8,208,12],[216,9,208,13],[216,10,208,14],[217,8,209,12],[217,15,209,19],[218,10,210,16,"status"],[218,16,210,22],[218,18,210,24,"PermissionStatus"],[218,30,210,40],[218,31,210,40,"PermissionStatus"],[218,47,210,40],[218,48,210,41,"GRANTED"],[218,55,210,48],[219,10,211,16,"expires"],[219,17,211,23],[219,19,211,25],[219,26,211,32],[220,10,212,16,"canAskAgain"],[220,21,212,27],[220,23,212,29],[220,27,212,33],[221,10,213,16,"granted"],[221,17,213,23],[221,19,213,25],[222,8,214,12],[222,9,214,13],[223,6,215,8],[223,7,215,9],[223,8,216,8],[223,15,216,15,"error"],[223,20,216,20],[223,22,216,22],[224,8,217,12],[224,15,217,19,"handleGetUserMediaError"],[224,38,217,42],[224,39,217,43,"error"],[224,44,217,48],[224,45,217,49,"message"],[224,52,217,56],[224,53,217,57],[225,6,218,8],[226,4,219,4],[227,2,220,0],[227,3,220,1],[228,0,220,2],[228,3]],"functionMap":{"names":["<global>","getUserMedia","<anonymous>","Promise$argument_0","handleGetUserMediaError","handleRequestPermissionsAsync","streams.getTracks.forEach$argument_0","handlePermissionsQueryAsync","default.get__Type","default.get__FlashMode","default.get__AutoFocus","default.get__WhiteBalance","default.get__VideoQuality","default.get__VideoStabilization","default.isAvailableAsync","default.takePicture","default.pausePreview","default.resumePreview","default.getAvailableCameraTypesAsync","default.getAvailablePictureSizes","default.getPermissionsAsync","default.requestPermissionsAsync","default.getCameraPermissionsAsync","default.requestCameraPermissionsAsync","default.getMicrophonePermissionsAsync","default.requestMicrophonePermissionsAsync"],"mappings":"AAA;ACG;QCa;SDK;uBEC;KFK;CDC;AIC;CJqB;AKC;oCCQ;SDG;CLW;AOC;CP0C;IQE;KRK;ISC;KTO;IUC;KVO;IWC;KXM;IYC;KZE;IaC;KbE;IcC;KdE;IeC;KfE;IgBC;KhBE;IiBC;KjBE;IkBC;KlBS;ImBC;KnBE;IoBW;KpBE;IqBC;KrBE;IsBC;KtBE;IuBC;KvBE;IwBC;KxBE;IyBC;KzBe"},"hasCjsExports":false},"type":"js/module"}]}