{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":97,"index":97}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":98},"end":{"line":2,"column":40,"index":138}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./ExpoMediaLibrary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":139},"end":{"line":3,"column":46,"index":185}}],"key":"yXHDHFsvtz5fKc5CK5Xe3zolTC8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  Object.defineProperty(exports, \"MediaType\", {\n    enumerable: true,\n    get: function () {\n      return MediaType;\n    }\n  });\n  Object.defineProperty(exports, \"SortBy\", {\n    enumerable: true,\n    get: function () {\n      return SortBy;\n    }\n  });\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.getPermissionsAsync = getPermissionsAsync;\n  Object.defineProperty(exports, \"usePermissions\", {\n    enumerable: true,\n    get: function () {\n      return usePermissions;\n    }\n  });\n  exports.presentPermissionsPickerAsync = presentPermissionsPickerAsync;\n  exports.createAssetAsync = createAssetAsync;\n  exports.saveToLibraryAsync = saveToLibraryAsync;\n  exports.addAssetsToAlbumAsync = addAssetsToAlbumAsync;\n  exports.removeAssetsFromAlbumAsync = removeAssetsFromAlbumAsync;\n  exports.deleteAssetsAsync = deleteAssetsAsync;\n  exports.getAssetInfoAsync = getAssetInfoAsync;\n  exports.getAlbumsAsync = getAlbumsAsync;\n  exports.getAlbumAsync = getAlbumAsync;\n  exports.createAlbumAsync = createAlbumAsync;\n  exports.deleteAlbumsAsync = deleteAlbumsAsync;\n  exports.getAssetsAsync = getAssetsAsync;\n  exports.addListener = addListener;\n  exports.removeSubscription = removeSubscription;\n  exports.removeAllListeners = removeAllListeners;\n  exports.getMomentsAsync = getMomentsAsync;\n  exports.migrateAlbumIfNeededAsync = migrateAlbumIfNeededAsync;\n  exports.albumNeedsMigrationAsync = albumNeedsMigrationAsync;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _ExpoMediaLibrary = require(_dependencyMap[3], \"./ExpoMediaLibrary\");\n  var MediaLibrary = _interopDefault(_ExpoMediaLibrary);\n  var isExpoGo = typeof expo !== 'undefined' && globalThis.expo?.modules?.ExpoGo;\n  var loggedExpoGoWarning = false;\n  if (isExpoGo && !loggedExpoGoWarning) {\n    console.warn('Due to changes in Androids permission requirements, Expo Go can no longer provide full access to the media library. To test the full functionality of this module, you can create a development build. https://docs.expo.dev/develop/development-builds/create-a-build');\n    loggedExpoGoWarning = true;\n  }\n  function arrayize(item) {\n    if (Array.isArray(item)) {\n      return item;\n    }\n    return item ? [item] : [];\n  }\n  function getId(ref) {\n    if (typeof ref === 'string') {\n      return ref;\n    }\n    return ref ? ref.id : undefined;\n  }\n  function checkAssetIds(assetIds) {\n    if (assetIds.some(id => !id || typeof id !== 'string')) {\n      throw new Error('Asset ID must be a string!');\n    }\n  }\n  function checkAlbumIds(albumIds) {\n    if (albumIds.some(id => !id || typeof id !== 'string')) {\n      throw new Error('Album ID must be a string!');\n    }\n  }\n  function checkMediaType(mediaType) {\n    if (Object.values(MediaType).indexOf(mediaType) === -1) {\n      throw new Error(`Invalid mediaType: ${mediaType}`);\n    }\n  }\n  function checkSortBy(sortBy) {\n    if (Array.isArray(sortBy)) {\n      checkSortByKey(sortBy[0]);\n      if (typeof sortBy[1] !== 'boolean') {\n        throw new Error('Invalid sortBy array argument. Second item must be a boolean!');\n      }\n    } else {\n      checkSortByKey(sortBy);\n    }\n  }\n  function checkSortByKey(sortBy) {\n    if (Object.values(SortBy).indexOf(sortBy) === -1) {\n      throw new Error(`Invalid sortBy key: ${sortBy}`);\n    }\n  }\n  function sortByOptionToString(sortBy) {\n    checkSortBy(sortBy);\n    if (Array.isArray(sortBy)) {\n      return `${sortBy[0]} ${sortBy[1] ? 'ASC' : 'DESC'}`;\n    }\n    return `${sortBy} DESC`;\n  }\n  function dateToNumber(value) {\n    return value instanceof Date ? value.getTime() : value;\n  }\n  // @needsAudit\n  /**\n   * Possible media types.\n   */\n  var MediaType = MediaLibrary.default.MediaType;\n  // @needsAudit\n  /**\n   * Supported keys that can be used to sort `getAssetsAsync` results.\n   */\n  var SortBy = MediaLibrary.default.SortBy;\n  // @needsAudit\n  /**\n   * Returns whether the Media Library API is enabled on the current device.\n   * @return A promise which fulfils with a `boolean`, indicating whether the Media Library API is\n   * available on the current device.\n   */\n  function isAvailableAsync() {\n    return _isAvailableAsync.apply(this, arguments);\n  } // @needsAudit @docsMissing\n  /**\n   * Asks the user to grant permissions for accessing media in user's media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has an\n   * effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   *\n   * > When using granular permissions with a custom config plugin configuration, make sure that all the requested permissions are included in the plugin.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  function _isAvailableAsync() {\n    _isAvailableAsync = (0, _asyncToGenerator.default)(function* () {\n      return !!MediaLibrary.default && 'getAssetsAsync' in MediaLibrary.default;\n    });\n    return _isAvailableAsync.apply(this, arguments);\n  }\n  function requestPermissionsAsync() {\n    return _requestPermissionsAsync.apply(this, arguments);\n  } // @needsAudit @docsMissing\n  /**\n   * Checks user's permissions for accessing media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has\n   * an effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  function _requestPermissionsAsync() {\n    _requestPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n      var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var granularPermissions = arguments.length > 1 ? arguments[1] : undefined;\n      if (!MediaLibrary.default.requestPermissionsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'requestPermissionsAsync');\n      }\n      if (_reactNative.Platform.OS === 'android') {\n        return yield MediaLibrary.default.requestPermissionsAsync(writeOnly, granularPermissions);\n      }\n      return yield MediaLibrary.default.requestPermissionsAsync(writeOnly);\n    });\n    return _requestPermissionsAsync.apply(this, arguments);\n  }\n  function getPermissionsAsync() {\n    return _getPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions to access the media library.\n   * This uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [permissionResponse, requestPermission] = MediaLibrary.usePermissions();\n   * ```\n   */\n  function _getPermissionsAsync() {\n    _getPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n      var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var granularPermissions = arguments.length > 1 ? arguments[1] : undefined;\n      if (!MediaLibrary.default.getPermissionsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getPermissionsAsync');\n      }\n      if (_reactNative.Platform.OS === 'android') {\n        return yield MediaLibrary.default.getPermissionsAsync(writeOnly, granularPermissions);\n      }\n      return yield MediaLibrary.default.getPermissionsAsync(writeOnly);\n    });\n    return _getPermissionsAsync.apply(this, arguments);\n  }\n  var usePermissions = (0, _expoModulesCore.createPermissionHook)({\n    // TODO(cedric): permission requesters should have an options param or a different requester\n    getMethod: options => getPermissionsAsync(options?.writeOnly, options?.granularPermissions),\n    requestMethod: options => requestPermissionsAsync(options?.writeOnly, options?.granularPermissions)\n  });\n  // @needsAudit\n  /**\n   * Allows the user to update the assets that your app has access to.\n   * The system modal is only displayed if the user originally allowed only `limited` access to their\n   * media library, otherwise this method is a no-op.\n   * @param mediaTypes Limits the type(s) of media that the user will be granting access to. By default, a list that shows both photos and videos is presented.\n   *\n   * @return A promise that either rejects if the method is unavailable, or resolves to `void`.\n   * > __Note:__ This method doesn't inform you if the user changes which assets your app has access to.\n   * That information is only exposed by iOS, and to obtain it, you need to subscribe for updates to the user's media library using [`addListener()`](#medialibraryaddlistenerlistener).\n   * If `hasIncrementalChanges` is `false`, the user changed their permissions.\n   *\n   * @platform android 14+\n   * @platform ios\n   */\n  function presentPermissionsPickerAsync() {\n    return _presentPermissionsPickerAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\n   * This method requires `CAMERA_ROLL` permission.\n   *\n   * @example\n   * ```js\n   * const { uri } = await Camera.takePictureAsync();\n   * const asset = await MediaLibrary.createAssetAsync(uri);\n   * ```\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`\n   *\n   * @param album An [Album](#album) or its ID. If provided, the asset will be added to this album upon creation, otherwise it will be added to the default album for the media type.\n   * The album has exist.\n   * @return A promise which fulfils with an object representing an [`Asset`](#asset).\n   */\n  function _presentPermissionsPickerAsync() {\n    _presentPermissionsPickerAsync = (0, _asyncToGenerator.default)(function* () {\n      var mediaTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['photo', 'video'];\n      if (_reactNative.Platform.OS === 'android' && isExpoGo) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync is unavailable in Expo Go');\n      }\n      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= 34) {\n        yield MediaLibrary.default.requestPermissionsAsync(false, mediaTypes);\n        return;\n      }\n      if (!MediaLibrary.default.presentPermissionsPickerAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync');\n      }\n      return yield MediaLibrary.default.presentPermissionsPickerAsync();\n    });\n    return _presentPermissionsPickerAsync.apply(this, arguments);\n  }\n  function createAssetAsync(_x, _x2) {\n    return _createAssetAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Saves the file at given `localUri` to the user's media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\n   * This method doesn't return created asset.\n   * On __iOS 11+__, it's possible to use this method without asking for `CAMERA_ROLL` permission,\n   * however then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key.\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`.\n   */\n  function _createAssetAsync() {\n    _createAssetAsync = (0, _asyncToGenerator.default)(function* (localUri, album) {\n      if (!MediaLibrary.default.createAssetAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAssetAsync');\n      }\n      var albumId = getId(album);\n      if (!localUri || typeof localUri !== 'string') {\n        throw new Error('Invalid argument \"localUri\". It must be a string!');\n      }\n      var asset = yield MediaLibrary.default.createAssetAsync(localUri, albumId);\n      if (Array.isArray(asset)) {\n        // Android returns an array with asset, we need to pick the first item\n        return asset[0];\n      }\n      return asset;\n    });\n    return _createAssetAsync.apply(this, arguments);\n  }\n  function saveToLibraryAsync(_x3) {\n    return _saveToLibraryAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Adds array of assets to the album.\n   *\n   * On Android, by default it copies assets from the current album to provided one, however it's also\n   * possible to move them by passing `false` as `copyAssets` argument. In case they're copied you\n   * should keep in mind that `getAssetsAsync` will return duplicated assets.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @param copy __Android only.__ Whether to copy assets to the new album instead of move them.\n   * Defaults to `true`.\n   * @return Returns promise which fulfils with `true` if the assets were successfully added to\n   * the album.\n   */\n  function _saveToLibraryAsync() {\n    _saveToLibraryAsync = (0, _asyncToGenerator.default)(function* (localUri) {\n      if (!MediaLibrary.default.saveToLibraryAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'saveToLibraryAsync');\n      }\n      return yield MediaLibrary.default.saveToLibraryAsync(localUri);\n    });\n    return _saveToLibraryAsync.apply(this, arguments);\n  }\n  function addAssetsToAlbumAsync(_x4, _x5) {\n    return _addAssetsToAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Removes given assets from album.\n   *\n   * On Android, album will be automatically deleted if there are no more assets inside.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns promise which fulfils with `true` if the assets were successfully removed from\n   * the album.\n   */\n  function _addAssetsToAlbumAsync() {\n    _addAssetsToAlbumAsync = (0, _asyncToGenerator.default)(function* (assets, album) {\n      var copy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (!MediaLibrary.default.addAssetsToAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'addAssetsToAlbumAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      var albumId = getId(album);\n      checkAssetIds(assetIds);\n      if (!albumId || typeof albumId !== 'string') {\n        throw new Error('Invalid album ID. It must be a string!');\n      }\n      if (_reactNative.Platform.OS === 'ios') {\n        return yield MediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId);\n      }\n      return yield MediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId, !!copy);\n    });\n    return _addAssetsToAlbumAsync.apply(this, arguments);\n  }\n  function removeAssetsFromAlbumAsync(_x6, _x7) {\n    return _removeAssetsFromAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\n   * on Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\n   * additional dialog on iOS that requires user to confirm this action.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @return Returns promise which fulfils with `true` if the assets were successfully deleted.\n   */\n  function _removeAssetsFromAlbumAsync() {\n    _removeAssetsFromAlbumAsync = (0, _asyncToGenerator.default)(function* (assets, album) {\n      if (!MediaLibrary.default.removeAssetsFromAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'removeAssetsFromAlbumAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      var albumId = getId(album);\n      checkAssetIds(assetIds);\n      return yield MediaLibrary.default.removeAssetsFromAlbumAsync(assetIds, albumId);\n    });\n    return _removeAssetsFromAlbumAsync.apply(this, arguments);\n  }\n  function deleteAssetsAsync(_x8) {\n    return _deleteAssetsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Provides more information about an asset, including GPS location, local URI and EXIF metadata.\n   * @param asset An [Asset](#asset) or its ID.\n   * @param options\n   * @return An [AssetInfo](#assetinfo) object, which is an `Asset` extended by an additional fields.\n   */\n  function _deleteAssetsAsync() {\n    _deleteAssetsAsync = (0, _asyncToGenerator.default)(function* (assets) {\n      if (!MediaLibrary.default.deleteAssetsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAssetsAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      checkAssetIds(assetIds);\n      return yield MediaLibrary.default.deleteAssetsAsync(assetIds);\n    });\n    return _deleteAssetsAsync.apply(this, arguments);\n  }\n  function getAssetInfoAsync(_x9) {\n    return _getAssetInfoAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Queries for user-created albums in media gallery.\n   * @return A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\n   * root directory of your storage may be listed as album titled `\"0\"` or unlisted at all.\n   */\n  function _getAssetInfoAsync() {\n    _getAssetInfoAsync = (0, _asyncToGenerator.default)(function* (asset) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shouldDownloadFromNetwork: true\n      };\n      if (!MediaLibrary.default.getAssetInfoAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetInfoAsync');\n      }\n      var assetId = getId(asset);\n      checkAssetIds([assetId]);\n      var assetInfo = yield MediaLibrary.default.getAssetInfoAsync(assetId, options);\n      if (Array.isArray(assetInfo)) {\n        // Android returns an array with asset info, we need to pick the first item\n        return assetInfo[0];\n      }\n      return assetInfo;\n    });\n    return _getAssetInfoAsync.apply(this, arguments);\n  }\n  function getAlbumsAsync() {\n    return _getAlbumsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Queries for an album with a specific name.\n   * @param title Name of the album to look for.\n   * @return An object representing an [`Album`](#album), if album with given name exists, otherwise\n   * returns `null`.\n   */\n  function _getAlbumsAsync() {\n    _getAlbumsAsync = (0, _asyncToGenerator.default)(function* () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$includeSmartAlbu = _ref.includeSmartAlbums,\n        includeSmartAlbums = _ref$includeSmartAlbu === void 0 ? false : _ref$includeSmartAlbu;\n      if (!MediaLibrary.default.getAlbumsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumsAsync');\n      }\n      return yield MediaLibrary.default.getAlbumsAsync({\n        includeSmartAlbums\n      });\n    });\n    return _getAlbumsAsync.apply(this, arguments);\n  }\n  function getAlbumAsync(_x0) {\n    return _getAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Creates an album with given name and initial asset. The asset parameter is required on Android,\n   * since it's not possible to create empty album on this platform. On Android, by default it copies\n   * given asset from the current album to the new one, however it's also possible to move it by\n   * passing `false` as `copyAsset` argument.\n   * In case it's copied you should keep in mind that `getAssetsAsync` will return duplicated asset.\n   * > On Android, it's not possible to create an empty album. You must provide an existing asset to copy or move into the album or an uri of a local file, which will be used to create an initial asset for the album.\n   * @param albumName Name of the album to create.\n   * @param asset An [Asset](#asset) or its ID. On Android you either need to provide an asset or a localUri.\n   * @param initialAssetLocalUri A URI to the local media file, which will be used to create the initial asset inside the album. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`. If the `asset` was provided, this parameter will be ignored.\n   * @param copyAsset __Android Only.__ Whether to copy asset to the new album instead of move it. This parameter is ignored if `asset` was not provided.\n   * Defaults to `true`.\n   * @return Newly created [`Album`](#album).\n   */\n  function _getAlbumAsync() {\n    _getAlbumAsync = (0, _asyncToGenerator.default)(function* (title) {\n      if (!MediaLibrary.default.getAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumAsync');\n      }\n      if (typeof title !== 'string') {\n        throw new Error('Album title must be a string!');\n      }\n      return yield MediaLibrary.default.getAlbumAsync(title);\n    });\n    return _getAlbumAsync.apply(this, arguments);\n  }\n  function createAlbumAsync(_x1, _x10) {\n    return _createAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Deletes given albums from the library. On Android by default it deletes assets belonging to given\n   * albums from the library. On iOS it doesn't delete these assets, however it's possible to do by\n   * passing `true` as `deleteAssets`.\n   * @param albums An array of [`Album`](#asset)s or their IDs.\n   * @param assetRemove __iOS Only.__ Whether to also delete assets belonging to given albums.\n   * Defaults to `false`.\n   * @return Returns a promise which fulfils with `true` if the albums were successfully deleted from\n   * the library.\n   */\n  function _createAlbumAsync() {\n    _createAlbumAsync = (0, _asyncToGenerator.default)(function* (albumName, asset) {\n      var copyAsset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var initialAssetLocalUri = arguments.length > 3 ? arguments[3] : undefined;\n      if (!MediaLibrary.default.createAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAlbumAsync');\n      }\n      var assetId = getId(asset);\n      if (_reactNative.Platform.OS === 'android' && (typeof assetId !== 'string' || assetId.length === 0) && !initialAssetLocalUri) {\n        // it's not possible to create empty album on Android, so initial asset must be provided\n        throw new Error('MediaLibrary.createAlbumAsync must be called with an asset or a localUri on Android.');\n      }\n      if (!albumName || typeof albumName !== 'string') {\n        throw new Error('Invalid argument \"albumName\". It must be a string!');\n      }\n      if (assetId != null && typeof assetId !== 'string') {\n        throw new Error('Asset ID must be a string!');\n      }\n      if (_reactNative.Platform.OS === 'ios') {\n        return yield MediaLibrary.default.createAlbumAsync(albumName, assetId, initialAssetLocalUri);\n      }\n      return yield MediaLibrary.default.createAlbumAsync(albumName, assetId, !!copyAsset, initialAssetLocalUri);\n    });\n    return _createAlbumAsync.apply(this, arguments);\n  }\n  function deleteAlbumsAsync(_x11) {\n    return _deleteAlbumsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Fetches a page of assets matching the provided criteria.\n   * @param assetsOptions\n   * @return A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\n   */\n  function _deleteAlbumsAsync() {\n    _deleteAlbumsAsync = (0, _asyncToGenerator.default)(function* (albums) {\n      var assetRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!MediaLibrary.default.deleteAlbumsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAlbumsAsync');\n      }\n      var albumIds = arrayize(albums).map(getId);\n      checkAlbumIds(albumIds);\n      if (_reactNative.Platform.OS === 'android') {\n        return yield MediaLibrary.default.deleteAlbumsAsync(albumIds);\n      }\n      return yield MediaLibrary.default.deleteAlbumsAsync(albumIds, !!assetRemove);\n    });\n    return _deleteAlbumsAsync.apply(this, arguments);\n  }\n  function getAssetsAsync() {\n    return _getAssetsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribes for updates in user's media library.\n   * @param listener A callback that is fired when any assets have been inserted or deleted from the\n   * library. On Android it's invoked with an empty object. On iOS, it's invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\n   * object.\n   *\n   * Additionally, only on iOS, the listener is also invoked when the user changes access to individual assets in the media library\n   * using `presentPermissionsPickerAsync()`.\n   * @return An [`Subscription`](#subscription) object that you can call `remove()` on when you would\n   * like to unsubscribe the listener.\n   */\n  function _getAssetsAsync() {\n    _getAssetsAsync = (0, _asyncToGenerator.default)(function* () {\n      var assetsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!MediaLibrary.default.getAssetsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetsAsync');\n      }\n      var first = assetsOptions.first,\n        after = assetsOptions.after,\n        album = assetsOptions.album,\n        sortBy = assetsOptions.sortBy,\n        mediaType = assetsOptions.mediaType,\n        createdAfter = assetsOptions.createdAfter,\n        createdBefore = assetsOptions.createdBefore,\n        mediaSubtypes = assetsOptions.mediaSubtypes,\n        resolveWithFullInfo = assetsOptions.resolveWithFullInfo;\n      var options = {\n        first: first == null ? 20 : first,\n        after: getId(after),\n        album: getId(album),\n        sortBy: arrayize(sortBy),\n        mediaType: arrayize(mediaType || [MediaType.photo]),\n        mediaSubtypes: arrayize(mediaSubtypes),\n        createdAfter: dateToNumber(createdAfter),\n        createdBefore: dateToNumber(createdBefore),\n        resolveWithFullInfo: resolveWithFullInfo ?? false\n      };\n      if (first != null && typeof options.first !== 'number') {\n        throw new Error('Option \"first\" must be a number!');\n      }\n      if (after != null && typeof options.after !== 'string') {\n        throw new Error('Option \"after\" must be a string!');\n      }\n      if (album != null && typeof options.album !== 'string') {\n        throw new Error('Option \"album\" must be a string!');\n      }\n      if (after != null && _reactNative.Platform.OS === 'android' && isNaN(parseInt(getId(after), 10))) {\n        throw new Error('Option \"after\" must be a valid ID!');\n      }\n      if (first != null && first < 0) {\n        throw new Error('Option \"first\" must be a positive integer!');\n      }\n      options.mediaType.forEach(checkMediaType);\n      // TODO(@kitten): Add expected native types for `MediaLibrary`\n      return yield MediaLibrary.default.getAssetsAsync({\n        ...options,\n        sortBy: options.sortBy.map(sortByOptionToString)\n      });\n    });\n    return _getAssetsAsync.apply(this, arguments);\n  }\n  function addListener(listener) {\n    return MediaLibrary.default.addListener(MediaLibrary.default.CHANGE_LISTENER_NAME, listener);\n  }\n  // @docsMissing\n  function removeSubscription(subscription) {\n    subscription.remove();\n  }\n  // @needsAudit\n  /**\n   * Removes all listeners.\n   */\n  function removeAllListeners() {\n    MediaLibrary.default.removeAllListeners(MediaLibrary.default.CHANGE_LISTENER_NAME);\n  }\n  // @needsAudit\n  /**\n   * Fetches a list of moments, which is a group of assets taken around the same place\n   * and time.\n   * @return An array of [albums](#album) whose type is `moment`.\n   * @platform ios\n   */\n  function getMomentsAsync() {\n    return _getMomentsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Moves album content to the special media directories on **Android R** or **above** if needed.\n   * Those new locations are in line with the Android `scoped storage` - so your application won't\n   * lose write permission to those directories in the future.\n   *\n   * This method does nothing if:\n   * - app is running on **iOS**, **web** or **Android below R**\n   * - app has **write permission** to the album folder\n   *\n   * The migration is possible when the album contains only compatible files types.\n   * For instance, movies and pictures are compatible with each other, but music and pictures are not.\n   * If automatic migration isn't possible, the function rejects.\n   * In that case, you can use methods from the `expo-file-system` to migrate all your files manually.\n   *\n   * # Why do you need to migrate files?\n   * __Android R__ introduced a lot of changes in the storage system. Now applications can't save\n   * anything to the root directory. The only available locations are from the `MediaStore` API.\n   * Unfortunately, the media library stored albums in folders for which, because of those changes,\n   * the application doesn't have permissions anymore. However, it doesn't mean you need to migrate\n   * all your albums. If your application doesn't add assets to albums, you don't have to migrate.\n   * Everything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\n   *\n   * @param album An [Album](#album) or its ID.\n   * @return A promise which fulfils to `void`.\n   */\n  function _getMomentsAsync() {\n    _getMomentsAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!MediaLibrary.default.getMomentsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getMomentsAsync');\n      }\n      return yield MediaLibrary.default.getMomentsAsync();\n    });\n    return _getMomentsAsync.apply(this, arguments);\n  }\n  function migrateAlbumIfNeededAsync(_x12) {\n    return _migrateAlbumIfNeededAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Checks if the album should be migrated to a different location. In other words, it checks if the\n   * application has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\n   * > Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns a promise which fulfils with `true` if the album should be migrated.\n   */\n  function _migrateAlbumIfNeededAsync() {\n    _migrateAlbumIfNeededAsync = (0, _asyncToGenerator.default)(function* (album) {\n      if (!MediaLibrary.default.migrateAlbumIfNeededAsync) {\n        return;\n      }\n      return yield MediaLibrary.default.migrateAlbumIfNeededAsync(getId(album));\n    });\n    return _migrateAlbumIfNeededAsync.apply(this, arguments);\n  }\n  function albumNeedsMigrationAsync(_x13) {\n    return _albumNeedsMigrationAsync.apply(this, arguments);\n  }\n  function _albumNeedsMigrationAsync() {\n    _albumNeedsMigrationAsync = (0, _asyncToGenerator.default)(function* (album) {\n      if (!MediaLibrary.default.albumNeedsMigrationAsync) {\n        return false;\n      }\n      return yield MediaLibrary.default.albumNeedsMigrationAsync(getId(album));\n    });\n    return _albumNeedsMigrationAsync.apply(this, arguments);\n  }\n});","lineCount":682,"map":[[12,2,10,0,"Object"],[12,8,10,0],[12,9,10,0,"defineProperty"],[12,23,10,0],[12,24,10,0,"exports"],[12,31,10,0],[13,4,10,0,"enumerable"],[13,14,10,0],[14,4,10,0,"get"],[14,7,10,0],[14,18,10,0,"get"],[14,19,10,0],[15,6,10,0],[15,13,10,9,"PermissionStatus"],[15,29,10,25],[15,30,10,25,"PermissionStatus"],[15,46,10,25],[16,4,10,25],[17,2,10,25],[18,2,68,0,"Object"],[18,8,68,0],[18,9,68,0,"defineProperty"],[18,23,68,0],[18,24,68,0,"exports"],[18,31,68,0],[19,4,68,0,"enumerable"],[19,14,68,0],[20,4,68,0,"get"],[20,7,68,0],[20,18,68,0,"get"],[20,19,68,0],[21,6,68,0],[21,13,68,0,"MediaType"],[21,22,68,0],[22,4,68,0],[23,2,68,0],[24,2,73,0,"Object"],[24,8,73,0],[24,9,73,0,"defineProperty"],[24,23,73,0],[24,24,73,0,"exports"],[24,31,73,0],[25,4,73,0,"enumerable"],[25,14,73,0],[26,4,73,0,"get"],[26,7,73,0],[26,18,73,0,"get"],[26,19,73,0],[27,6,73,0],[27,13,73,0,"SortBy"],[27,19,73,0],[28,4,73,0],[29,2,73,0],[30,2,80,0,"exports"],[30,9,80,0],[30,10,80,0,"isAvailableAsync"],[30,26,80,0],[30,29,80,0,"isAvailableAsync"],[30,45,80,0],[31,2,93,0,"exports"],[31,9,93,0],[31,10,93,0,"requestPermissionsAsync"],[31,33,93,0],[31,36,93,0,"requestPermissionsAsync"],[31,59,93,0],[32,2,110,0,"exports"],[32,9,110,0],[32,10,110,0,"getPermissionsAsync"],[32,29,110,0],[32,32,110,0,"getPermissionsAsync"],[32,51,110,0],[33,2,129,0,"Object"],[33,8,129,0],[33,9,129,0,"defineProperty"],[33,23,129,0],[33,24,129,0,"exports"],[33,31,129,0],[34,4,129,0,"enumerable"],[34,14,129,0],[35,4,129,0,"get"],[35,7,129,0],[35,18,129,0,"get"],[35,19,129,0],[36,6,129,0],[36,13,129,0,"usePermissions"],[36,27,129,0],[37,4,129,0],[38,2,129,0],[39,2,149,0,"exports"],[39,9,149,0],[39,10,149,0,"presentPermissionsPickerAsync"],[39,39,149,0],[39,42,149,0,"presentPermissionsPickerAsync"],[39,71,149,0],[40,2,179,0,"exports"],[40,9,179,0],[40,10,179,0,"createAssetAsync"],[40,26,179,0],[40,29,179,0,"createAssetAsync"],[40,45,179,0],[41,2,203,0,"exports"],[41,9,203,0],[41,10,203,0,"saveToLibraryAsync"],[41,28,203,0],[41,31,203,0,"saveToLibraryAsync"],[41,49,203,0],[42,2,223,0,"exports"],[42,9,223,0],[42,10,223,0,"addAssetsToAlbumAsync"],[42,31,223,0],[42,34,223,0,"addAssetsToAlbumAsync"],[42,55,223,0],[43,2,248,0,"exports"],[43,9,248,0],[43,10,248,0,"removeAssetsFromAlbumAsync"],[43,36,248,0],[43,39,248,0,"removeAssetsFromAlbumAsync"],[43,65,248,0],[44,2,265,0,"exports"],[44,9,265,0],[44,10,265,0,"deleteAssetsAsync"],[44,27,265,0],[44,30,265,0,"deleteAssetsAsync"],[44,47,265,0],[45,2,280,0,"exports"],[45,9,280,0],[45,10,280,0,"getAssetInfoAsync"],[45,27,280,0],[45,30,280,0,"getAssetInfoAsync"],[45,47,280,0],[46,2,299,0,"exports"],[46,9,299,0],[46,10,299,0,"getAlbumsAsync"],[46,24,299,0],[46,27,299,0,"getAlbumsAsync"],[46,41,299,0],[47,2,312,0,"exports"],[47,9,312,0],[47,10,312,0,"getAlbumAsync"],[47,23,312,0],[47,26,312,0,"getAlbumAsync"],[47,39,312,0],[48,2,337,0,"exports"],[48,9,337,0],[48,10,337,0,"createAlbumAsync"],[48,26,337,0],[48,29,337,0,"createAlbumAsync"],[48,45,337,0],[49,2,370,0,"exports"],[49,9,370,0],[49,10,370,0,"deleteAlbumsAsync"],[49,27,370,0],[49,30,370,0,"deleteAlbumsAsync"],[49,47,370,0],[50,2,387,0,"exports"],[50,9,387,0],[50,10,387,0,"getAssetsAsync"],[50,24,387,0],[50,27,387,0,"getAssetsAsync"],[50,41,387,0],[51,2,437,0,"exports"],[51,9,437,0],[51,10,437,0,"addListener"],[51,21,437,0],[51,24,437,0,"addListener"],[51,35,437,0],[52,2,441,0,"exports"],[52,9,441,0],[52,10,441,0,"removeSubscription"],[52,28,441,0],[52,31,441,0,"removeSubscription"],[52,49,441,0],[53,2,448,0,"exports"],[53,9,448,0],[53,10,448,0,"removeAllListeners"],[53,28,448,0],[53,31,448,0,"removeAllListeners"],[53,49,448,0],[54,2,458,0,"exports"],[54,9,458,0],[54,10,458,0,"getMomentsAsync"],[54,25,458,0],[54,28,458,0,"getMomentsAsync"],[54,43,458,0],[55,2,490,0,"exports"],[55,9,490,0],[55,10,490,0,"migrateAlbumIfNeededAsync"],[55,35,490,0],[55,38,490,0,"migrateAlbumIfNeededAsync"],[55,63,490,0],[56,2,504,0,"exports"],[56,9,504,0],[56,10,504,0,"albumNeedsMigrationAsync"],[56,34,504,0],[56,37,504,0,"albumNeedsMigrationAsync"],[56,61,504,0],[57,2,509,1],[57,6,509,1,"_babelRuntimeHelpersAsyncToGenerator"],[57,42,509,1],[57,45,509,1,"require"],[57,52,509,1],[57,53,509,1,"_dependencyMap"],[57,67,509,1],[58,2,509,1],[58,6,509,1,"_asyncToGenerator"],[58,23,509,1],[58,26,509,1,"_interopDefault"],[58,41,509,1],[58,42,509,1,"_babelRuntimeHelpersAsyncToGenerator"],[58,78,509,1],[59,2,1,0],[59,6,1,0,"_expoModulesCore"],[59,22,1,0],[59,25,1,0,"require"],[59,32,1,0],[59,33,1,0,"_dependencyMap"],[59,47,1,0],[60,2,2,0],[60,6,2,0,"_reactNative"],[60,18,2,0],[60,21,2,0,"require"],[60,28,2,0],[60,29,2,0,"_dependencyMap"],[60,43,2,0],[61,2,3,0],[61,6,3,0,"_ExpoMediaLibrary"],[61,23,3,0],[61,26,3,0,"require"],[61,33,3,0],[61,34,3,0,"_dependencyMap"],[61,48,3,0],[62,2,3,0],[62,6,3,0,"MediaLibrary"],[62,18,3,0],[62,21,3,0,"_interopDefault"],[62,36,3,0],[62,37,3,0,"_ExpoMediaLibrary"],[62,54,3,0],[63,2,4,0],[63,6,4,6,"isExpoGo"],[63,14,4,14],[63,17,4,17],[63,24,4,24,"expo"],[63,28,4,28],[63,33,4,33],[63,44,4,44],[63,48,4,48,"globalThis"],[63,58,4,58],[63,59,4,59,"expo"],[63,63,4,63],[63,65,4,65,"modules"],[63,72,4,72],[63,74,4,74,"ExpoGo"],[63,80,4,80],[64,2,5,0],[64,6,5,4,"loggedExpoGoWarning"],[64,25,5,23],[64,28,5,26],[64,33,5,31],[65,2,6,0],[65,6,6,4,"isExpoGo"],[65,14,6,12],[65,18,6,16],[65,19,6,17,"loggedExpoGoWarning"],[65,38,6,36],[65,40,6,38],[66,4,7,4,"console"],[66,11,7,11],[66,12,7,12,"warn"],[66,16,7,16],[66,17,7,17],[66,281,7,281],[66,282,7,282],[67,4,8,4,"loggedExpoGoWarning"],[67,23,8,23],[67,26,8,26],[67,30,8,30],[68,2,9,0],[69,2,11,0],[69,11,11,9,"arrayize"],[69,19,11,17,"arrayize"],[69,20,11,18,"item"],[69,24,11,22],[69,26,11,24],[70,4,12,4],[70,8,12,8,"Array"],[70,13,12,13],[70,14,12,14,"isArray"],[70,21,12,21],[70,22,12,22,"item"],[70,26,12,26],[70,27,12,27],[70,29,12,29],[71,6,13,8],[71,13,13,15,"item"],[71,17,13,19],[72,4,14,4],[73,4,15,4],[73,11,15,11,"item"],[73,15,15,15],[73,18,15,18],[73,19,15,19,"item"],[73,23,15,23],[73,24,15,24],[73,27,15,27],[73,29,15,29],[74,2,16,0],[75,2,17,0],[75,11,17,9,"getId"],[75,16,17,14,"getId"],[75,17,17,15,"ref"],[75,20,17,18],[75,22,17,20],[76,4,18,4],[76,8,18,8],[76,15,18,15,"ref"],[76,18,18,18],[76,23,18,23],[76,31,18,31],[76,33,18,33],[77,6,19,8],[77,13,19,15,"ref"],[77,16,19,18],[78,4,20,4],[79,4,21,4],[79,11,21,11,"ref"],[79,14,21,14],[79,17,21,17,"ref"],[79,20,21,20],[79,21,21,21,"id"],[79,23,21,23],[79,26,21,26,"undefined"],[79,35,21,35],[80,2,22,0],[81,2,23,0],[81,11,23,9,"checkAssetIds"],[81,24,23,22,"checkAssetIds"],[81,25,23,23,"assetIds"],[81,33,23,31],[81,35,23,33],[82,4,24,4],[82,8,24,8,"assetIds"],[82,16,24,16],[82,17,24,17,"some"],[82,21,24,21],[82,22,24,23,"id"],[82,24,24,25],[82,28,24,30],[82,29,24,31,"id"],[82,31,24,33],[82,35,24,37],[82,42,24,44,"id"],[82,44,24,46],[82,49,24,51],[82,57,24,59],[82,58,24,60],[82,60,24,62],[83,6,25,8],[83,12,25,14],[83,16,25,18,"Error"],[83,21,25,23],[83,22,25,24],[83,50,25,52],[83,51,25,53],[84,4,26,4],[85,2,27,0],[86,2,28,0],[86,11,28,9,"checkAlbumIds"],[86,24,28,22,"checkAlbumIds"],[86,25,28,23,"albumIds"],[86,33,28,31],[86,35,28,33],[87,4,29,4],[87,8,29,8,"albumIds"],[87,16,29,16],[87,17,29,17,"some"],[87,21,29,21],[87,22,29,23,"id"],[87,24,29,25],[87,28,29,30],[87,29,29,31,"id"],[87,31,29,33],[87,35,29,37],[87,42,29,44,"id"],[87,44,29,46],[87,49,29,51],[87,57,29,59],[87,58,29,60],[87,60,29,62],[88,6,30,8],[88,12,30,14],[88,16,30,18,"Error"],[88,21,30,23],[88,22,30,24],[88,50,30,52],[88,51,30,53],[89,4,31,4],[90,2,32,0],[91,2,33,0],[91,11,33,9,"checkMediaType"],[91,25,33,23,"checkMediaType"],[91,26,33,24,"mediaType"],[91,35,33,33],[91,37,33,35],[92,4,34,4],[92,8,34,8,"Object"],[92,14,34,14],[92,15,34,15,"values"],[92,21,34,21],[92,22,34,22,"MediaType"],[92,31,34,31],[92,32,34,32],[92,33,34,33,"indexOf"],[92,40,34,40],[92,41,34,41,"mediaType"],[92,50,34,50],[92,51,34,51],[92,56,34,56],[92,57,34,57],[92,58,34,58],[92,60,34,60],[93,6,35,8],[93,12,35,14],[93,16,35,18,"Error"],[93,21,35,23],[93,22,35,24],[93,44,35,46,"mediaType"],[93,53,35,55],[93,55,35,57],[93,56,35,58],[94,4,36,4],[95,2,37,0],[96,2,38,0],[96,11,38,9,"checkSortBy"],[96,22,38,20,"checkSortBy"],[96,23,38,21,"sortBy"],[96,29,38,27],[96,31,38,29],[97,4,39,4],[97,8,39,8,"Array"],[97,13,39,13],[97,14,39,14,"isArray"],[97,21,39,21],[97,22,39,22,"sortBy"],[97,28,39,28],[97,29,39,29],[97,31,39,31],[98,6,40,8,"checkSortByKey"],[98,20,40,22],[98,21,40,23,"sortBy"],[98,27,40,29],[98,28,40,30],[98,29,40,31],[98,30,40,32],[98,31,40,33],[99,6,41,8],[99,10,41,12],[99,17,41,19,"sortBy"],[99,23,41,25],[99,24,41,26],[99,25,41,27],[99,26,41,28],[99,31,41,33],[99,40,41,42],[99,42,41,44],[100,8,42,12],[100,14,42,18],[100,18,42,22,"Error"],[100,23,42,27],[100,24,42,28],[100,87,42,91],[100,88,42,92],[101,6,43,8],[102,4,44,4],[102,5,44,5],[102,11,45,9],[103,6,46,8,"checkSortByKey"],[103,20,46,22],[103,21,46,23,"sortBy"],[103,27,46,29],[103,28,46,30],[104,4,47,4],[105,2,48,0],[106,2,49,0],[106,11,49,9,"checkSortByKey"],[106,25,49,23,"checkSortByKey"],[106,26,49,24,"sortBy"],[106,32,49,30],[106,34,49,32],[107,4,50,4],[107,8,50,8,"Object"],[107,14,50,14],[107,15,50,15,"values"],[107,21,50,21],[107,22,50,22,"SortBy"],[107,28,50,28],[107,29,50,29],[107,30,50,30,"indexOf"],[107,37,50,37],[107,38,50,38,"sortBy"],[107,44,50,44],[107,45,50,45],[107,50,50,50],[107,51,50,51],[107,52,50,52],[107,54,50,54],[108,6,51,8],[108,12,51,14],[108,16,51,18,"Error"],[108,21,51,23],[108,22,51,24],[108,45,51,47,"sortBy"],[108,51,51,53],[108,53,51,55],[108,54,51,56],[109,4,52,4],[110,2,53,0],[111,2,54,0],[111,11,54,9,"sortByOptionToString"],[111,31,54,29,"sortByOptionToString"],[111,32,54,30,"sortBy"],[111,38,54,36],[111,40,54,38],[112,4,55,4,"checkSortBy"],[112,15,55,15],[112,16,55,16,"sortBy"],[112,22,55,22],[112,23,55,23],[113,4,56,4],[113,8,56,8,"Array"],[113,13,56,13],[113,14,56,14,"isArray"],[113,21,56,21],[113,22,56,22,"sortBy"],[113,28,56,28],[113,29,56,29],[113,31,56,31],[114,6,57,8],[114,13,57,15],[114,16,57,18,"sortBy"],[114,22,57,24],[114,23,57,25],[114,24,57,26],[114,25,57,27],[114,29,57,31,"sortBy"],[114,35,57,37],[114,36,57,38],[114,37,57,39],[114,38,57,40],[114,41,57,43],[114,46,57,48],[114,49,57,51],[114,55,57,57],[114,57,57,59],[115,4,58,4],[116,4,59,4],[116,11,59,11],[116,14,59,14,"sortBy"],[116,20,59,20],[116,27,59,27],[117,2,60,0],[118,2,61,0],[118,11,61,9,"dateToNumber"],[118,23,61,21,"dateToNumber"],[118,24,61,22,"value"],[118,29,61,27],[118,31,61,29],[119,4,62,4],[119,11,62,11,"value"],[119,16,62,16],[119,28,62,28,"Date"],[119,32,62,32],[119,35,62,35,"value"],[119,40,62,40],[119,41,62,41,"getTime"],[119,48,62,48],[119,49,62,49],[119,50,62,50],[119,53,62,53,"value"],[119,58,62,58],[120,2,63,0],[121,2,64,0],[122,2,65,0],[123,0,66,0],[124,0,67,0],[125,2,68,7],[125,6,68,13,"MediaType"],[125,15,68,22],[125,18,68,25,"MediaLibrary"],[125,30,68,37],[125,31,68,37,"default"],[125,38,68,37],[125,39,68,38,"MediaType"],[125,48,68,47],[126,2,69,0],[127,2,70,0],[128,0,71,0],[129,0,72,0],[130,2,73,7],[130,6,73,13,"SortBy"],[130,12,73,19],[130,15,73,22,"MediaLibrary"],[130,27,73,34],[130,28,73,34,"default"],[130,35,73,34],[130,36,73,35,"SortBy"],[130,42,73,41],[131,2,74,0],[132,2,75,0],[133,0,76,0],[134,0,77,0],[135,0,78,0],[136,0,79,0],[137,2,75,0],[137,11,80,22,"isAvailableAsync"],[137,27,80,38,"isAvailableAsync"],[137,28,80,38],[138,4,80,38],[138,11,80,38,"_isAvailableAsync"],[138,28,80,38],[138,29,80,38,"apply"],[138,34,80,38],[138,41,80,38,"arguments"],[138,50,80,38],[139,2,80,38],[139,4,83,0],[140,2,84,0],[141,0,85,0],[142,0,86,0],[143,0,87,0],[144,0,88,0],[145,0,89,0],[146,0,90,0],[147,0,91,0],[148,0,92,0],[149,2,84,0],[149,11,84,0,"_isAvailableAsync"],[149,29,84,0],[150,4,84,0,"_isAvailableAsync"],[150,21,84,0],[150,28,84,0,"_asyncToGenerator"],[150,45,84,0],[150,46,84,0,"default"],[150,53,84,0],[150,55,80,7],[150,68,80,41],[151,6,81,4],[151,13,81,11],[151,14,81,12],[151,15,81,13,"MediaLibrary"],[151,27,81,25],[151,28,81,25,"default"],[151,35,81,25],[151,39,81,29],[151,55,81,45],[151,59,81,49,"MediaLibrary"],[151,71,81,61],[151,72,81,61,"default"],[151,79,81,61],[152,4,82,0],[152,5,82,1],[153,4,82,1],[153,11,82,1,"_isAvailableAsync"],[153,28,82,1],[153,29,82,1,"apply"],[153,34,82,1],[153,41,82,1,"arguments"],[153,50,82,1],[154,2,82,1],[155,2,82,1],[155,11,93,22,"requestPermissionsAsync"],[155,34,93,45,"requestPermissionsAsync"],[155,35,93,45],[156,4,93,45],[156,11,93,45,"_requestPermissionsAsync"],[156,35,93,45],[156,36,93,45,"apply"],[156,41,93,45],[156,48,93,45,"arguments"],[156,57,93,45],[157,2,93,45],[157,4,102,0],[158,2,103,0],[159,0,104,0],[160,0,105,0],[161,0,106,0],[162,0,107,0],[163,0,108,0],[164,0,109,0],[165,2,103,0],[165,11,103,0,"_requestPermissionsAsync"],[165,36,103,0],[166,4,103,0,"_requestPermissionsAsync"],[166,28,103,0],[166,35,103,0,"_asyncToGenerator"],[166,52,103,0],[166,53,103,0,"default"],[166,60,103,0],[166,62,93,7],[166,75,93,86],[167,6,93,86],[167,10,93,46,"writeOnly"],[167,19,93,55],[167,22,93,55,"arguments"],[167,31,93,55],[167,32,93,55,"length"],[167,38,93,55],[167,46,93,55,"arguments"],[167,55,93,55],[167,63,93,55,"undefined"],[167,72,93,55],[167,75,93,55,"arguments"],[167,84,93,55],[167,90,93,58],[167,95,93,63],[168,6,93,63],[168,10,93,65,"granularPermissions"],[168,29,93,84],[168,32,93,84,"arguments"],[168,41,93,84],[168,42,93,84,"length"],[168,48,93,84],[168,55,93,84,"arguments"],[168,64,93,84],[168,70,93,84,"undefined"],[168,79,93,84],[169,6,94,4],[169,10,94,8],[169,11,94,9,"MediaLibrary"],[169,23,94,21],[169,24,94,21,"default"],[169,31,94,21],[169,32,94,22,"requestPermissionsAsync"],[169,55,94,45],[169,57,94,47],[170,8,95,8],[170,14,95,14],[170,18,95,18,"UnavailabilityError"],[170,34,95,37],[170,35,95,37,"UnavailabilityError"],[170,54,95,37],[170,55,95,38],[170,69,95,52],[170,71,95,54],[170,96,95,79],[170,97,95,80],[171,6,96,4],[172,6,97,4],[172,10,97,8,"Platform"],[172,22,97,16],[172,23,97,16,"Platform"],[172,31,97,16],[172,32,97,17,"OS"],[172,34,97,19],[172,39,97,24],[172,48,97,33],[172,50,97,35],[173,8,98,8],[173,21,98,21,"MediaLibrary"],[173,33,98,33],[173,34,98,33,"default"],[173,41,98,33],[173,42,98,34,"requestPermissionsAsync"],[173,65,98,57],[173,66,98,58,"writeOnly"],[173,75,98,67],[173,77,98,69,"granularPermissions"],[173,96,98,88],[173,97,98,89],[174,6,99,4],[175,6,100,4],[175,19,100,17,"MediaLibrary"],[175,31,100,29],[175,32,100,29,"default"],[175,39,100,29],[175,40,100,30,"requestPermissionsAsync"],[175,63,100,53],[175,64,100,54,"writeOnly"],[175,73,100,63],[175,74,100,64],[176,4,101,0],[176,5,101,1],[177,4,101,1],[177,11,101,1,"_requestPermissionsAsync"],[177,35,101,1],[177,36,101,1,"apply"],[177,41,101,1],[177,48,101,1,"arguments"],[177,57,101,1],[178,2,101,1],[179,2,101,1],[179,11,110,22,"getPermissionsAsync"],[179,30,110,41,"getPermissionsAsync"],[179,31,110,41],[180,4,110,41],[180,11,110,41,"_getPermissionsAsync"],[180,31,110,41],[180,32,110,41,"apply"],[180,37,110,41],[180,44,110,41,"arguments"],[180,53,110,41],[181,2,110,41],[181,4,119,0],[182,2,120,0],[183,0,121,0],[184,0,122,0],[185,0,123,0],[186,0,124,0],[187,0,125,0],[188,0,126,0],[189,0,127,0],[190,0,128,0],[191,2,120,0],[191,11,120,0,"_getPermissionsAsync"],[191,32,120,0],[192,4,120,0,"_getPermissionsAsync"],[192,24,120,0],[192,31,120,0,"_asyncToGenerator"],[192,48,120,0],[192,49,120,0,"default"],[192,56,120,0],[192,58,110,7],[192,71,110,82],[193,6,110,82],[193,10,110,42,"writeOnly"],[193,19,110,51],[193,22,110,51,"arguments"],[193,31,110,51],[193,32,110,51,"length"],[193,38,110,51],[193,46,110,51,"arguments"],[193,55,110,51],[193,63,110,51,"undefined"],[193,72,110,51],[193,75,110,51,"arguments"],[193,84,110,51],[193,90,110,54],[193,95,110,59],[194,6,110,59],[194,10,110,61,"granularPermissions"],[194,29,110,80],[194,32,110,80,"arguments"],[194,41,110,80],[194,42,110,80,"length"],[194,48,110,80],[194,55,110,80,"arguments"],[194,64,110,80],[194,70,110,80,"undefined"],[194,79,110,80],[195,6,111,4],[195,10,111,8],[195,11,111,9,"MediaLibrary"],[195,23,111,21],[195,24,111,21,"default"],[195,31,111,21],[195,32,111,22,"getPermissionsAsync"],[195,51,111,41],[195,53,111,43],[196,8,112,8],[196,14,112,14],[196,18,112,18,"UnavailabilityError"],[196,34,112,37],[196,35,112,37,"UnavailabilityError"],[196,54,112,37],[196,55,112,38],[196,69,112,52],[196,71,112,54],[196,92,112,75],[196,93,112,76],[197,6,113,4],[198,6,114,4],[198,10,114,8,"Platform"],[198,22,114,16],[198,23,114,16,"Platform"],[198,31,114,16],[198,32,114,17,"OS"],[198,34,114,19],[198,39,114,24],[198,48,114,33],[198,50,114,35],[199,8,115,8],[199,21,115,21,"MediaLibrary"],[199,33,115,33],[199,34,115,33,"default"],[199,41,115,33],[199,42,115,34,"getPermissionsAsync"],[199,61,115,53],[199,62,115,54,"writeOnly"],[199,71,115,63],[199,73,115,65,"granularPermissions"],[199,92,115,84],[199,93,115,85],[200,6,116,4],[201,6,117,4],[201,19,117,17,"MediaLibrary"],[201,31,117,29],[201,32,117,29,"default"],[201,39,117,29],[201,40,117,30,"getPermissionsAsync"],[201,59,117,49],[201,60,117,50,"writeOnly"],[201,69,117,59],[201,70,117,60],[202,4,118,0],[202,5,118,1],[203,4,118,1],[203,11,118,1,"_getPermissionsAsync"],[203,31,118,1],[203,32,118,1,"apply"],[203,37,118,1],[203,44,118,1,"arguments"],[203,53,118,1],[204,2,118,1],[205,2,129,7],[205,6,129,13,"usePermissions"],[205,20,129,27],[205,23,129,30],[205,27,129,30,"createPermissionHook"],[205,43,129,50],[205,44,129,50,"createPermissionHook"],[205,64,129,50],[205,66,129,51],[206,4,130,4],[207,4,131,4,"getMethod"],[207,13,131,13],[207,15,131,16,"options"],[207,22,131,23],[207,26,131,28,"getPermissionsAsync"],[207,45,131,47],[207,46,131,48,"options"],[207,53,131,55],[207,55,131,57,"writeOnly"],[207,64,131,66],[207,66,131,68,"options"],[207,73,131,75],[207,75,131,77,"granularPermissions"],[207,94,131,96],[207,95,131,97],[208,4,132,4,"requestMethod"],[208,17,132,17],[208,19,132,20,"options"],[208,26,132,27],[208,30,132,32,"requestPermissionsAsync"],[208,53,132,55],[208,54,132,56,"options"],[208,61,132,63],[208,63,132,65,"writeOnly"],[208,72,132,74],[208,74,132,76,"options"],[208,81,132,83],[208,83,132,85,"granularPermissions"],[208,102,132,104],[209,2,133,0],[209,3,133,1],[209,4,133,2],[210,2,134,0],[211,2,135,0],[212,0,136,0],[213,0,137,0],[214,0,138,0],[215,0,139,0],[216,0,140,0],[217,0,141,0],[218,0,142,0],[219,0,143,0],[220,0,144,0],[221,0,145,0],[222,0,146,0],[223,0,147,0],[224,0,148,0],[225,2,135,0],[225,11,149,22,"presentPermissionsPickerAsync"],[225,40,149,51,"presentPermissionsPickerAsync"],[225,41,149,51],[226,4,149,51],[226,11,149,51,"_presentPermissionsPickerAsync"],[226,41,149,51],[226,42,149,51,"apply"],[226,47,149,51],[226,54,149,51,"arguments"],[226,63,149,51],[227,2,149,51],[227,4,162,0],[228,2,163,0],[229,0,164,0],[230,0,165,0],[231,0,166,0],[232,0,167,0],[233,0,168,0],[234,0,169,0],[235,0,170,0],[236,0,171,0],[237,0,172,0],[238,0,173,0],[239,0,174,0],[240,0,175,0],[241,0,176,0],[242,0,177,0],[243,0,178,0],[244,2,163,0],[244,11,163,0,"_presentPermissionsPickerAsync"],[244,42,163,0],[245,4,163,0,"_presentPermissionsPickerAsync"],[245,34,163,0],[245,41,163,0,"_asyncToGenerator"],[245,58,163,0],[245,59,163,0,"default"],[245,66,163,0],[245,68,149,7],[245,81,149,85],[246,6,149,85],[246,10,149,52,"mediaTypes"],[246,20,149,62],[246,23,149,62,"arguments"],[246,32,149,62],[246,33,149,62,"length"],[246,39,149,62],[246,47,149,62,"arguments"],[246,56,149,62],[246,64,149,62,"undefined"],[246,73,149,62],[246,76,149,62,"arguments"],[246,85,149,62],[246,91,149,65],[246,92,149,66],[246,99,149,73],[246,101,149,75],[246,108,149,82],[246,109,149,83],[247,6,150,4],[247,10,150,8,"Platform"],[247,22,150,16],[247,23,150,16,"Platform"],[247,31,150,16],[247,32,150,17,"OS"],[247,34,150,19],[247,39,150,24],[247,48,150,33],[247,52,150,37,"isExpoGo"],[247,60,150,45],[247,62,150,47],[248,8,151,8],[248,14,151,14],[248,18,151,18,"UnavailabilityError"],[248,34,151,37],[248,35,151,37,"UnavailabilityError"],[248,54,151,37],[248,55,151,38],[248,69,151,52],[248,71,151,54],[248,128,151,111],[248,129,151,112],[249,6,152,4],[250,6,153,4],[250,10,153,8,"Platform"],[250,22,153,16],[250,23,153,16,"Platform"],[250,31,153,16],[250,32,153,17,"OS"],[250,34,153,19],[250,39,153,24],[250,48,153,33],[250,52,153,37,"Platform"],[250,64,153,45],[250,65,153,45,"Platform"],[250,73,153,45],[250,74,153,46,"Version"],[250,81,153,53],[250,85,153,57],[250,87,153,59],[250,89,153,61],[251,8,154,8],[251,14,154,14,"MediaLibrary"],[251,26,154,26],[251,27,154,26,"default"],[251,34,154,26],[251,35,154,27,"requestPermissionsAsync"],[251,58,154,50],[251,59,154,51],[251,64,154,56],[251,66,154,58,"mediaTypes"],[251,76,154,68],[251,77,154,69],[252,8,155,8],[253,6,156,4],[254,6,157,4],[254,10,157,8],[254,11,157,9,"MediaLibrary"],[254,23,157,21],[254,24,157,21,"default"],[254,31,157,21],[254,32,157,22,"presentPermissionsPickerAsync"],[254,61,157,51],[254,63,157,53],[255,8,158,8],[255,14,158,14],[255,18,158,18,"UnavailabilityError"],[255,34,158,37],[255,35,158,37,"UnavailabilityError"],[255,54,158,37],[255,55,158,38],[255,69,158,52],[255,71,158,54],[255,102,158,85],[255,103,158,86],[256,6,159,4],[257,6,160,4],[257,19,160,17,"MediaLibrary"],[257,31,160,29],[257,32,160,29,"default"],[257,39,160,29],[257,40,160,30,"presentPermissionsPickerAsync"],[257,69,160,59],[257,70,160,60],[257,71,160,61],[258,4,161,0],[258,5,161,1],[259,4,161,1],[259,11,161,1,"_presentPermissionsPickerAsync"],[259,41,161,1],[259,42,161,1,"apply"],[259,47,161,1],[259,54,161,1,"arguments"],[259,63,161,1],[260,2,161,1],[261,2,161,1],[261,11,179,22,"createAssetAsync"],[261,27,179,38,"createAssetAsync"],[261,28,179,38,"_x"],[261,30,179,38],[261,32,179,38,"_x2"],[261,35,179,38],[262,4,179,38],[262,11,179,38,"_createAssetAsync"],[262,28,179,38],[262,29,179,38,"apply"],[262,34,179,38],[262,41,179,38,"arguments"],[262,50,179,38],[263,2,179,38],[263,4,194,0],[264,2,195,0],[265,0,196,0],[266,0,197,0],[267,0,198,0],[268,0,199,0],[269,0,200,0],[270,0,201,0],[271,0,202,0],[272,2,195,0],[272,11,195,0,"_createAssetAsync"],[272,29,195,0],[273,4,195,0,"_createAssetAsync"],[273,21,195,0],[273,28,195,0,"_asyncToGenerator"],[273,45,195,0],[273,46,195,0,"default"],[273,53,195,0],[273,55,179,7],[273,66,179,39,"localUri"],[273,74,179,47],[273,76,179,49,"album"],[273,81,179,54],[273,83,179,56],[274,6,180,4],[274,10,180,8],[274,11,180,9,"MediaLibrary"],[274,23,180,21],[274,24,180,21,"default"],[274,31,180,21],[274,32,180,22,"createAssetAsync"],[274,48,180,38],[274,50,180,40],[275,8,181,8],[275,14,181,14],[275,18,181,18,"UnavailabilityError"],[275,34,181,37],[275,35,181,37,"UnavailabilityError"],[275,54,181,37],[275,55,181,38],[275,69,181,52],[275,71,181,54],[275,89,181,72],[275,90,181,73],[276,6,182,4],[277,6,183,4],[277,10,183,10,"albumId"],[277,17,183,17],[277,20,183,20,"getId"],[277,25,183,25],[277,26,183,26,"album"],[277,31,183,31],[277,32,183,32],[278,6,184,4],[278,10,184,8],[278,11,184,9,"localUri"],[278,19,184,17],[278,23,184,21],[278,30,184,28,"localUri"],[278,38,184,36],[278,43,184,41],[278,51,184,49],[278,53,184,51],[279,8,185,8],[279,14,185,14],[279,18,185,18,"Error"],[279,23,185,23],[279,24,185,24],[279,75,185,75],[279,76,185,76],[280,6,186,4],[281,6,187,4],[281,10,187,10,"asset"],[281,15,187,15],[281,24,187,24,"MediaLibrary"],[281,36,187,36],[281,37,187,36,"default"],[281,44,187,36],[281,45,187,37,"createAssetAsync"],[281,61,187,53],[281,62,187,54,"localUri"],[281,70,187,62],[281,72,187,64,"albumId"],[281,79,187,71],[281,80,187,72],[282,6,188,4],[282,10,188,8,"Array"],[282,15,188,13],[282,16,188,14,"isArray"],[282,23,188,21],[282,24,188,22,"asset"],[282,29,188,27],[282,30,188,28],[282,32,188,30],[283,8,189,8],[284,8,190,8],[284,15,190,15,"asset"],[284,20,190,20],[284,21,190,21],[284,22,190,22],[284,23,190,23],[285,6,191,4],[286,6,192,4],[286,13,192,11,"asset"],[286,18,192,16],[287,4,193,0],[287,5,193,1],[288,4,193,1],[288,11,193,1,"_createAssetAsync"],[288,28,193,1],[288,29,193,1,"apply"],[288,34,193,1],[288,41,193,1,"arguments"],[288,50,193,1],[289,2,193,1],[290,2,193,1],[290,11,203,22,"saveToLibraryAsync"],[290,29,203,40,"saveToLibraryAsync"],[290,30,203,40,"_x3"],[290,33,203,40],[291,4,203,40],[291,11,203,40,"_saveToLibraryAsync"],[291,30,203,40],[291,31,203,40,"apply"],[291,36,203,40],[291,43,203,40,"arguments"],[291,52,203,40],[292,2,203,40],[292,4,209,0],[293,2,210,0],[294,0,211,0],[295,0,212,0],[296,0,213,0],[297,0,214,0],[298,0,215,0],[299,0,216,0],[300,0,217,0],[301,0,218,0],[302,0,219,0],[303,0,220,0],[304,0,221,0],[305,0,222,0],[306,2,210,0],[306,11,210,0,"_saveToLibraryAsync"],[306,31,210,0],[307,4,210,0,"_saveToLibraryAsync"],[307,23,210,0],[307,30,210,0,"_asyncToGenerator"],[307,47,210,0],[307,48,210,0,"default"],[307,55,210,0],[307,57,203,7],[307,68,203,41,"localUri"],[307,76,203,49],[307,78,203,51],[308,6,204,4],[308,10,204,8],[308,11,204,9,"MediaLibrary"],[308,23,204,21],[308,24,204,21,"default"],[308,31,204,21],[308,32,204,22,"saveToLibraryAsync"],[308,50,204,40],[308,52,204,42],[309,8,205,8],[309,14,205,14],[309,18,205,18,"UnavailabilityError"],[309,34,205,37],[309,35,205,37,"UnavailabilityError"],[309,54,205,37],[309,55,205,38],[309,69,205,52],[309,71,205,54],[309,91,205,74],[309,92,205,75],[310,6,206,4],[311,6,207,4],[311,19,207,17,"MediaLibrary"],[311,31,207,29],[311,32,207,29,"default"],[311,39,207,29],[311,40,207,30,"saveToLibraryAsync"],[311,58,207,48],[311,59,207,49,"localUri"],[311,67,207,57],[311,68,207,58],[312,4,208,0],[312,5,208,1],[313,4,208,1],[313,11,208,1,"_saveToLibraryAsync"],[313,30,208,1],[313,31,208,1,"apply"],[313,36,208,1],[313,43,208,1,"arguments"],[313,52,208,1],[314,2,208,1],[315,2,208,1],[315,11,223,22,"addAssetsToAlbumAsync"],[315,32,223,43,"addAssetsToAlbumAsync"],[315,33,223,43,"_x4"],[315,36,223,43],[315,38,223,43,"_x5"],[315,41,223,43],[316,4,223,43],[316,11,223,43,"_addAssetsToAlbumAsync"],[316,33,223,43],[316,34,223,43,"apply"],[316,39,223,43],[316,46,223,43,"arguments"],[316,55,223,43],[317,2,223,43],[317,4,238,0],[318,2,239,0],[319,0,240,0],[320,0,241,0],[321,0,242,0],[322,0,243,0],[323,0,244,0],[324,0,245,0],[325,0,246,0],[326,0,247,0],[327,2,239,0],[327,11,239,0,"_addAssetsToAlbumAsync"],[327,34,239,0],[328,4,239,0,"_addAssetsToAlbumAsync"],[328,26,239,0],[328,33,239,0,"_asyncToGenerator"],[328,50,239,0],[328,51,239,0,"default"],[328,58,239,0],[328,60,223,7],[328,71,223,44,"assets"],[328,77,223,50],[328,79,223,52,"album"],[328,84,223,57],[328,86,223,72],[329,6,223,72],[329,10,223,59,"copy"],[329,14,223,63],[329,17,223,63,"arguments"],[329,26,223,63],[329,27,223,63,"length"],[329,33,223,63],[329,41,223,63,"arguments"],[329,50,223,63],[329,58,223,63,"undefined"],[329,67,223,63],[329,70,223,63,"arguments"],[329,79,223,63],[329,85,223,66],[329,89,223,70],[330,6,224,4],[330,10,224,8],[330,11,224,9,"MediaLibrary"],[330,23,224,21],[330,24,224,21,"default"],[330,31,224,21],[330,32,224,22,"addAssetsToAlbumAsync"],[330,53,224,43],[330,55,224,45],[331,8,225,8],[331,14,225,14],[331,18,225,18,"UnavailabilityError"],[331,34,225,37],[331,35,225,37,"UnavailabilityError"],[331,54,225,37],[331,55,225,38],[331,69,225,52],[331,71,225,54],[331,94,225,77],[331,95,225,78],[332,6,226,4],[333,6,227,4],[333,10,227,10,"assetIds"],[333,18,227,18],[333,21,227,21,"arrayize"],[333,29,227,29],[333,30,227,30,"assets"],[333,36,227,36],[333,37,227,37],[333,38,227,38,"map"],[333,41,227,41],[333,42,227,42,"getId"],[333,47,227,47],[333,48,227,48],[334,6,228,4],[334,10,228,10,"albumId"],[334,17,228,17],[334,20,228,20,"getId"],[334,25,228,25],[334,26,228,26,"album"],[334,31,228,31],[334,32,228,32],[335,6,229,4,"checkAssetIds"],[335,19,229,17],[335,20,229,18,"assetIds"],[335,28,229,26],[335,29,229,27],[336,6,230,4],[336,10,230,8],[336,11,230,9,"albumId"],[336,18,230,16],[336,22,230,20],[336,29,230,27,"albumId"],[336,36,230,34],[336,41,230,39],[336,49,230,47],[336,51,230,49],[337,8,231,8],[337,14,231,14],[337,18,231,18,"Error"],[337,23,231,23],[337,24,231,24],[337,64,231,64],[337,65,231,65],[338,6,232,4],[339,6,233,4],[339,10,233,8,"Platform"],[339,22,233,16],[339,23,233,16,"Platform"],[339,31,233,16],[339,32,233,17,"OS"],[339,34,233,19],[339,39,233,24],[339,44,233,29],[339,46,233,31],[340,8,234,8],[340,21,234,21,"MediaLibrary"],[340,33,234,33],[340,34,234,33,"default"],[340,41,234,33],[340,42,234,34,"addAssetsToAlbumAsync"],[340,63,234,55],[340,64,234,56,"assetIds"],[340,72,234,64],[340,74,234,66,"albumId"],[340,81,234,73],[340,82,234,74],[341,6,235,4],[342,6,236,4],[342,19,236,17,"MediaLibrary"],[342,31,236,29],[342,32,236,29,"default"],[342,39,236,29],[342,40,236,30,"addAssetsToAlbumAsync"],[342,61,236,51],[342,62,236,52,"assetIds"],[342,70,236,60],[342,72,236,62,"albumId"],[342,79,236,69],[342,81,236,71],[342,82,236,72],[342,83,236,73,"copy"],[342,87,236,77],[342,88,236,78],[343,4,237,0],[343,5,237,1],[344,4,237,1],[344,11,237,1,"_addAssetsToAlbumAsync"],[344,33,237,1],[344,34,237,1,"apply"],[344,39,237,1],[344,46,237,1,"arguments"],[344,55,237,1],[345,2,237,1],[346,2,237,1],[346,11,248,22,"removeAssetsFromAlbumAsync"],[346,37,248,48,"removeAssetsFromAlbumAsync"],[346,38,248,48,"_x6"],[346,41,248,48],[346,43,248,48,"_x7"],[346,46,248,48],[347,4,248,48],[347,11,248,48,"_removeAssetsFromAlbumAsync"],[347,38,248,48],[347,39,248,48,"apply"],[347,44,248,48],[347,51,248,48,"arguments"],[347,60,248,48],[348,2,248,48],[348,4,257,0],[349,2,258,0],[350,0,259,0],[351,0,260,0],[352,0,261,0],[353,0,262,0],[354,0,263,0],[355,0,264,0],[356,2,258,0],[356,11,258,0,"_removeAssetsFromAlbumAsync"],[356,39,258,0],[357,4,258,0,"_removeAssetsFromAlbumAsync"],[357,31,258,0],[357,38,258,0,"_asyncToGenerator"],[357,55,258,0],[357,56,258,0,"default"],[357,63,258,0],[357,65,248,7],[357,76,248,49,"assets"],[357,82,248,55],[357,84,248,57,"album"],[357,89,248,62],[357,91,248,64],[358,6,249,4],[358,10,249,8],[358,11,249,9,"MediaLibrary"],[358,23,249,21],[358,24,249,21,"default"],[358,31,249,21],[358,32,249,22,"removeAssetsFromAlbumAsync"],[358,58,249,48],[358,60,249,50],[359,8,250,8],[359,14,250,14],[359,18,250,18,"UnavailabilityError"],[359,34,250,37],[359,35,250,37,"UnavailabilityError"],[359,54,250,37],[359,55,250,38],[359,69,250,52],[359,71,250,54],[359,99,250,82],[359,100,250,83],[360,6,251,4],[361,6,252,4],[361,10,252,10,"assetIds"],[361,18,252,18],[361,21,252,21,"arrayize"],[361,29,252,29],[361,30,252,30,"assets"],[361,36,252,36],[361,37,252,37],[361,38,252,38,"map"],[361,41,252,41],[361,42,252,42,"getId"],[361,47,252,47],[361,48,252,48],[362,6,253,4],[362,10,253,10,"albumId"],[362,17,253,17],[362,20,253,20,"getId"],[362,25,253,25],[362,26,253,26,"album"],[362,31,253,31],[362,32,253,32],[363,6,254,4,"checkAssetIds"],[363,19,254,17],[363,20,254,18,"assetIds"],[363,28,254,26],[363,29,254,27],[364,6,255,4],[364,19,255,17,"MediaLibrary"],[364,31,255,29],[364,32,255,29,"default"],[364,39,255,29],[364,40,255,30,"removeAssetsFromAlbumAsync"],[364,66,255,56],[364,67,255,57,"assetIds"],[364,75,255,65],[364,77,255,67,"albumId"],[364,84,255,74],[364,85,255,75],[365,4,256,0],[365,5,256,1],[366,4,256,1],[366,11,256,1,"_removeAssetsFromAlbumAsync"],[366,38,256,1],[366,39,256,1,"apply"],[366,44,256,1],[366,51,256,1,"arguments"],[366,60,256,1],[367,2,256,1],[368,2,256,1],[368,11,265,22,"deleteAssetsAsync"],[368,28,265,39,"deleteAssetsAsync"],[368,29,265,39,"_x8"],[368,32,265,39],[369,4,265,39],[369,11,265,39,"_deleteAssetsAsync"],[369,29,265,39],[369,30,265,39,"apply"],[369,35,265,39],[369,42,265,39,"arguments"],[369,51,265,39],[370,2,265,39],[370,4,273,0],[371,2,274,0],[372,0,275,0],[373,0,276,0],[374,0,277,0],[375,0,278,0],[376,0,279,0],[377,2,274,0],[377,11,274,0,"_deleteAssetsAsync"],[377,30,274,0],[378,4,274,0,"_deleteAssetsAsync"],[378,22,274,0],[378,29,274,0,"_asyncToGenerator"],[378,46,274,0],[378,47,274,0,"default"],[378,54,274,0],[378,56,265,7],[378,67,265,40,"assets"],[378,73,265,46],[378,75,265,48],[379,6,266,4],[379,10,266,8],[379,11,266,9,"MediaLibrary"],[379,23,266,21],[379,24,266,21,"default"],[379,31,266,21],[379,32,266,22,"deleteAssetsAsync"],[379,49,266,39],[379,51,266,41],[380,8,267,8],[380,14,267,14],[380,18,267,18,"UnavailabilityError"],[380,34,267,37],[380,35,267,37,"UnavailabilityError"],[380,54,267,37],[380,55,267,38],[380,69,267,52],[380,71,267,54],[380,90,267,73],[380,91,267,74],[381,6,268,4],[382,6,269,4],[382,10,269,10,"assetIds"],[382,18,269,18],[382,21,269,21,"arrayize"],[382,29,269,29],[382,30,269,30,"assets"],[382,36,269,36],[382,37,269,37],[382,38,269,38,"map"],[382,41,269,41],[382,42,269,42,"getId"],[382,47,269,47],[382,48,269,48],[383,6,270,4,"checkAssetIds"],[383,19,270,17],[383,20,270,18,"assetIds"],[383,28,270,26],[383,29,270,27],[384,6,271,4],[384,19,271,17,"MediaLibrary"],[384,31,271,29],[384,32,271,29,"default"],[384,39,271,29],[384,40,271,30,"deleteAssetsAsync"],[384,57,271,47],[384,58,271,48,"assetIds"],[384,66,271,56],[384,67,271,57],[385,4,272,0],[385,5,272,1],[386,4,272,1],[386,11,272,1,"_deleteAssetsAsync"],[386,29,272,1],[386,30,272,1,"apply"],[386,35,272,1],[386,42,272,1,"arguments"],[386,51,272,1],[387,2,272,1],[388,2,272,1],[388,11,280,22,"getAssetInfoAsync"],[388,28,280,39,"getAssetInfoAsync"],[388,29,280,39,"_x9"],[388,32,280,39],[389,4,280,39],[389,11,280,39,"_getAssetInfoAsync"],[389,29,280,39],[389,30,280,39,"apply"],[389,35,280,39],[389,42,280,39,"arguments"],[389,51,280,39],[390,2,280,39],[390,4,293,0],[391,2,294,0],[392,0,295,0],[393,0,296,0],[394,0,297,0],[395,0,298,0],[396,2,294,0],[396,11,294,0,"_getAssetInfoAsync"],[396,30,294,0],[397,4,294,0,"_getAssetInfoAsync"],[397,22,294,0],[397,29,294,0,"_asyncToGenerator"],[397,46,294,0],[397,47,294,0,"default"],[397,54,294,0],[397,56,280,7],[397,67,280,40,"asset"],[397,72,280,45],[397,74,280,94],[398,6,280,94],[398,10,280,47,"options"],[398,17,280,54],[398,20,280,54,"arguments"],[398,29,280,54],[398,30,280,54,"length"],[398,36,280,54],[398,44,280,54,"arguments"],[398,53,280,54],[398,61,280,54,"undefined"],[398,70,280,54],[398,73,280,54,"arguments"],[398,82,280,54],[398,88,280,57],[399,8,280,59,"shouldDownloadFromNetwork"],[399,33,280,84],[399,35,280,86],[400,6,280,91],[400,7,280,92],[401,6,281,4],[401,10,281,8],[401,11,281,9,"MediaLibrary"],[401,23,281,21],[401,24,281,21,"default"],[401,31,281,21],[401,32,281,22,"getAssetInfoAsync"],[401,49,281,39],[401,51,281,41],[402,8,282,8],[402,14,282,14],[402,18,282,18,"UnavailabilityError"],[402,34,282,37],[402,35,282,37,"UnavailabilityError"],[402,54,282,37],[402,55,282,38],[402,69,282,52],[402,71,282,54],[402,90,282,73],[402,91,282,74],[403,6,283,4],[404,6,284,4],[404,10,284,10,"assetId"],[404,17,284,17],[404,20,284,20,"getId"],[404,25,284,25],[404,26,284,26,"asset"],[404,31,284,31],[404,32,284,32],[405,6,285,4,"checkAssetIds"],[405,19,285,17],[405,20,285,18],[405,21,285,19,"assetId"],[405,28,285,26],[405,29,285,27],[405,30,285,28],[406,6,286,4],[406,10,286,10,"assetInfo"],[406,19,286,19],[406,28,286,28,"MediaLibrary"],[406,40,286,40],[406,41,286,40,"default"],[406,48,286,40],[406,49,286,41,"getAssetInfoAsync"],[406,66,286,58],[406,67,286,59,"assetId"],[406,74,286,66],[406,76,286,68,"options"],[406,83,286,75],[406,84,286,76],[407,6,287,4],[407,10,287,8,"Array"],[407,15,287,13],[407,16,287,14,"isArray"],[407,23,287,21],[407,24,287,22,"assetInfo"],[407,33,287,31],[407,34,287,32],[407,36,287,34],[408,8,288,8],[409,8,289,8],[409,15,289,15,"assetInfo"],[409,24,289,24],[409,25,289,25],[409,26,289,26],[409,27,289,27],[410,6,290,4],[411,6,291,4],[411,13,291,11,"assetInfo"],[411,22,291,20],[412,4,292,0],[412,5,292,1],[413,4,292,1],[413,11,292,1,"_getAssetInfoAsync"],[413,29,292,1],[413,30,292,1,"apply"],[413,35,292,1],[413,42,292,1,"arguments"],[413,51,292,1],[414,2,292,1],[415,2,292,1],[415,11,299,22,"getAlbumsAsync"],[415,25,299,36,"getAlbumsAsync"],[415,26,299,36],[416,4,299,36],[416,11,299,36,"_getAlbumsAsync"],[416,26,299,36],[416,27,299,36,"apply"],[416,32,299,36],[416,39,299,36,"arguments"],[416,48,299,36],[417,2,299,36],[417,4,305,0],[418,2,306,0],[419,0,307,0],[420,0,308,0],[421,0,309,0],[422,0,310,0],[423,0,311,0],[424,2,306,0],[424,11,306,0,"_getAlbumsAsync"],[424,27,306,0],[425,4,306,0,"_getAlbumsAsync"],[425,19,306,0],[425,26,306,0,"_asyncToGenerator"],[425,43,306,0],[425,44,306,0,"default"],[425,51,306,0],[425,53,299,7],[425,66,299,74],[426,6,299,74],[426,10,299,74,"_ref"],[426,14,299,74],[426,17,299,74,"arguments"],[426,26,299,74],[426,27,299,74,"length"],[426,33,299,74],[426,41,299,74,"arguments"],[426,50,299,74],[426,58,299,74,"undefined"],[426,67,299,74],[426,70,299,74,"arguments"],[426,79,299,74],[426,85,299,70],[426,86,299,71],[426,87,299,72],[427,8,299,72,"_ref$includeSmartAlbu"],[427,29,299,72],[427,32,299,72,"_ref"],[427,36,299,72],[427,37,299,39,"includeSmartAlbums"],[427,55,299,57],[428,8,299,39,"includeSmartAlbums"],[428,26,299,57],[428,29,299,57,"_ref$includeSmartAlbu"],[428,50,299,57],[428,64,299,60],[428,69,299,65],[428,72,299,65,"_ref$includeSmartAlbu"],[428,93,299,65],[429,6,300,4],[429,10,300,8],[429,11,300,9,"MediaLibrary"],[429,23,300,21],[429,24,300,21,"default"],[429,31,300,21],[429,32,300,22,"getAlbumsAsync"],[429,46,300,36],[429,48,300,38],[430,8,301,8],[430,14,301,14],[430,18,301,18,"UnavailabilityError"],[430,34,301,37],[430,35,301,37,"UnavailabilityError"],[430,54,301,37],[430,55,301,38],[430,69,301,52],[430,71,301,54],[430,87,301,70],[430,88,301,71],[431,6,302,4],[432,6,303,4],[432,19,303,17,"MediaLibrary"],[432,31,303,29],[432,32,303,29,"default"],[432,39,303,29],[432,40,303,30,"getAlbumsAsync"],[432,54,303,44],[432,55,303,45],[433,8,303,47,"includeSmartAlbums"],[434,6,303,66],[434,7,303,67],[434,8,303,68],[435,4,304,0],[435,5,304,1],[436,4,304,1],[436,11,304,1,"_getAlbumsAsync"],[436,26,304,1],[436,27,304,1,"apply"],[436,32,304,1],[436,39,304,1,"arguments"],[436,48,304,1],[437,2,304,1],[438,2,304,1],[438,11,312,22,"getAlbumAsync"],[438,24,312,35,"getAlbumAsync"],[438,25,312,35,"_x0"],[438,28,312,35],[439,4,312,35],[439,11,312,35,"_getAlbumAsync"],[439,25,312,35],[439,26,312,35,"apply"],[439,31,312,35],[439,38,312,35,"arguments"],[439,47,312,35],[440,2,312,35],[440,4,321,0],[441,2,322,0],[442,0,323,0],[443,0,324,0],[444,0,325,0],[445,0,326,0],[446,0,327,0],[447,0,328,0],[448,0,329,0],[449,0,330,0],[450,0,331,0],[451,0,332,0],[452,0,333,0],[453,0,334,0],[454,0,335,0],[455,0,336,0],[456,2,322,0],[456,11,322,0,"_getAlbumAsync"],[456,26,322,0],[457,4,322,0,"_getAlbumAsync"],[457,18,322,0],[457,25,322,0,"_asyncToGenerator"],[457,42,322,0],[457,43,322,0,"default"],[457,50,322,0],[457,52,312,7],[457,63,312,36,"title"],[457,68,312,41],[457,70,312,43],[458,6,313,4],[458,10,313,8],[458,11,313,9,"MediaLibrary"],[458,23,313,21],[458,24,313,21,"default"],[458,31,313,21],[458,32,313,22,"getAlbumAsync"],[458,45,313,35],[458,47,313,37],[459,8,314,8],[459,14,314,14],[459,18,314,18,"UnavailabilityError"],[459,34,314,37],[459,35,314,37,"UnavailabilityError"],[459,54,314,37],[459,55,314,38],[459,69,314,52],[459,71,314,54],[459,86,314,69],[459,87,314,70],[460,6,315,4],[461,6,316,4],[461,10,316,8],[461,17,316,15,"title"],[461,22,316,20],[461,27,316,25],[461,35,316,33],[461,37,316,35],[462,8,317,8],[462,14,317,14],[462,18,317,18,"Error"],[462,23,317,23],[462,24,317,24],[462,55,317,55],[462,56,317,56],[463,6,318,4],[464,6,319,4],[464,19,319,17,"MediaLibrary"],[464,31,319,29],[464,32,319,29,"default"],[464,39,319,29],[464,40,319,30,"getAlbumAsync"],[464,53,319,43],[464,54,319,44,"title"],[464,59,319,49],[464,60,319,50],[465,4,320,0],[465,5,320,1],[466,4,320,1],[466,11,320,1,"_getAlbumAsync"],[466,25,320,1],[466,26,320,1,"apply"],[466,31,320,1],[466,38,320,1,"arguments"],[466,47,320,1],[467,2,320,1],[468,2,320,1],[468,11,337,22,"createAlbumAsync"],[468,27,337,38,"createAlbumAsync"],[468,28,337,38,"_x1"],[468,31,337,38],[468,33,337,38,"_x10"],[468,37,337,38],[469,4,337,38],[469,11,337,38,"_createAlbumAsync"],[469,28,337,38],[469,29,337,38,"apply"],[469,34,337,38],[469,41,337,38,"arguments"],[469,50,337,38],[470,2,337,38],[470,4,359,0],[471,2,360,0],[472,0,361,0],[473,0,362,0],[474,0,363,0],[475,0,364,0],[476,0,365,0],[477,0,366,0],[478,0,367,0],[479,0,368,0],[480,0,369,0],[481,2,360,0],[481,11,360,0,"_createAlbumAsync"],[481,29,360,0],[482,4,360,0,"_createAlbumAsync"],[482,21,360,0],[482,28,360,0,"_asyncToGenerator"],[482,45,360,0],[482,46,360,0,"default"],[482,53,360,0],[482,55,337,7],[482,66,337,39,"albumName"],[482,75,337,48],[482,77,337,50,"asset"],[482,82,337,55],[482,84,337,97],[483,6,337,97],[483,10,337,57,"copyAsset"],[483,19,337,66],[483,22,337,66,"arguments"],[483,31,337,66],[483,32,337,66,"length"],[483,38,337,66],[483,46,337,66,"arguments"],[483,55,337,66],[483,63,337,66,"undefined"],[483,72,337,66],[483,75,337,66,"arguments"],[483,84,337,66],[483,90,337,69],[483,94,337,73],[484,6,337,73],[484,10,337,75,"initialAssetLocalUri"],[484,30,337,95],[484,33,337,95,"arguments"],[484,42,337,95],[484,43,337,95,"length"],[484,49,337,95],[484,56,337,95,"arguments"],[484,65,337,95],[484,71,337,95,"undefined"],[484,80,337,95],[485,6,338,4],[485,10,338,8],[485,11,338,9,"MediaLibrary"],[485,23,338,21],[485,24,338,21,"default"],[485,31,338,21],[485,32,338,22,"createAlbumAsync"],[485,48,338,38],[485,50,338,40],[486,8,339,8],[486,14,339,14],[486,18,339,18,"UnavailabilityError"],[486,34,339,37],[486,35,339,37,"UnavailabilityError"],[486,54,339,37],[486,55,339,38],[486,69,339,52],[486,71,339,54],[486,89,339,72],[486,90,339,73],[487,6,340,4],[488,6,341,4],[488,10,341,10,"assetId"],[488,17,341,17],[488,20,341,20,"getId"],[488,25,341,25],[488,26,341,26,"asset"],[488,31,341,31],[488,32,341,32],[489,6,342,4],[489,10,342,8,"Platform"],[489,22,342,16],[489,23,342,16,"Platform"],[489,31,342,16],[489,32,342,17,"OS"],[489,34,342,19],[489,39,342,24],[489,48,342,33],[489,53,343,9],[489,60,343,16,"assetId"],[489,67,343,23],[489,72,343,28],[489,80,343,36],[489,84,343,40,"assetId"],[489,91,343,47],[489,92,343,48,"length"],[489,98,343,54],[489,103,343,59],[489,104,343,60],[489,105,343,61],[489,109,344,8],[489,110,344,9,"initialAssetLocalUri"],[489,130,344,29],[489,132,344,31],[490,8,345,8],[491,8,346,8],[491,14,346,14],[491,18,346,18,"Error"],[491,23,346,23],[491,24,346,24],[491,110,346,110],[491,111,346,111],[492,6,347,4],[493,6,348,4],[493,10,348,8],[493,11,348,9,"albumName"],[493,20,348,18],[493,24,348,22],[493,31,348,29,"albumName"],[493,40,348,38],[493,45,348,43],[493,53,348,51],[493,55,348,53],[494,8,349,8],[494,14,349,14],[494,18,349,18,"Error"],[494,23,349,23],[494,24,349,24],[494,76,349,76],[494,77,349,77],[495,6,350,4],[496,6,351,4],[496,10,351,8,"assetId"],[496,17,351,15],[496,21,351,19],[496,25,351,23],[496,29,351,27],[496,36,351,34,"assetId"],[496,43,351,41],[496,48,351,46],[496,56,351,54],[496,58,351,56],[497,8,352,8],[497,14,352,14],[497,18,352,18,"Error"],[497,23,352,23],[497,24,352,24],[497,52,352,52],[497,53,352,53],[498,6,353,4],[499,6,354,4],[499,10,354,8,"Platform"],[499,22,354,16],[499,23,354,16,"Platform"],[499,31,354,16],[499,32,354,17,"OS"],[499,34,354,19],[499,39,354,24],[499,44,354,29],[499,46,354,31],[500,8,355,8],[500,21,355,21,"MediaLibrary"],[500,33,355,33],[500,34,355,33,"default"],[500,41,355,33],[500,42,355,34,"createAlbumAsync"],[500,58,355,50],[500,59,355,51,"albumName"],[500,68,355,60],[500,70,355,62,"assetId"],[500,77,355,69],[500,79,355,71,"initialAssetLocalUri"],[500,99,355,91],[500,100,355,92],[501,6,356,4],[502,6,357,4],[502,19,357,17,"MediaLibrary"],[502,31,357,29],[502,32,357,29,"default"],[502,39,357,29],[502,40,357,30,"createAlbumAsync"],[502,56,357,46],[502,57,357,47,"albumName"],[502,66,357,56],[502,68,357,58,"assetId"],[502,75,357,65],[502,77,357,67],[502,78,357,68],[502,79,357,69,"copyAsset"],[502,88,357,78],[502,90,357,80,"initialAssetLocalUri"],[502,110,357,100],[502,111,357,101],[503,4,358,0],[503,5,358,1],[504,4,358,1],[504,11,358,1,"_createAlbumAsync"],[504,28,358,1],[504,29,358,1,"apply"],[504,34,358,1],[504,41,358,1,"arguments"],[504,50,358,1],[505,2,358,1],[506,2,358,1],[506,11,370,22,"deleteAlbumsAsync"],[506,28,370,39,"deleteAlbumsAsync"],[506,29,370,39,"_x11"],[506,33,370,39],[507,4,370,39],[507,11,370,39,"_deleteAlbumsAsync"],[507,29,370,39],[507,30,370,39,"apply"],[507,35,370,39],[507,42,370,39,"arguments"],[507,51,370,39],[508,2,370,39],[508,4,381,0],[509,2,382,0],[510,0,383,0],[511,0,384,0],[512,0,385,0],[513,0,386,0],[514,2,382,0],[514,11,382,0,"_deleteAlbumsAsync"],[514,30,382,0],[515,4,382,0,"_deleteAlbumsAsync"],[515,22,382,0],[515,29,382,0,"_asyncToGenerator"],[515,46,382,0],[515,47,382,0,"default"],[515,54,382,0],[515,56,370,7],[515,67,370,40,"albums"],[515,73,370,46],[515,75,370,69],[516,6,370,69],[516,10,370,48,"assetRemove"],[516,21,370,59],[516,24,370,59,"arguments"],[516,33,370,59],[516,34,370,59,"length"],[516,40,370,59],[516,48,370,59,"arguments"],[516,57,370,59],[516,65,370,59,"undefined"],[516,74,370,59],[516,77,370,59,"arguments"],[516,86,370,59],[516,92,370,62],[516,97,370,67],[517,6,371,4],[517,10,371,8],[517,11,371,9,"MediaLibrary"],[517,23,371,21],[517,24,371,21,"default"],[517,31,371,21],[517,32,371,22,"deleteAlbumsAsync"],[517,49,371,39],[517,51,371,41],[518,8,372,8],[518,14,372,14],[518,18,372,18,"UnavailabilityError"],[518,34,372,37],[518,35,372,37,"UnavailabilityError"],[518,54,372,37],[518,55,372,38],[518,69,372,52],[518,71,372,54],[518,90,372,73],[518,91,372,74],[519,6,373,4],[520,6,374,4],[520,10,374,10,"albumIds"],[520,18,374,18],[520,21,374,21,"arrayize"],[520,29,374,29],[520,30,374,30,"albums"],[520,36,374,36],[520,37,374,37],[520,38,374,38,"map"],[520,41,374,41],[520,42,374,42,"getId"],[520,47,374,47],[520,48,374,48],[521,6,375,4,"checkAlbumIds"],[521,19,375,17],[521,20,375,18,"albumIds"],[521,28,375,26],[521,29,375,27],[522,6,376,4],[522,10,376,8,"Platform"],[522,22,376,16],[522,23,376,16,"Platform"],[522,31,376,16],[522,32,376,17,"OS"],[522,34,376,19],[522,39,376,24],[522,48,376,33],[522,50,376,35],[523,8,377,8],[523,21,377,21,"MediaLibrary"],[523,33,377,33],[523,34,377,33,"default"],[523,41,377,33],[523,42,377,34,"deleteAlbumsAsync"],[523,59,377,51],[523,60,377,52,"albumIds"],[523,68,377,60],[523,69,377,61],[524,6,378,4],[525,6,379,4],[525,19,379,17,"MediaLibrary"],[525,31,379,29],[525,32,379,29,"default"],[525,39,379,29],[525,40,379,30,"deleteAlbumsAsync"],[525,57,379,47],[525,58,379,48,"albumIds"],[525,66,379,56],[525,68,379,58],[525,69,379,59],[525,70,379,60,"assetRemove"],[525,81,379,71],[525,82,379,72],[526,4,380,0],[526,5,380,1],[527,4,380,1],[527,11,380,1,"_deleteAlbumsAsync"],[527,29,380,1],[527,30,380,1,"apply"],[527,35,380,1],[527,42,380,1,"arguments"],[527,51,380,1],[528,2,380,1],[529,2,380,1],[529,11,387,22,"getAssetsAsync"],[529,25,387,36,"getAssetsAsync"],[529,26,387,36],[530,4,387,36],[530,11,387,36,"_getAssetsAsync"],[530,26,387,36],[530,27,387,36,"apply"],[530,32,387,36],[530,39,387,36,"arguments"],[530,48,387,36],[531,2,387,36],[531,4,425,0],[532,2,426,0],[533,0,427,0],[534,0,428,0],[535,0,429,0],[536,0,430,0],[537,0,431,0],[538,0,432,0],[539,0,433,0],[540,0,434,0],[541,0,435,0],[542,0,436,0],[543,2,426,0],[543,11,426,0,"_getAssetsAsync"],[543,27,426,0],[544,4,426,0,"_getAssetsAsync"],[544,19,426,0],[544,26,426,0,"_asyncToGenerator"],[544,43,426,0],[544,44,426,0,"default"],[544,51,426,0],[544,53,387,7],[544,66,387,57],[545,6,387,57],[545,10,387,37,"assetsOptions"],[545,23,387,50],[545,26,387,50,"arguments"],[545,35,387,50],[545,36,387,50,"length"],[545,42,387,50],[545,50,387,50,"arguments"],[545,59,387,50],[545,67,387,50,"undefined"],[545,76,387,50],[545,79,387,50,"arguments"],[545,88,387,50],[545,94,387,53],[545,95,387,54],[545,96,387,55],[546,6,388,4],[546,10,388,8],[546,11,388,9,"MediaLibrary"],[546,23,388,21],[546,24,388,21,"default"],[546,31,388,21],[546,32,388,22,"getAssetsAsync"],[546,46,388,36],[546,48,388,38],[547,8,389,8],[547,14,389,14],[547,18,389,18,"UnavailabilityError"],[547,34,389,37],[547,35,389,37,"UnavailabilityError"],[547,54,389,37],[547,55,389,38],[547,69,389,52],[547,71,389,54],[547,87,389,70],[547,88,389,71],[548,6,390,4],[549,6,391,4],[549,10,391,12,"first"],[549,15,391,17],[549,18,391,121,"assetsOptions"],[549,31,391,134],[549,32,391,12,"first"],[549,37,391,17],[550,8,391,19,"after"],[550,13,391,24],[550,16,391,121,"assetsOptions"],[550,29,391,134],[550,30,391,19,"after"],[550,35,391,24],[551,8,391,26,"album"],[551,13,391,31],[551,16,391,121,"assetsOptions"],[551,29,391,134],[551,30,391,26,"album"],[551,35,391,31],[552,8,391,33,"sortBy"],[552,14,391,39],[552,17,391,121,"assetsOptions"],[552,30,391,134],[552,31,391,33,"sortBy"],[552,37,391,39],[553,8,391,41,"mediaType"],[553,17,391,50],[553,20,391,121,"assetsOptions"],[553,33,391,134],[553,34,391,41,"mediaType"],[553,43,391,50],[554,8,391,52,"createdAfter"],[554,20,391,64],[554,23,391,121,"assetsOptions"],[554,36,391,134],[554,37,391,52,"createdAfter"],[554,49,391,64],[555,8,391,66,"createdBefore"],[555,21,391,79],[555,24,391,121,"assetsOptions"],[555,37,391,134],[555,38,391,66,"createdBefore"],[555,51,391,79],[556,8,391,81,"mediaSubtypes"],[556,21,391,94],[556,24,391,121,"assetsOptions"],[556,37,391,134],[556,38,391,81,"mediaSubtypes"],[556,51,391,94],[557,8,391,96,"resolveWithFullInfo"],[557,27,391,115],[557,30,391,121,"assetsOptions"],[557,43,391,134],[557,44,391,96,"resolveWithFullInfo"],[557,63,391,115],[558,6,392,4],[558,10,392,10,"options"],[558,17,392,17],[558,20,392,20],[559,8,393,8,"first"],[559,13,393,13],[559,15,393,15,"first"],[559,20,393,20],[559,24,393,24],[559,28,393,28],[559,31,393,31],[559,33,393,33],[559,36,393,36,"first"],[559,41,393,41],[560,8,394,8,"after"],[560,13,394,13],[560,15,394,15,"getId"],[560,20,394,20],[560,21,394,21,"after"],[560,26,394,26],[560,27,394,27],[561,8,395,8,"album"],[561,13,395,13],[561,15,395,15,"getId"],[561,20,395,20],[561,21,395,21,"album"],[561,26,395,26],[561,27,395,27],[562,8,396,8,"sortBy"],[562,14,396,14],[562,16,396,16,"arrayize"],[562,24,396,24],[562,25,396,25,"sortBy"],[562,31,396,31],[562,32,396,32],[563,8,397,8,"mediaType"],[563,17,397,17],[563,19,397,19,"arrayize"],[563,27,397,27],[563,28,397,28,"mediaType"],[563,37,397,37],[563,41,397,41],[563,42,397,42,"MediaType"],[563,51,397,51],[563,52,397,52,"photo"],[563,57,397,57],[563,58,397,58],[563,59,397,59],[564,8,398,8,"mediaSubtypes"],[564,21,398,21],[564,23,398,23,"arrayize"],[564,31,398,31],[564,32,398,32,"mediaSubtypes"],[564,45,398,45],[564,46,398,46],[565,8,399,8,"createdAfter"],[565,20,399,20],[565,22,399,22,"dateToNumber"],[565,34,399,34],[565,35,399,35,"createdAfter"],[565,47,399,47],[565,48,399,48],[566,8,400,8,"createdBefore"],[566,21,400,21],[566,23,400,23,"dateToNumber"],[566,35,400,35],[566,36,400,36,"createdBefore"],[566,49,400,49],[566,50,400,50],[567,8,401,8,"resolveWithFullInfo"],[567,27,401,27],[567,29,401,29,"resolveWithFullInfo"],[567,48,401,48],[567,52,401,52],[568,6,402,4],[568,7,402,5],[569,6,403,4],[569,10,403,8,"first"],[569,15,403,13],[569,19,403,17],[569,23,403,21],[569,27,403,25],[569,34,403,32,"options"],[569,41,403,39],[569,42,403,40,"first"],[569,47,403,45],[569,52,403,50],[569,60,403,58],[569,62,403,60],[570,8,404,8],[570,14,404,14],[570,18,404,18,"Error"],[570,23,404,23],[570,24,404,24],[570,58,404,58],[570,59,404,59],[571,6,405,4],[572,6,406,4],[572,10,406,8,"after"],[572,15,406,13],[572,19,406,17],[572,23,406,21],[572,27,406,25],[572,34,406,32,"options"],[572,41,406,39],[572,42,406,40,"after"],[572,47,406,45],[572,52,406,50],[572,60,406,58],[572,62,406,60],[573,8,407,8],[573,14,407,14],[573,18,407,18,"Error"],[573,23,407,23],[573,24,407,24],[573,58,407,58],[573,59,407,59],[574,6,408,4],[575,6,409,4],[575,10,409,8,"album"],[575,15,409,13],[575,19,409,17],[575,23,409,21],[575,27,409,25],[575,34,409,32,"options"],[575,41,409,39],[575,42,409,40,"album"],[575,47,409,45],[575,52,409,50],[575,60,409,58],[575,62,409,60],[576,8,410,8],[576,14,410,14],[576,18,410,18,"Error"],[576,23,410,23],[576,24,410,24],[576,58,410,58],[576,59,410,59],[577,6,411,4],[578,6,412,4],[578,10,412,8,"after"],[578,15,412,13],[578,19,412,17],[578,23,412,21],[578,27,412,25,"Platform"],[578,39,412,33],[578,40,412,33,"Platform"],[578,48,412,33],[578,49,412,34,"OS"],[578,51,412,36],[578,56,412,41],[578,65,412,50],[578,69,412,54,"isNaN"],[578,74,412,59],[578,75,412,60,"parseInt"],[578,83,412,68],[578,84,412,69,"getId"],[578,89,412,74],[578,90,412,75,"after"],[578,95,412,80],[578,96,412,81],[578,98,412,83],[578,100,412,85],[578,101,412,86],[578,102,412,87],[578,104,412,89],[579,8,413,8],[579,14,413,14],[579,18,413,18,"Error"],[579,23,413,23],[579,24,413,24],[579,60,413,60],[579,61,413,61],[580,6,414,4],[581,6,415,4],[581,10,415,8,"first"],[581,15,415,13],[581,19,415,17],[581,23,415,21],[581,27,415,25,"first"],[581,32,415,30],[581,35,415,33],[581,36,415,34],[581,38,415,36],[582,8,416,8],[582,14,416,14],[582,18,416,18,"Error"],[582,23,416,23],[582,24,416,24],[582,68,416,68],[582,69,416,69],[583,6,417,4],[584,6,418,4,"options"],[584,13,418,11],[584,14,418,12,"mediaType"],[584,23,418,21],[584,24,418,22,"forEach"],[584,31,418,29],[584,32,418,30,"checkMediaType"],[584,46,418,44],[584,47,418,45],[585,6,419,4],[586,6,420,4],[586,19,420,17,"MediaLibrary"],[586,31,420,29],[586,32,420,29,"default"],[586,39,420,29],[586,40,420,30,"getAssetsAsync"],[586,54,420,44],[586,55,420,45],[587,8,421,8],[587,11,421,11,"options"],[587,18,421,18],[588,8,422,8,"sortBy"],[588,14,422,14],[588,16,422,16,"options"],[588,23,422,23],[588,24,422,24,"sortBy"],[588,30,422,30],[588,31,422,31,"map"],[588,34,422,34],[588,35,422,35,"sortByOptionToString"],[588,55,422,55],[589,6,423,4],[589,7,423,5],[589,8,423,6],[590,4,424,0],[590,5,424,1],[591,4,424,1],[591,11,424,1,"_getAssetsAsync"],[591,26,424,1],[591,27,424,1,"apply"],[591,32,424,1],[591,39,424,1,"arguments"],[591,48,424,1],[592,2,424,1],[593,2,437,7],[593,11,437,16,"addListener"],[593,22,437,27,"addListener"],[593,23,437,28,"listener"],[593,31,437,36],[593,33,437,38],[594,4,438,4],[594,11,438,11,"MediaLibrary"],[594,23,438,23],[594,24,438,23,"default"],[594,31,438,23],[594,32,438,24,"addListener"],[594,43,438,35],[594,44,438,36,"MediaLibrary"],[594,56,438,48],[594,57,438,48,"default"],[594,64,438,48],[594,65,438,49,"CHANGE_LISTENER_NAME"],[594,85,438,69],[594,87,438,71,"listener"],[594,95,438,79],[594,96,438,80],[595,2,439,0],[596,2,440,0],[597,2,441,7],[597,11,441,16,"removeSubscription"],[597,29,441,34,"removeSubscription"],[597,30,441,35,"subscription"],[597,42,441,47],[597,44,441,49],[598,4,442,4,"subscription"],[598,16,442,16],[598,17,442,17,"remove"],[598,23,442,23],[598,24,442,24],[598,25,442,25],[599,2,443,0],[600,2,444,0],[601,2,445,0],[602,0,446,0],[603,0,447,0],[604,2,448,7],[604,11,448,16,"removeAllListeners"],[604,29,448,34,"removeAllListeners"],[604,30,448,34],[604,32,448,37],[605,4,449,4,"MediaLibrary"],[605,16,449,16],[605,17,449,16,"default"],[605,24,449,16],[605,25,449,17,"removeAllListeners"],[605,43,449,35],[605,44,449,36,"MediaLibrary"],[605,56,449,48],[605,57,449,48,"default"],[605,64,449,48],[605,65,449,49,"CHANGE_LISTENER_NAME"],[605,85,449,69],[605,86,449,70],[606,2,450,0],[607,2,451,0],[608,2,452,0],[609,0,453,0],[610,0,454,0],[611,0,455,0],[612,0,456,0],[613,0,457,0],[614,2,452,0],[614,11,458,22,"getMomentsAsync"],[614,26,458,37,"getMomentsAsync"],[614,27,458,37],[615,4,458,37],[615,11,458,37,"_getMomentsAsync"],[615,27,458,37],[615,28,458,37,"apply"],[615,33,458,37],[615,40,458,37,"arguments"],[615,49,458,37],[616,2,458,37],[616,4,464,0],[617,2,465,0],[618,0,466,0],[619,0,467,0],[620,0,468,0],[621,0,469,0],[622,0,470,0],[623,0,471,0],[624,0,472,0],[625,0,473,0],[626,0,474,0],[627,0,475,0],[628,0,476,0],[629,0,477,0],[630,0,478,0],[631,0,479,0],[632,0,480,0],[633,0,481,0],[634,0,482,0],[635,0,483,0],[636,0,484,0],[637,0,485,0],[638,0,486,0],[639,0,487,0],[640,0,488,0],[641,0,489,0],[642,2,465,0],[642,11,465,0,"_getMomentsAsync"],[642,28,465,0],[643,4,465,0,"_getMomentsAsync"],[643,20,465,0],[643,27,465,0,"_asyncToGenerator"],[643,44,465,0],[643,45,465,0,"default"],[643,52,465,0],[643,54,458,7],[643,67,458,40],[644,6,459,4],[644,10,459,8],[644,11,459,9,"MediaLibrary"],[644,23,459,21],[644,24,459,21,"default"],[644,31,459,21],[644,32,459,22,"getMomentsAsync"],[644,47,459,37],[644,49,459,39],[645,8,460,8],[645,14,460,14],[645,18,460,18,"UnavailabilityError"],[645,34,460,37],[645,35,460,37,"UnavailabilityError"],[645,54,460,37],[645,55,460,38],[645,69,460,52],[645,71,460,54],[645,88,460,71],[645,89,460,72],[646,6,461,4],[647,6,462,4],[647,19,462,17,"MediaLibrary"],[647,31,462,29],[647,32,462,29,"default"],[647,39,462,29],[647,40,462,30,"getMomentsAsync"],[647,55,462,45],[647,56,462,46],[647,57,462,47],[648,4,463,0],[648,5,463,1],[649,4,463,1],[649,11,463,1,"_getMomentsAsync"],[649,27,463,1],[649,28,463,1,"apply"],[649,33,463,1],[649,40,463,1,"arguments"],[649,49,463,1],[650,2,463,1],[651,2,463,1],[651,11,490,22,"migrateAlbumIfNeededAsync"],[651,36,490,47,"migrateAlbumIfNeededAsync"],[651,37,490,47,"_x12"],[651,41,490,47],[652,4,490,47],[652,11,490,47,"_migrateAlbumIfNeededAsync"],[652,37,490,47],[652,38,490,47,"apply"],[652,43,490,47],[652,50,490,47,"arguments"],[652,59,490,47],[653,2,490,47],[653,4,496,0],[654,2,497,0],[655,0,498,0],[656,0,499,0],[657,0,500,0],[658,0,501,0],[659,0,502,0],[660,0,503,0],[661,2,497,0],[661,11,497,0,"_migrateAlbumIfNeededAsync"],[661,38,497,0],[662,4,497,0,"_migrateAlbumIfNeededAsync"],[662,30,497,0],[662,37,497,0,"_asyncToGenerator"],[662,54,497,0],[662,55,497,0,"default"],[662,62,497,0],[662,64,490,7],[662,75,490,48,"album"],[662,80,490,53],[662,82,490,55],[663,6,491,4],[663,10,491,8],[663,11,491,9,"MediaLibrary"],[663,23,491,21],[663,24,491,21,"default"],[663,31,491,21],[663,32,491,22,"migrateAlbumIfNeededAsync"],[663,57,491,47],[663,59,491,49],[664,8,492,8],[665,6,493,4],[666,6,494,4],[666,19,494,17,"MediaLibrary"],[666,31,494,29],[666,32,494,29,"default"],[666,39,494,29],[666,40,494,30,"migrateAlbumIfNeededAsync"],[666,65,494,55],[666,66,494,56,"getId"],[666,71,494,61],[666,72,494,62,"album"],[666,77,494,67],[666,78,494,68],[666,79,494,69],[667,4,495,0],[667,5,495,1],[668,4,495,1],[668,11,495,1,"_migrateAlbumIfNeededAsync"],[668,37,495,1],[668,38,495,1,"apply"],[668,43,495,1],[668,50,495,1,"arguments"],[668,59,495,1],[669,2,495,1],[670,2,495,1],[670,11,504,22,"albumNeedsMigrationAsync"],[670,35,504,46,"albumNeedsMigrationAsync"],[670,36,504,46,"_x13"],[670,40,504,46],[671,4,504,46],[671,11,504,46,"_albumNeedsMigrationAsync"],[671,36,504,46],[671,37,504,46,"apply"],[671,42,504,46],[671,49,504,46,"arguments"],[671,58,504,46],[672,2,504,46],[673,2,504,46],[673,11,504,46,"_albumNeedsMigrationAsync"],[673,37,504,46],[674,4,504,46,"_albumNeedsMigrationAsync"],[674,29,504,46],[674,36,504,46,"_asyncToGenerator"],[674,53,504,46],[674,54,504,46,"default"],[674,61,504,46],[674,63,504,7],[674,74,504,47,"album"],[674,79,504,52],[674,81,504,54],[675,6,505,4],[675,10,505,8],[675,11,505,9,"MediaLibrary"],[675,23,505,21],[675,24,505,21,"default"],[675,31,505,21],[675,32,505,22,"albumNeedsMigrationAsync"],[675,56,505,46],[675,58,505,48],[676,8,506,8],[676,15,506,15],[676,20,506,20],[677,6,507,4],[678,6,508,4],[678,19,508,17,"MediaLibrary"],[678,31,508,29],[678,32,508,29,"default"],[678,39,508,29],[678,40,508,30,"albumNeedsMigrationAsync"],[678,64,508,54],[678,65,508,55,"getId"],[678,70,508,60],[678,71,508,61,"album"],[678,76,508,66],[678,77,508,67],[678,78,508,68],[679,4,509,0],[679,5,509,1],[680,4,509,1],[680,11,509,1,"_albumNeedsMigrationAsync"],[680,36,509,1],[680,37,509,1,"apply"],[680,42,509,1],[680,49,509,1,"arguments"],[680,58,509,1],[681,2,509,1],[682,0,509,1],[682,3]],"functionMap":{"names":["<global>","arrayize","getId","checkAssetIds","assetIds.some$argument_0","checkAlbumIds","albumIds.some$argument_0","checkMediaType","checkSortBy","checkSortByKey","sortByOptionToString","dateToNumber","isAvailableAsync","requestPermissionsAsync","getPermissionsAsync","createPermissionHook$argument_0.getMethod","createPermissionHook$argument_0.requestMethod","presentPermissionsPickerAsync","createAssetAsync","saveToLibraryAsync","addAssetsToAlbumAsync","removeAssetsFromAlbumAsync","deleteAssetsAsync","getAssetInfoAsync","getAlbumsAsync","getAlbumAsync","createAlbumAsync","deleteAlbumsAsync","getAssetsAsync","addListener","removeSubscription","removeAllListeners","getMomentsAsync","migrateAlbumIfNeededAsync","albumNeedsMigrationAsync"],"mappings":"AAA;ACU;CDK;AEC;CFK;AGC;sBCC,qCD;CHG;AKC;sBCC,qCD;CLG;AOC;CPI;AQC;CRU;ASC;CTI;AUC;CVM;AWC;CXE;OYiB;CZE;OaW;CbQ;OcS;CdQ;eea,kFf;mBgBC,sFhB;OiBiB;CjBY;OkBkB;ClBc;OmBU;CnBK;OoBe;CpBc;OqBW;CrBQ;OsBS;CtBO;OuBQ;CvBY;OwBO;CxBK;OyBQ;CzBQ;O0BiB;C1BqB;O2BY;C3BU;O4BO;C5BqC;O6Ba;C7BE;O8BE;C9BE;O+BK;C/BE;OgCQ;ChCK;OiC2B;CjCK;OkCS;ClCK"},"hasCjsExports":false},"type":"js/module"}]}