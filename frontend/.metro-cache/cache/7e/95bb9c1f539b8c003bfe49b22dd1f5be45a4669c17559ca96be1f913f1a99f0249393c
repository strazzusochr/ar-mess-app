{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":89},"end":{"line":5,"column":45,"index":134}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"userMediaRequested\", {\n    enumerable: true,\n    get: function () {\n      return userMediaRequested;\n    }\n  });\n  Object.defineProperty(exports, \"mountedInstances\", {\n    enumerable: true,\n    get: function () {\n      return mountedInstances;\n    }\n  });\n  exports.requestUserMediaAsync = requestUserMediaAsync;\n  exports.getAnyUserMediaAsync = getAnyUserMediaAsync;\n  exports.getUserMediaAsync = getUserMediaAsync;\n  exports.canGetUserMedia = canGetUserMedia;\n  exports.isFrontCameraAvailableAsync = isFrontCameraAvailableAsync;\n  exports.isBackCameraAvailableAsync = isBackCameraAvailableAsync;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  /* eslint-env browser */\n  /**\n   * A web-only module for ponyfilling the UserMedia API.\n   */\n\n  const userMediaRequested = false;\n  const mountedInstances = [];\n  async function requestLegacyUserMediaAsync(\n  // TODO(@kitten): Type this properly\n  props) {\n    // TODO(@kitten): This is never type checked against DOM types\n    const optionalSource = id => ({\n      optional: [{\n        sourceId: id\n      }]\n    });\n    const constraintToSourceId = constraint => {\n      const {\n        deviceId\n      } = constraint;\n      if (typeof deviceId === 'string') {\n        return deviceId;\n      }\n      if (Array.isArray(deviceId)) {\n        return deviceId[0] ?? null;\n      } else if (typeof deviceId === 'object' && deviceId.ideal) {\n        return deviceId.ideal;\n      }\n      return null;\n    };\n    const sources = await new Promise(resolve =>\n    // @ts-ignore: https://caniuse.com/#search=getSources Chrome for Android (78) & Samsung Internet (10.1) use this\n    MediaStreamTrack.getSources(sources => resolve(sources)));\n    let audioSource = null;\n    let videoSource = null;\n    sources.forEach(source => {\n      if (source.kind === 'audio') {\n        audioSource = source.id;\n      } else if (source.kind === 'video') {\n        videoSource = source.id;\n      }\n    });\n    // NOTE(@kitten): This doesn't seem right. The types that should be used here don't contain `audioConstraints`\n    // If this is legacy, the type shouldn't have been dropped but marked as `@deprecated`. Alternatively, remove this code path\n    const audioSourceId = constraintToSourceId(props.audioConstraints);\n    if (audioSourceId) {\n      audioSource = audioSourceId;\n    }\n    // NOTE(@kitten): This doesn't seem right. The types that should be used here don't contain `videoConstraints`\n    // If this is legacy, the type shouldn't have been dropped but marked as `@deprecated`. Alternatively, remove this code path\n    const videoSourceId = constraintToSourceId(props.videoConstraints);\n    if (videoSourceId) {\n      videoSource = videoSourceId;\n    }\n    return [optionalSource(audioSource), optionalSource(videoSource)];\n  }\n  async function sourceSelectedAsync(isMuted, audioConstraints, videoConstraints) {\n    const constraints = {\n      video: typeof videoConstraints !== 'undefined' ? videoConstraints : true\n    };\n    if (!isMuted) {\n      constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n    }\n    return await getAnyUserMediaAsync(constraints);\n  }\n  async function requestUserMediaAsync(\n  // TODO(@kitten): Type this properly\n  props, isMuted = true) {\n    if (canGetUserMedia()) {\n      return await sourceSelectedAsync(isMuted, props.audio, props.video);\n    }\n    // NOTE(@kitten): This doesn't seem right. The types that should be used here don't contain `videoConstraints`\n    // If this is legacy, the type shouldn't have been dropped but marked as `@deprecated`. Alternatively, remove this code path\n    const [audio, video] = await requestLegacyUserMediaAsync(props);\n    return await sourceSelectedAsync(isMuted, audio, video);\n  }\n  async function getAnyUserMediaAsync(constraints, ignoreConstraints = false) {\n    try {\n      return await getUserMediaAsync({\n        ...constraints,\n        video: ignoreConstraints || constraints.video\n      });\n    } catch (error) {\n      if (!ignoreConstraints && typeof error === 'object' && error?.name === 'ConstraintNotSatisfiedError') {\n        return await getAnyUserMediaAsync(constraints, true);\n      }\n      throw error;\n    }\n  }\n  async function getUserMediaAsync(constraints) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia(constraints);\n    }\n    const _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] ||\n    // @ts-expect-error: TODO(@kitten): Remove / Drop IE support\n    navigator['msGetUserMedia'];\n    return new Promise((resolve, reject) => _getUserMedia.call(navigator, constraints, resolve, reject));\n  }\n  function canGetUserMedia() {\n    // TODO(@kitten): This is misaligned with the implementations in `expo-audio/src/AudioModule.web.ts` and `expo-av`\n    return (\n      // SSR\n      _expoModulesCore.Platform.isDOMAvailable &&\n      // Has any form of media API\n      !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia || navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] ||\n      // @ts-expect-error: TODO(@kitten): Remove / Drop IE support\n      navigator['msGetUserMedia'])\n    );\n  }\n  async function isFrontCameraAvailableAsync(devices) {\n    return await supportsCameraType(['front', 'user', 'facetime'], 'user', devices);\n  }\n  async function isBackCameraAvailableAsync(devices) {\n    return await supportsCameraType(['back', 'rear'], 'environment', devices);\n  }\n  async function supportsCameraType(labels, type, devices) {\n    if (!devices) {\n      if (!navigator.mediaDevices.enumerateDevices) {\n        return null;\n      }\n      devices = await navigator.mediaDevices.enumerateDevices();\n    }\n    const cameras = devices.filter(t => t.kind === 'videoinput');\n    const [hasCamera] = cameras.filter(camera => labels.some(label => camera.label.toLowerCase().includes(label)));\n    const [isCapable] = cameras.filter(camera => {\n      if (!('getCapabilities' in camera)) {\n        return null;\n      }\n      const capabilities = camera.getCapabilities();\n      if (!capabilities.facingMode) {\n        return null;\n      }\n      return capabilities.facingMode.find(_ => type);\n    });\n    return isCapable?.deviceId || hasCamera?.deviceId || null;\n  }\n});","lineCount":162,"map":[[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"userMediaRequested"],[10,31,6,0],[11,4,6,0],[12,2,6,0],[13,2,7,0,"Object"],[13,8,7,0],[13,9,7,0,"defineProperty"],[13,23,7,0],[13,24,7,0,"exports"],[13,31,7,0],[14,4,7,0,"enumerable"],[14,14,7,0],[15,4,7,0,"get"],[15,7,7,0],[15,18,7,0,"get"],[15,19,7,0],[16,6,7,0],[16,13,7,0,"mountedInstances"],[16,29,7,0],[17,4,7,0],[18,2,7,0],[19,2,62,0,"exports"],[19,9,62,0],[19,10,62,0,"requestUserMediaAsync"],[19,31,62,0],[19,34,62,0,"requestUserMediaAsync"],[19,55,62,0],[20,2,73,0,"exports"],[20,9,73,0],[20,10,73,0,"getAnyUserMediaAsync"],[20,30,73,0],[20,33,73,0,"getAnyUserMediaAsync"],[20,53,73,0],[21,2,89,0,"exports"],[21,9,89,0],[21,10,89,0,"getUserMediaAsync"],[21,27,89,0],[21,30,89,0,"getUserMediaAsync"],[21,47,89,0],[22,2,99,0,"exports"],[22,9,99,0],[22,10,99,0,"canGetUserMedia"],[22,25,99,0],[22,28,99,0,"canGetUserMedia"],[22,43,99,0],[23,2,111,0,"exports"],[23,9,111,0],[23,10,111,0,"isFrontCameraAvailableAsync"],[23,37,111,0],[23,40,111,0,"isFrontCameraAvailableAsync"],[23,67,111,0],[24,2,114,0,"exports"],[24,9,114,0],[24,10,114,0,"isBackCameraAvailableAsync"],[24,36,114,0],[24,39,114,0,"isBackCameraAvailableAsync"],[24,65,114,0],[25,2,5,0],[25,6,5,0,"_expoModulesCore"],[25,22,5,0],[25,25,5,0,"require"],[25,32,5,0],[25,33,5,0,"_dependencyMap"],[25,47,5,0],[26,2,1,0],[27,2,2,0],[28,0,3,0],[29,0,4,0],[31,2,6,7],[31,8,6,13,"userMediaRequested"],[31,26,6,31],[31,29,6,34],[31,34,6,39],[32,2,7,7],[32,8,7,13,"mountedInstances"],[32,24,7,29],[32,27,7,32],[32,29,7,34],[33,2,8,0],[33,17,8,15,"requestLegacyUserMediaAsync"],[33,44,8,42,"requestLegacyUserMediaAsync"],[34,2,9,0],[35,2,10,0,"props"],[35,7,10,5],[35,9,10,7],[36,4,11,4],[37,4,12,4],[37,10,12,10,"optionalSource"],[37,24,12,24],[37,27,12,28,"id"],[37,29,12,30],[37,34,12,36],[38,6,12,38,"optional"],[38,14,12,46],[38,16,12,48],[38,17,12,49],[39,8,12,51,"sourceId"],[39,16,12,59],[39,18,12,61,"id"],[40,6,12,64],[40,7,12,65],[41,4,12,67],[41,5,12,68],[41,6,12,69],[42,4,13,4],[42,10,13,10,"constraintToSourceId"],[42,30,13,30],[42,33,13,34,"constraint"],[42,43,13,44],[42,47,13,49],[43,6,14,8],[43,12,14,14],[44,8,14,16,"deviceId"],[45,6,14,25],[45,7,14,26],[45,10,14,29,"constraint"],[45,20,14,39],[46,6,15,8],[46,10,15,12],[46,17,15,19,"deviceId"],[46,25,15,27],[46,30,15,32],[46,38,15,40],[46,40,15,42],[47,8,16,12],[47,15,16,19,"deviceId"],[47,23,16,27],[48,6,17,8],[49,6,18,8],[49,10,18,12,"Array"],[49,15,18,17],[49,16,18,18,"isArray"],[49,23,18,25],[49,24,18,26,"deviceId"],[49,32,18,34],[49,33,18,35],[49,35,18,37],[50,8,19,12],[50,15,19,19,"deviceId"],[50,23,19,27],[50,24,19,28],[50,25,19,29],[50,26,19,30],[50,30,19,34],[50,34,19,38],[51,6,20,8],[51,7,20,9],[51,13,21,13],[51,17,21,17],[51,24,21,24,"deviceId"],[51,32,21,32],[51,37,21,37],[51,45,21,45],[51,49,21,49,"deviceId"],[51,57,21,57],[51,58,21,58,"ideal"],[51,63,21,63],[51,65,21,65],[52,8,22,12],[52,15,22,19,"deviceId"],[52,23,22,27],[52,24,22,28,"ideal"],[52,29,22,33],[53,6,23,8],[54,6,24,8],[54,13,24,15],[54,17,24,19],[55,4,25,4],[55,5,25,5],[56,4,26,4],[56,10,26,10,"sources"],[56,17,26,17],[56,20,26,20],[56,26,26,26],[56,30,26,30,"Promise"],[56,37,26,37],[56,38,26,39,"resolve"],[56,45,26,46],[57,4,27,4],[58,4,28,4,"MediaStreamTrack"],[58,20,28,20],[58,21,28,21,"getSources"],[58,31,28,31],[58,32,28,33,"sources"],[58,39,28,40],[58,43,28,45,"resolve"],[58,50,28,52],[58,51,28,53,"sources"],[58,58,28,60],[58,59,28,61],[58,60,28,62],[58,61,28,63],[59,4,29,4],[59,8,29,8,"audioSource"],[59,19,29,19],[59,22,29,22],[59,26,29,26],[60,4,30,4],[60,8,30,8,"videoSource"],[60,19,30,19],[60,22,30,22],[60,26,30,26],[61,4,31,4,"sources"],[61,11,31,11],[61,12,31,12,"forEach"],[61,19,31,19],[61,20,31,21,"source"],[61,26,31,27],[61,30,31,32],[62,6,32,8],[62,10,32,12,"source"],[62,16,32,18],[62,17,32,19,"kind"],[62,21,32,23],[62,26,32,28],[62,33,32,35],[62,35,32,37],[63,8,33,12,"audioSource"],[63,19,33,23],[63,22,33,26,"source"],[63,28,33,32],[63,29,33,33,"id"],[63,31,33,35],[64,6,34,8],[64,7,34,9],[64,13,35,13],[64,17,35,17,"source"],[64,23,35,23],[64,24,35,24,"kind"],[64,28,35,28],[64,33,35,33],[64,40,35,40],[64,42,35,42],[65,8,36,12,"videoSource"],[65,19,36,23],[65,22,36,26,"source"],[65,28,36,32],[65,29,36,33,"id"],[65,31,36,35],[66,6,37,8],[67,4,38,4],[67,5,38,5],[67,6,38,6],[68,4,39,4],[69,4,40,4],[70,4,41,4],[70,10,41,10,"audioSourceId"],[70,23,41,23],[70,26,41,26,"constraintToSourceId"],[70,46,41,46],[70,47,41,47,"props"],[70,52,41,52],[70,53,41,53,"audioConstraints"],[70,69,41,69],[70,70,41,70],[71,4,42,4],[71,8,42,8,"audioSourceId"],[71,21,42,21],[71,23,42,23],[72,6,43,8,"audioSource"],[72,17,43,19],[72,20,43,22,"audioSourceId"],[72,33,43,35],[73,4,44,4],[74,4,45,4],[75,4,46,4],[76,4,47,4],[76,10,47,10,"videoSourceId"],[76,23,47,23],[76,26,47,26,"constraintToSourceId"],[76,46,47,46],[76,47,47,47,"props"],[76,52,47,52],[76,53,47,53,"videoConstraints"],[76,69,47,69],[76,70,47,70],[77,4,48,4],[77,8,48,8,"videoSourceId"],[77,21,48,21],[77,23,48,23],[78,6,49,8,"videoSource"],[78,17,49,19],[78,20,49,22,"videoSourceId"],[78,33,49,35],[79,4,50,4],[80,4,51,4],[80,11,51,11],[80,12,51,12,"optionalSource"],[80,26,51,26],[80,27,51,27,"audioSource"],[80,38,51,38],[80,39,51,39],[80,41,51,41,"optionalSource"],[80,55,51,55],[80,56,51,56,"videoSource"],[80,67,51,67],[80,68,51,68],[80,69,51,69],[81,2,52,0],[82,2,53,0],[82,17,53,15,"sourceSelectedAsync"],[82,36,53,34,"sourceSelectedAsync"],[82,37,53,35,"isMuted"],[82,44,53,42],[82,46,53,44,"audioConstraints"],[82,62,53,60],[82,64,53,62,"videoConstraints"],[82,80,53,78],[82,82,53,80],[83,4,54,4],[83,10,54,10,"constraints"],[83,21,54,21],[83,24,54,24],[84,6,55,8,"video"],[84,11,55,13],[84,13,55,15],[84,20,55,22,"videoConstraints"],[84,36,55,38],[84,41,55,43],[84,52,55,54],[84,55,55,57,"videoConstraints"],[84,71,55,73],[84,74,55,76],[85,4,56,4],[85,5,56,5],[86,4,57,4],[86,8,57,8],[86,9,57,9,"isMuted"],[86,16,57,16],[86,18,57,18],[87,6,58,8,"constraints"],[87,17,58,19],[87,18,58,20,"audio"],[87,23,58,25],[87,26,58,28],[87,33,58,35,"audioConstraints"],[87,49,58,51],[87,54,58,56],[87,65,58,67],[87,68,58,70,"audioConstraints"],[87,84,58,86],[87,87,58,89],[87,91,58,93],[88,4,59,4],[89,4,60,4],[89,11,60,11],[89,17,60,17,"getAnyUserMediaAsync"],[89,37,60,37],[89,38,60,38,"constraints"],[89,49,60,49],[89,50,60,50],[90,2,61,0],[91,2,62,7],[91,17,62,22,"requestUserMediaAsync"],[91,38,62,43,"requestUserMediaAsync"],[92,2,63,0],[93,2,64,0,"props"],[93,7,64,5],[93,9,64,7,"isMuted"],[93,16,64,14],[93,19,64,17],[93,23,64,21],[93,25,64,23],[94,4,65,4],[94,8,65,8,"canGetUserMedia"],[94,23,65,23],[94,24,65,24],[94,25,65,25],[94,27,65,27],[95,6,66,8],[95,13,66,15],[95,19,66,21,"sourceSelectedAsync"],[95,38,66,40],[95,39,66,41,"isMuted"],[95,46,66,48],[95,48,66,50,"props"],[95,53,66,55],[95,54,66,56,"audio"],[95,59,66,61],[95,61,66,63,"props"],[95,66,66,68],[95,67,66,69,"video"],[95,72,66,74],[95,73,66,75],[96,4,67,4],[97,4,68,4],[98,4,69,4],[99,4,70,4],[99,10,70,10],[99,11,70,11,"audio"],[99,16,70,16],[99,18,70,18,"video"],[99,23,70,23],[99,24,70,24],[99,27,70,27],[99,33,70,33,"requestLegacyUserMediaAsync"],[99,60,70,60],[99,61,70,61,"props"],[99,66,70,66],[99,67,70,67],[100,4,71,4],[100,11,71,11],[100,17,71,17,"sourceSelectedAsync"],[100,36,71,36],[100,37,71,37,"isMuted"],[100,44,71,44],[100,46,71,46,"audio"],[100,51,71,51],[100,53,71,53,"video"],[100,58,71,58],[100,59,71,59],[101,2,72,0],[102,2,73,7],[102,17,73,22,"getAnyUserMediaAsync"],[102,37,73,42,"getAnyUserMediaAsync"],[102,38,73,43,"constraints"],[102,49,73,54],[102,51,73,56,"ignoreConstraints"],[102,68,73,73],[102,71,73,76],[102,76,73,81],[102,78,73,83],[103,4,74,4],[103,8,74,8],[104,6,75,8],[104,13,75,15],[104,19,75,21,"getUserMediaAsync"],[104,36,75,38],[104,37,75,39],[105,8,76,12],[105,11,76,15,"constraints"],[105,22,76,26],[106,8,77,12,"video"],[106,13,77,17],[106,15,77,19,"ignoreConstraints"],[106,32,77,36],[106,36,77,40,"constraints"],[106,47,77,51],[106,48,77,52,"video"],[107,6,78,8],[107,7,78,9],[107,8,78,10],[108,4,79,4],[108,5,79,5],[108,6,80,4],[108,13,80,11,"error"],[108,18,80,16],[108,20,80,18],[109,6,81,8],[109,10,81,12],[109,11,81,13,"ignoreConstraints"],[109,28,81,30],[109,32,82,12],[109,39,82,19,"error"],[109,44,82,24],[109,49,82,29],[109,57,82,37],[109,61,83,12,"error"],[109,66,83,17],[109,68,83,19,"name"],[109,72,83,23],[109,77,83,28],[109,106,83,57],[109,108,83,59],[110,8,84,12],[110,15,84,19],[110,21,84,25,"getAnyUserMediaAsync"],[110,41,84,45],[110,42,84,46,"constraints"],[110,53,84,57],[110,55,84,59],[110,59,84,63],[110,60,84,64],[111,6,85,8],[112,6,86,8],[112,12,86,14,"error"],[112,17,86,19],[113,4,87,4],[114,2,88,0],[115,2,89,7],[115,17,89,22,"getUserMediaAsync"],[115,34,89,39,"getUserMediaAsync"],[115,35,89,40,"constraints"],[115,46,89,51],[115,48,89,53],[116,4,90,4],[116,8,90,8,"navigator"],[116,17,90,17],[116,18,90,18,"mediaDevices"],[116,30,90,30],[116,34,90,34,"navigator"],[116,43,90,43],[116,44,90,44,"mediaDevices"],[116,56,90,56],[116,57,90,57,"getUserMedia"],[116,69,90,69],[116,71,90,71],[117,6,91,8],[117,13,91,15,"navigator"],[117,22,91,24],[117,23,91,25,"mediaDevices"],[117,35,91,37],[117,36,91,38,"getUserMedia"],[117,48,91,50],[117,49,91,51,"constraints"],[117,60,91,62],[117,61,91,63],[118,4,92,4],[119,4,93,4],[119,10,93,10,"_getUserMedia"],[119,23,93,23],[119,26,93,26,"navigator"],[119,35,93,35],[119,36,93,36],[119,53,93,53],[119,54,93,54],[119,58,94,8,"navigator"],[119,67,94,17],[119,68,94,18],[119,88,94,38],[119,89,94,39],[120,4,95,8],[121,4,96,8,"navigator"],[121,13,96,17],[121,14,96,18],[121,30,96,34],[121,31,96,35],[122,4,97,4],[122,11,97,11],[122,15,97,15,"Promise"],[122,22,97,22],[122,23,97,23],[122,24,97,24,"resolve"],[122,31,97,31],[122,33,97,33,"reject"],[122,39,97,39],[122,44,97,44,"_getUserMedia"],[122,57,97,57],[122,58,97,58,"call"],[122,62,97,62],[122,63,97,63,"navigator"],[122,72,97,72],[122,74,97,74,"constraints"],[122,85,97,85],[122,87,97,87,"resolve"],[122,94,97,94],[122,96,97,96,"reject"],[122,102,97,102],[122,103,97,103],[122,104,97,104],[123,2,98,0],[124,2,99,7],[124,11,99,16,"canGetUserMedia"],[124,26,99,31,"canGetUserMedia"],[124,27,99,31],[124,29,99,34],[125,4,100,4],[126,4,101,4],[127,6,102,4],[128,6,103,4,"Platform"],[128,22,103,12],[128,23,103,12,"Platform"],[128,31,103,12],[128,32,103,13,"isDOMAvailable"],[128,46,103,27],[129,6,104,8],[130,6,105,8],[130,7,105,9],[130,9,105,12,"navigator"],[130,18,105,21],[130,19,105,22,"mediaDevices"],[130,31,105,34],[130,35,105,38,"navigator"],[130,44,105,47],[130,45,105,48,"mediaDevices"],[130,57,105,60],[130,58,105,61,"getUserMedia"],[130,70,105,73],[130,74,106,12,"navigator"],[130,83,106,21],[130,84,106,22],[130,101,106,39],[130,102,106,40],[130,106,107,12,"navigator"],[130,115,107,21],[130,116,107,22],[130,136,107,42],[130,137,107,43],[131,6,108,12],[132,6,109,12,"navigator"],[132,15,109,21],[132,16,109,22],[132,32,109,38],[132,33,109,39],[133,4,109,40],[134,2,110,0],[135,2,111,7],[135,17,111,22,"isFrontCameraAvailableAsync"],[135,44,111,49,"isFrontCameraAvailableAsync"],[135,45,111,50,"devices"],[135,52,111,57],[135,54,111,59],[136,4,112,4],[136,11,112,11],[136,17,112,17,"supportsCameraType"],[136,35,112,35],[136,36,112,36],[136,37,112,37],[136,44,112,44],[136,46,112,46],[136,52,112,52],[136,54,112,54],[136,64,112,64],[136,65,112,65],[136,67,112,67],[136,73,112,73],[136,75,112,75,"devices"],[136,82,112,82],[136,83,112,83],[137,2,113,0],[138,2,114,7],[138,17,114,22,"isBackCameraAvailableAsync"],[138,43,114,48,"isBackCameraAvailableAsync"],[138,44,114,49,"devices"],[138,51,114,56],[138,53,114,58],[139,4,115,4],[139,11,115,11],[139,17,115,17,"supportsCameraType"],[139,35,115,35],[139,36,115,36],[139,37,115,37],[139,43,115,43],[139,45,115,45],[139,51,115,51],[139,52,115,52],[139,54,115,54],[139,67,115,67],[139,69,115,69,"devices"],[139,76,115,76],[139,77,115,77],[140,2,116,0],[141,2,117,0],[141,17,117,15,"supportsCameraType"],[141,35,117,33,"supportsCameraType"],[141,36,117,34,"labels"],[141,42,117,40],[141,44,117,42,"type"],[141,48,117,46],[141,50,117,48,"devices"],[141,57,117,55],[141,59,117,57],[142,4,118,4],[142,8,118,8],[142,9,118,9,"devices"],[142,16,118,16],[142,18,118,18],[143,6,119,8],[143,10,119,12],[143,11,119,13,"navigator"],[143,20,119,22],[143,21,119,23,"mediaDevices"],[143,33,119,35],[143,34,119,36,"enumerateDevices"],[143,50,119,52],[143,52,119,54],[144,8,120,12],[144,15,120,19],[144,19,120,23],[145,6,121,8],[146,6,122,8,"devices"],[146,13,122,15],[146,16,122,18],[146,22,122,24,"navigator"],[146,31,122,33],[146,32,122,34,"mediaDevices"],[146,44,122,46],[146,45,122,47,"enumerateDevices"],[146,61,122,63],[146,62,122,64],[146,63,122,65],[147,4,123,4],[148,4,124,4],[148,10,124,10,"cameras"],[148,17,124,17],[148,20,124,20,"devices"],[148,27,124,27],[148,28,124,28,"filter"],[148,34,124,34],[148,35,124,36,"t"],[148,36,124,37],[148,40,124,42,"t"],[148,41,124,43],[148,42,124,44,"kind"],[148,46,124,48],[148,51,124,53],[148,63,124,65],[148,64,124,66],[149,4,125,4],[149,10,125,10],[149,11,125,11,"hasCamera"],[149,20,125,20],[149,21,125,21],[149,24,125,24,"cameras"],[149,31,125,31],[149,32,125,32,"filter"],[149,38,125,38],[149,39,125,40,"camera"],[149,45,125,46],[149,49,125,51,"labels"],[149,55,125,57],[149,56,125,58,"some"],[149,60,125,62],[149,61,125,64,"label"],[149,66,125,69],[149,70,125,74,"camera"],[149,76,125,80],[149,77,125,81,"label"],[149,82,125,86],[149,83,125,87,"toLowerCase"],[149,94,125,98],[149,95,125,99],[149,96,125,100],[149,97,125,101,"includes"],[149,105,125,109],[149,106,125,110,"label"],[149,111,125,115],[149,112,125,116],[149,113,125,117],[149,114,125,118],[150,4,126,4],[150,10,126,10],[150,11,126,11,"isCapable"],[150,20,126,20],[150,21,126,21],[150,24,126,24,"cameras"],[150,31,126,31],[150,32,126,32,"filter"],[150,38,126,38],[150,39,126,40,"camera"],[150,45,126,46],[150,49,126,51],[151,6,127,8],[151,10,127,12],[151,12,127,14],[151,29,127,31],[151,33,127,35,"camera"],[151,39,127,41],[151,40,127,42],[151,42,127,44],[152,8,128,12],[152,15,128,19],[152,19,128,23],[153,6,129,8],[154,6,130,8],[154,12,130,14,"capabilities"],[154,24,130,26],[154,27,130,29,"camera"],[154,33,130,35],[154,34,130,36,"getCapabilities"],[154,49,130,51],[154,50,130,52],[154,51,130,53],[155,6,131,8],[155,10,131,12],[155,11,131,13,"capabilities"],[155,23,131,25],[155,24,131,26,"facingMode"],[155,34,131,36],[155,36,131,38],[156,8,132,12],[156,15,132,19],[156,19,132,23],[157,6,133,8],[158,6,134,8],[158,13,134,15,"capabilities"],[158,25,134,27],[158,26,134,28,"facingMode"],[158,36,134,38],[158,37,134,39,"find"],[158,41,134,43],[158,42,134,45,"_"],[158,43,134,46],[158,47,134,51,"type"],[158,51,134,55],[158,52,134,56],[159,4,135,4],[159,5,135,5],[159,6,135,6],[160,4,136,4],[160,11,136,11,"isCapable"],[160,20,136,20],[160,22,136,22,"deviceId"],[160,30,136,30],[160,34,136,34,"hasCamera"],[160,43,136,43],[160,45,136,45,"deviceId"],[160,53,136,53],[160,57,136,57],[160,61,136,61],[161,2,137,0],[162,0,137,1],[162,3]],"functionMap":{"names":["<global>","requestLegacyUserMediaAsync","optionalSource","constraintToSourceId","Promise$argument_0","MediaStreamTrack.getSources$argument_0","sources.forEach$argument_0","sourceSelectedAsync","requestUserMediaAsync","getAnyUserMediaAsync","getUserMediaAsync","canGetUserMedia","isFrontCameraAvailableAsync","isBackCameraAvailableAsync","supportsCameraType","devices.filter$argument_0","cameras.filter$argument_0","labels.some$argument_0","capabilities.facingMode.find$argument_0"],"mappings":"AAA;ACO;2BCI,0CD;iCEC;KFY;sCGC;gCCE,6BD,CH;oBKG;KLO;CDc;AOC;CPQ;OQC;CRU;OSC;CTe;OUC;uBNQ,gFM;CVC;OWC;CXW;OYC;CZE;OaC;CbE;AcC;mCCO,8BD;uCEC,wBC,qDD,CF;uCEC;4CEQ,WF;KFC;CdE"},"hasCjsExports":false},"type":"js/module"}]}