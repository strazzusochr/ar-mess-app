{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./WebCameraUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":52,"index":84}}],"key":"7QFlRc+R5Zhr/RLcJUPMtLUHEsc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useWebQRScanner = useWebQRScanner;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _WebCameraUtils = require(_dependencyMap[1], \"./WebCameraUtils\");\n  const qrWorkerMethod = ({\n    data,\n    width,\n    height\n  }) => {\n    // eslint-disable-next-line no-undef\n    const decoded = self.jsQR(data, width, height, {\n      inversionAttempts: 'attemptBoth'\n    });\n    let parsed;\n    try {\n      parsed = JSON.parse(decoded);\n    } catch {\n      parsed = decoded;\n    }\n    if (parsed?.data) {\n      const nativeEvent = {\n        type: 'qr',\n        data: parsed.data,\n        cornerPoints: [],\n        bounds: {\n          origin: {\n            x: 0,\n            y: 0\n          },\n          size: {\n            width: 0,\n            height: 0\n          }\n        }\n      };\n      if (parsed.location) {\n        nativeEvent.cornerPoints = [parsed.location.topLeftCorner, parsed.location.bottomLeftCorner, parsed.location.topRightCorner, parsed.location.bottomRightCorner];\n      }\n      return nativeEvent;\n    }\n    return parsed;\n  };\n  const createWorkerAsyncFunction = (fn, deps) => {\n    if (typeof window === 'undefined') {\n      return async () => {\n        throw new Error('Cannot use createWorkerAsyncFunction in a non-browser environment');\n      };\n    }\n    const stringifiedFn = [`self.func = ${fn.toString()};`, 'self.onmessage = (e) => {', '  const result = self.func(e.data);', '  self.postMessage(result);', '};'];\n    if (deps.length > 0) {\n      stringifiedFn.unshift(`importScripts(${deps.map(dep => `'${dep}'`).join(', ')});`);\n    }\n    const blob = new Blob(stringifiedFn, {\n      type: 'text/javascript'\n    });\n    const worker = new Worker(URL.createObjectURL(blob));\n    // First-In First-Out queue of promises\n    const promises = [];\n    worker.onmessage = e => promises.shift()?.resolve(e.data);\n    return data => {\n      return new Promise((resolve, reject) => {\n        promises.push({\n          resolve,\n          reject\n        });\n        worker.postMessage(data);\n      });\n    };\n  };\n  const decode = createWorkerAsyncFunction(qrWorkerMethod, ['https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js']);\n  function useWebQRScanner(video, {\n    isEnabled,\n    captureOptions,\n    interval,\n    onScanned,\n    onError\n  }) {\n    const isRunning = React.useRef(false);\n    const timeout = React.useRef(undefined);\n    async function scanAsync() {\n      // If interval is 0 then only scan once.\n      if (!isRunning.current || !onScanned) {\n        stop();\n        return;\n      }\n      try {\n        const data = (0, _WebCameraUtils.captureImageData)(video.current, captureOptions);\n        if (data) {\n          const nativeEvent = await decode(data);\n          if (nativeEvent?.data) {\n            onScanned({\n              nativeEvent\n            });\n          }\n        }\n      } catch (error) {\n        if (onError) {\n          onError({\n            nativeEvent: error\n          });\n        }\n      } finally {\n        // If interval is 0 then only scan once.\n        if (interval === 0) {\n          stop();\n          return;\n        }\n        const intervalToUse = !interval || interval < 0 ? 16 : interval;\n        // @ts-ignore: Type 'Timeout' is not assignable to type 'number'\n        timeout.current = setTimeout(() => {\n          scanAsync();\n        }, intervalToUse);\n      }\n    }\n    function stop() {\n      isRunning.current = false;\n      clearTimeout(timeout.current);\n    }\n    React.useEffect(() => {\n      if (isEnabled) {\n        isRunning.current = true;\n        scanAsync();\n      }\n      return () => {\n        if (isEnabled) {\n          stop();\n        }\n      };\n    }, [isEnabled]);\n  }\n});","lineCount":152,"map":[[22,2,65,0,"exports"],[22,9,65,0],[22,10,65,0,"useWebQRScanner"],[22,25,65,0],[22,28,65,0,"useWebQRScanner"],[22,43,65,0],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,1,0],[24,6,1,0,"React"],[24,11,1,0],[24,14,1,0,"_interopNamespace"],[24,31,1,0],[24,32,1,0,"_react"],[24,38,1,0],[25,2,2,0],[25,6,2,0,"_WebCameraUtils"],[25,21,2,0],[25,24,2,0,"require"],[25,31,2,0],[25,32,2,0,"_dependencyMap"],[25,46,2,0],[26,2,3,0],[26,8,3,6,"qrWorkerMethod"],[26,22,3,20],[26,25,3,23,"qrWorkerMethod"],[26,26,3,24],[27,4,3,26,"data"],[27,8,3,30],[28,4,3,32,"width"],[28,9,3,37],[29,4,3,39,"height"],[30,2,3,46],[30,3,3,47],[30,8,3,52],[31,4,4,4],[32,4,5,4],[32,10,5,10,"decoded"],[32,17,5,17],[32,20,5,20,"self"],[32,24,5,24],[32,25,5,25,"jsQR"],[32,29,5,29],[32,30,5,30,"data"],[32,34,5,34],[32,36,5,36,"width"],[32,41,5,41],[32,43,5,43,"height"],[32,49,5,49],[32,51,5,51],[33,6,6,8,"inversionAttempts"],[33,23,6,25],[33,25,6,27],[34,4,7,4],[34,5,7,5],[34,6,7,6],[35,4,8,4],[35,8,8,8,"parsed"],[35,14,8,14],[36,4,9,4],[36,8,9,8],[37,6,10,8,"parsed"],[37,12,10,14],[37,15,10,17,"JSON"],[37,19,10,21],[37,20,10,22,"parse"],[37,25,10,27],[37,26,10,28,"decoded"],[37,33,10,35],[37,34,10,36],[38,4,11,4],[38,5,11,5],[38,6,12,4],[38,12,12,10],[39,6,13,8,"parsed"],[39,12,13,14],[39,15,13,17,"decoded"],[39,22,13,24],[40,4,14,4],[41,4,15,4],[41,8,15,8,"parsed"],[41,14,15,14],[41,16,15,16,"data"],[41,20,15,20],[41,22,15,22],[42,6,16,8],[42,12,16,14,"nativeEvent"],[42,23,16,25],[42,26,16,28],[43,8,17,12,"type"],[43,12,17,16],[43,14,17,18],[43,18,17,22],[44,8,18,12,"data"],[44,12,18,16],[44,14,18,18,"parsed"],[44,20,18,24],[44,21,18,25,"data"],[44,25,18,29],[45,8,19,12,"cornerPoints"],[45,20,19,24],[45,22,19,26],[45,24,19,28],[46,8,20,12,"bounds"],[46,14,20,18],[46,16,20,20],[47,10,20,22,"origin"],[47,16,20,28],[47,18,20,30],[48,12,20,32,"x"],[48,13,20,33],[48,15,20,35],[48,16,20,36],[49,12,20,38,"y"],[49,13,20,39],[49,15,20,41],[50,10,20,43],[50,11,20,44],[51,10,20,46,"size"],[51,14,20,50],[51,16,20,52],[52,12,20,54,"width"],[52,17,20,59],[52,19,20,61],[52,20,20,62],[53,12,20,64,"height"],[53,18,20,70],[53,20,20,72],[54,10,20,74],[55,8,20,76],[56,6,21,8],[56,7,21,9],[57,6,22,8],[57,10,22,12,"parsed"],[57,16,22,18],[57,17,22,19,"location"],[57,25,22,27],[57,27,22,29],[58,8,23,12,"nativeEvent"],[58,19,23,23],[58,20,23,24,"cornerPoints"],[58,32,23,36],[58,35,23,39],[58,36,24,16,"parsed"],[58,42,24,22],[58,43,24,23,"location"],[58,51,24,31],[58,52,24,32,"topLeftCorner"],[58,65,24,45],[58,67,25,16,"parsed"],[58,73,25,22],[58,74,25,23,"location"],[58,82,25,31],[58,83,25,32,"bottomLeftCorner"],[58,99,25,48],[58,101,26,16,"parsed"],[58,107,26,22],[58,108,26,23,"location"],[58,116,26,31],[58,117,26,32,"topRightCorner"],[58,131,26,46],[58,133,27,16,"parsed"],[58,139,27,22],[58,140,27,23,"location"],[58,148,27,31],[58,149,27,32,"bottomRightCorner"],[58,166,27,49],[58,167,28,13],[59,6,29,8],[60,6,30,8],[60,13,30,15,"nativeEvent"],[60,24,30,26],[61,4,31,4],[62,4,32,4],[62,11,32,11,"parsed"],[62,17,32,17],[63,2,33,0],[63,3,33,1],[64,2,34,0],[64,8,34,6,"createWorkerAsyncFunction"],[64,33,34,31],[64,36,34,34,"createWorkerAsyncFunction"],[64,37,34,35,"fn"],[64,39,34,37],[64,41,34,39,"deps"],[64,45,34,43],[64,50,34,48],[65,4,35,4],[65,8,35,8],[65,15,35,15,"window"],[65,21,35,21],[65,26,35,26],[65,37,35,37],[65,39,35,39],[66,6,36,8],[66,13,36,15],[66,25,36,27],[67,8,37,12],[67,14,37,18],[67,18,37,22,"Error"],[67,23,37,27],[67,24,37,28],[67,91,37,95],[67,92,37,96],[68,6,38,8],[68,7,38,9],[69,4,39,4],[70,4,40,4],[70,10,40,10,"stringifiedFn"],[70,23,40,23],[70,26,40,26],[70,27,41,8],[70,42,41,23,"fn"],[70,44,41,25],[70,45,41,26,"toString"],[70,53,41,34],[70,54,41,35],[70,55,41,36],[70,58,41,39],[70,60,42,8],[70,87,42,35],[70,89,43,8],[70,126,43,45],[70,128,44,8],[70,157,44,37],[70,159,45,8],[70,163,45,12],[70,164,46,5],[71,4,47,4],[71,8,47,8,"deps"],[71,12,47,12],[71,13,47,13,"length"],[71,19,47,19],[71,22,47,22],[71,23,47,23],[71,25,47,25],[72,6,48,8,"stringifiedFn"],[72,19,48,21],[72,20,48,22,"unshift"],[72,27,48,29],[72,28,48,30],[72,45,48,47,"deps"],[72,49,48,51],[72,50,48,52,"map"],[72,53,48,55],[72,54,48,57,"dep"],[72,57,48,60],[72,61,48,65],[72,65,48,69,"dep"],[72,68,48,72],[72,71,48,75],[72,72,48,76],[72,73,48,77,"join"],[72,77,48,81],[72,78,48,82],[72,82,48,86],[72,83,48,87],[72,87,48,91],[72,88,48,92],[73,4,49,4],[74,4,50,4],[74,10,50,10,"blob"],[74,14,50,14],[74,17,50,17],[74,21,50,21,"Blob"],[74,25,50,25],[74,26,50,26,"stringifiedFn"],[74,39,50,39],[74,41,50,41],[75,6,50,43,"type"],[75,10,50,47],[75,12,50,49],[76,4,50,67],[76,5,50,68],[76,6,50,69],[77,4,51,4],[77,10,51,10,"worker"],[77,16,51,16],[77,19,51,19],[77,23,51,23,"Worker"],[77,29,51,29],[77,30,51,30,"URL"],[77,33,51,33],[77,34,51,34,"createObjectURL"],[77,49,51,49],[77,50,51,50,"blob"],[77,54,51,54],[77,55,51,55],[77,56,51,56],[78,4,52,4],[79,4,53,4],[79,10,53,10,"promises"],[79,18,53,18],[79,21,53,21],[79,23,53,23],[80,4,54,4,"worker"],[80,10,54,10],[80,11,54,11,"onmessage"],[80,20,54,20],[80,23,54,24,"e"],[80,24,54,25],[80,28,54,30,"promises"],[80,36,54,38],[80,37,54,39,"shift"],[80,42,54,44],[80,43,54,45],[80,44,54,46],[80,46,54,48,"resolve"],[80,53,54,55],[80,54,54,56,"e"],[80,55,54,57],[80,56,54,58,"data"],[80,60,54,62],[80,61,54,63],[81,4,55,4],[81,11,55,12,"data"],[81,15,55,16],[81,19,55,21],[82,6,56,8],[82,13,56,15],[82,17,56,19,"Promise"],[82,24,56,26],[82,25,56,27],[82,26,56,28,"resolve"],[82,33,56,35],[82,35,56,37,"reject"],[82,41,56,43],[82,46,56,48],[83,8,57,12,"promises"],[83,16,57,20],[83,17,57,21,"push"],[83,21,57,25],[83,22,57,26],[84,10,57,28,"resolve"],[84,17,57,35],[85,10,57,37,"reject"],[86,8,57,44],[86,9,57,45],[86,10,57,46],[87,8,58,12,"worker"],[87,14,58,18],[87,15,58,19,"postMessage"],[87,26,58,30],[87,27,58,31,"data"],[87,31,58,35],[87,32,58,36],[88,6,59,8],[88,7,59,9],[88,8,59,10],[89,4,60,4],[89,5,60,5],[90,2,61,0],[90,3,61,1],[91,2,62,0],[91,8,62,6,"decode"],[91,14,62,12],[91,17,62,15,"createWorkerAsyncFunction"],[91,42,62,40],[91,43,62,41,"qrWorkerMethod"],[91,57,62,55],[91,59,62,57],[91,60,63,4],[91,118,63,62],[91,119,64,1],[91,120,64,2],[92,2,65,7],[92,11,65,16,"useWebQRScanner"],[92,26,65,31,"useWebQRScanner"],[92,27,65,32,"video"],[92,32,65,37],[92,34,65,39],[93,4,65,41,"isEnabled"],[93,13,65,50],[94,4,65,52,"captureOptions"],[94,18,65,66],[95,4,65,68,"interval"],[95,12,65,76],[96,4,65,78,"onScanned"],[96,13,65,87],[97,4,65,89,"onError"],[98,2,65,98],[98,3,65,99],[98,5,65,101],[99,4,66,4],[99,10,66,10,"isRunning"],[99,19,66,19],[99,22,66,22,"React"],[99,27,66,27],[99,28,66,28,"useRef"],[99,34,66,34],[99,35,66,35],[99,40,66,40],[99,41,66,41],[100,4,67,4],[100,10,67,10,"timeout"],[100,17,67,17],[100,20,67,20,"React"],[100,25,67,25],[100,26,67,26,"useRef"],[100,32,67,32],[100,33,67,33,"undefined"],[100,42,67,42],[100,43,67,43],[101,4,68,4],[101,19,68,19,"scanAsync"],[101,28,68,28,"scanAsync"],[101,29,68,28],[101,31,68,31],[102,6,69,8],[103,6,70,8],[103,10,70,12],[103,11,70,13,"isRunning"],[103,20,70,22],[103,21,70,23,"current"],[103,28,70,30],[103,32,70,34],[103,33,70,35,"onScanned"],[103,42,70,44],[103,44,70,46],[104,8,71,12,"stop"],[104,12,71,16],[104,13,71,17],[104,14,71,18],[105,8,72,12],[106,6,73,8],[107,6,74,8],[107,10,74,12],[108,8,75,12],[108,14,75,18,"data"],[108,18,75,22],[108,21,75,25],[108,25,75,25,"captureImageData"],[108,40,75,41],[108,41,75,41,"captureImageData"],[108,57,75,41],[108,59,75,42,"video"],[108,64,75,47],[108,65,75,48,"current"],[108,72,75,55],[108,74,75,57,"captureOptions"],[108,88,75,71],[108,89,75,72],[109,8,76,12],[109,12,76,16,"data"],[109,16,76,20],[109,18,76,22],[110,10,77,16],[110,16,77,22,"nativeEvent"],[110,27,77,33],[110,30,77,36],[110,36,77,42,"decode"],[110,42,77,48],[110,43,77,49,"data"],[110,47,77,53],[110,48,77,54],[111,10,78,16],[111,14,78,20,"nativeEvent"],[111,25,78,31],[111,27,78,33,"data"],[111,31,78,37],[111,33,78,39],[112,12,79,20,"onScanned"],[112,21,79,29],[112,22,79,30],[113,14,80,24,"nativeEvent"],[114,12,81,20],[114,13,81,21],[114,14,81,22],[115,10,82,16],[116,8,83,12],[117,6,84,8],[117,7,84,9],[117,8,85,8],[117,15,85,15,"error"],[117,20,85,20],[117,22,85,22],[118,8,86,12],[118,12,86,16,"onError"],[118,19,86,23],[118,21,86,25],[119,10,87,16,"onError"],[119,17,87,23],[119,18,87,24],[120,12,87,26,"nativeEvent"],[120,23,87,37],[120,25,87,39,"error"],[121,10,87,45],[121,11,87,46],[121,12,87,47],[122,8,88,12],[123,6,89,8],[123,7,89,9],[123,16,90,16],[124,8,91,12],[125,8,92,12],[125,12,92,16,"interval"],[125,20,92,24],[125,25,92,29],[125,26,92,30],[125,28,92,32],[126,10,93,16,"stop"],[126,14,93,20],[126,15,93,21],[126,16,93,22],[127,10,94,16],[128,8,95,12],[129,8,96,12],[129,14,96,18,"intervalToUse"],[129,27,96,31],[129,30,96,34],[129,31,96,35,"interval"],[129,39,96,43],[129,43,96,47,"interval"],[129,51,96,55],[129,54,96,58],[129,55,96,59],[129,58,96,62],[129,60,96,64],[129,63,96,67,"interval"],[129,71,96,75],[130,8,97,12],[131,8,98,12,"timeout"],[131,15,98,19],[131,16,98,20,"current"],[131,23,98,27],[131,26,98,30,"setTimeout"],[131,36,98,40],[131,37,98,41],[131,43,98,47],[132,10,99,16,"scanAsync"],[132,19,99,25],[132,20,99,26],[132,21,99,27],[133,8,100,12],[133,9,100,13],[133,11,100,15,"intervalToUse"],[133,24,100,28],[133,25,100,29],[134,6,101,8],[135,4,102,4],[136,4,103,4],[136,13,103,13,"stop"],[136,17,103,17,"stop"],[136,18,103,17],[136,20,103,20],[137,6,104,8,"isRunning"],[137,15,104,17],[137,16,104,18,"current"],[137,23,104,25],[137,26,104,28],[137,31,104,33],[138,6,105,8,"clearTimeout"],[138,18,105,20],[138,19,105,21,"timeout"],[138,26,105,28],[138,27,105,29,"current"],[138,34,105,36],[138,35,105,37],[139,4,106,4],[140,4,107,4,"React"],[140,9,107,9],[140,10,107,10,"useEffect"],[140,19,107,19],[140,20,107,20],[140,26,107,26],[141,6,108,8],[141,10,108,12,"isEnabled"],[141,19,108,21],[141,21,108,23],[142,8,109,12,"isRunning"],[142,17,109,21],[142,18,109,22,"current"],[142,25,109,29],[142,28,109,32],[142,32,109,36],[143,8,110,12,"scanAsync"],[143,17,110,21],[143,18,110,22],[143,19,110,23],[144,6,111,8],[145,6,112,8],[145,13,112,15],[145,19,112,21],[146,8,113,12],[146,12,113,16,"isEnabled"],[146,21,113,25],[146,23,113,27],[147,10,114,16,"stop"],[147,14,114,20],[147,15,114,21],[147,16,114,22],[148,8,115,12],[149,6,116,8],[149,7,116,9],[150,4,117,4],[150,5,117,5],[150,7,117,7],[150,8,117,8,"isEnabled"],[150,17,117,17],[150,18,117,18],[150,19,117,19],[151,2,118,0],[152,0,118,1],[152,3]],"functionMap":{"names":["<global>","qrWorkerMethod","createWorkerAsyncFunction","<anonymous>","deps.map$argument_0","worker.onmessage","Promise$argument_0","useWebQRScanner","scanAsync","setTimeout$argument_0","stop","React.useEffect$argument_0"],"mappings":"AAA;uBCE;CD8B;kCEC;eCE;SDE;wDEU,mBF;uBGM,wCH;WCC;2BGC;SHG;KDC;CFC;OOI;ICG;yCC8B;aDE;KDE;IGC;KHG;oBIC;eRK;SQI;KJC;CPC"},"hasCjsExports":false},"type":"js/module"}]}