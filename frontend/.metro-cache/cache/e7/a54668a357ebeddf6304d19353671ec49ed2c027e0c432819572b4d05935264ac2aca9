{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":31,"index":308}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./utils/fetchData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":374},"end":{"line":4,"column":46,"index":420}}],"key":"bvuZtUrCBORS7e0mnZMXcup8nyI=","exportNames":["*"],"imports":1}},{"name":"./xmlTags","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":33,"index":454}}],"key":"UjGGlBNdDx1pDIGgBuGLg90Be9Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.SvgUri = SvgUri;\n  Object.defineProperty(exports, \"SvgFromXml\", {\n    enumerable: true,\n    get: function () {\n      return SvgFromXml;\n    }\n  });\n  Object.defineProperty(exports, \"SvgFromUri\", {\n    enumerable: true,\n    get: function () {\n      return SvgFromUri;\n    }\n  });\n  Object.defineProperty(exports, \"camelCase\", {\n    enumerable: true,\n    get: function () {\n      return camelCase;\n    }\n  });\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = parse;\n  Object.defineProperty(exports, \"tags\", {\n    enumerable: true,\n    get: function () {\n      return _xmlTags.tags;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _utilsFetchData = require(_dependencyMap[1], \"./utils/fetchData\");\n  var _xmlTags = require(_dependencyMap[2], \"./xmlTags\");\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  function missingTag() {\n    return null;\n  }\n  function SvgAst({\n    ast,\n    override\n  }) {\n    if (!ast) {\n      return null;\n    }\n    const {\n      props,\n      children\n    } = ast;\n    const Svg = _xmlTags.tags.svg;\n    return /*#__PURE__*/React.createElement(Svg, _extends({}, props, override), children);\n  }\n  const err = console.error.bind(console);\n  function SvgXml(props) {\n    const {\n      onError = err,\n      xml,\n      override,\n      fallback\n    } = props;\n    try {\n      const ast = (0, _react.useMemo)(() => xml !== null ? parse(xml) : null, [xml]);\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: override || props\n      });\n    } catch (error) {\n      onError(error);\n      return fallback ?? null;\n    }\n  }\n  function SvgUri(props) {\n    const {\n      onError = err,\n      uri,\n      onLoad,\n      fallback\n    } = props;\n    const [xml, setXml] = (0, _react.useState)(null);\n    const [isError, setIsError] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      uri ? (0, _utilsFetchData.fetchText)(uri).then(data => {\n        setXml(data);\n        isError && setIsError(false);\n        onLoad === null || onLoad === void 0 || onLoad();\n      }).catch(e => {\n        onError(e);\n        setIsError(true);\n      }) : setXml(null);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onError, uri, onLoad]);\n    if (isError) {\n      return fallback ?? null;\n    }\n    return /*#__PURE__*/React.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      fallback: fallback\n    });\n  }\n\n  // Extending Component is required for Animated support.\n\n  class SvgFromXml extends _react.Component {\n    state = {\n      ast: null\n    };\n    componentDidMount() {\n      this.parse(this.props.xml);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        xml\n      } = this.props;\n      if (xml !== prevProps.xml) {\n        this.parse(xml);\n      }\n    }\n    parse(xml) {\n      const {\n        onError = err\n      } = this.props;\n      try {\n        this.setState({\n          ast: xml ? parse(xml) : null\n        });\n      } catch (e) {\n        const error = e;\n        onError({\n          ...error,\n          message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`\n        });\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          ast\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: props.override || props\n      });\n    }\n  }\n  class SvgFromUri extends _react.Component {\n    state = {\n      xml: null\n    };\n    componentDidMount() {\n      this.fetch(this.props.uri);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        uri\n      } = this.props;\n      if (uri !== prevProps.uri) {\n        this.fetch(uri);\n      }\n    }\n    async fetch(uri) {\n      try {\n        this.setState({\n          xml: uri ? await (0, _utilsFetchData.fetchText)(uri) : null\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          xml\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgFromXml, {\n        xml: xml,\n        override: props,\n        onError: props.onError\n      });\n    }\n  }\n  const upperCase = (_match, letter) => letter.toUpperCase();\n  const camelCase = phrase => phrase.replace(/[:-]([a-z])/g, upperCase);\n  function getStyle(string) {\n    const style = {};\n    const declarations = string.split(';').filter(v => v.trim());\n    const {\n      length\n    } = declarations;\n    for (let i = 0; i < length; i++) {\n      const declaration = declarations[i];\n      if (declaration.length !== 0) {\n        const split = declaration.split(':');\n        const property = split[0];\n        const value = split[1];\n        style[camelCase(property.trim())] = value.trim();\n      }\n    }\n    return style;\n  }\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      const {\n        Tag,\n        props,\n        children\n      } = value;\n      if (props !== null && props !== void 0 && props.class) {\n        props.className = props.class;\n        delete props.class;\n      }\n      return /*#__PURE__*/React.createElement(Tag, _extends({\n        key: index\n      }, props), children.map(astToReact));\n    }\n    return value;\n  }\n\n  // slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\n  function repeat(str, i) {\n    let result = '';\n    while (i--) {\n      result += str;\n    }\n    return result;\n  }\n  const toSpaces = tabs => repeat('  ', tabs.length);\n  function locate(source, i) {\n    const lines = source.split('\\n');\n    const nLines = lines.length;\n    let column = i;\n    let line = 0;\n    for (; line < nLines; line++) {\n      const {\n        length\n      } = lines[line];\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n    const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    const beforeExec = /(^|\\n).*$/.exec(before);\n    const beforeLine = beforeExec && beforeExec[0] || '';\n    const after = source.slice(i);\n    const afterExec = /.*(\\n|$)/.exec(after);\n    const afterLine = afterExec && afterExec[0];\n    const pad = repeat(' ', beforeLine.length);\n    const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n    return {\n      line,\n      column,\n      snippet\n    };\n  }\n  const validNameCharacters = /[a-zA-Z0-9:_-]/;\n  const commentStart = /<!--/;\n  const whitespace = /[\\s\\t\\r\\n]/;\n  const quotemarks = /['\"]/;\n  function parse(source, middleware) {\n    const length = source.length;\n    let currentElement = null;\n    let state = metadata;\n    let children = null;\n    let root;\n    const stack = [];\n    function error(message) {\n      const {\n        line,\n        column,\n        snippet\n      } = locate(source, i);\n      throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);\n    }\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !(validNameCharacters.test(source[i + 1]) || commentStart.test(source.slice(i, i + 4))))) {\n        i++;\n      }\n      return neutral();\n    }\n    function neutral() {\n      let text = '';\n      let char;\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n      if (source[i] === '<') {\n        return openingTag;\n      }\n      return neutral;\n    }\n    function openingTag() {\n      const char = source[i];\n      if (char === '?') {\n        return neutral;\n      } // <?xml...\n\n      if (char === '!') {\n        const start = i + 1;\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n        const end = i + 8;\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n      if (char === '/') {\n        return closingTag;\n      }\n      const tag = getName();\n      const props = {};\n      const element = {\n        tag,\n        props,\n        children: [],\n        parent: currentElement,\n        Tag: _xmlTags.tags[tag] || missingTag\n      };\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n      getAttributes(props);\n      const {\n        style\n      } = props;\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n      let selfClosing = false;\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      if (!selfClosing) {\n        currentElement = element;\n        ({\n          children\n        } = element);\n        stack.push(element);\n      }\n      return neutral;\n    }\n    function comment() {\n      const index = source.indexOf('-->', i);\n      if (!~index) {\n        error('expected -->');\n      }\n      i = index + 2;\n      return neutral;\n    }\n    function cdata() {\n      const index = source.indexOf(']]>', i);\n      if (!~index) {\n        error('expected ]]>');\n      }\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n    function closingTag() {\n      const tag = getName();\n      if (!tag) {\n        error('Expected tag name');\n      }\n      if (currentElement && tag !== currentElement.tag) {\n        error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);\n      }\n      allowSpaces();\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n      if (currentElement) {\n        ({\n          children\n        } = currentElement);\n      }\n      return neutral;\n    }\n    function getName() {\n      let name = '';\n      let char;\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n      return name;\n    }\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n        allowSpaces();\n        const name = getName();\n        if (!name) {\n          return;\n        }\n        let value = true;\n        allowSpaces();\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n          if (name !== 'id' && !isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n        props[camelCase(name)] = value;\n      }\n    }\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n    function getUnquotedAttributeValue() {\n      let value = '';\n      do {\n        const char = source[i];\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n        value += char;\n        i += 1;\n      } while (i < length);\n      return value;\n    }\n    function getQuotedAttributeValue() {\n      const quotemark = source[i++];\n      let value = '';\n      let escaped = false;\n      while (i < length) {\n        const char = source[i++];\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n        value += escaped ? `\\\\${char}` : char;\n        escaped = false;\n      }\n      return value;\n    }\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n    let i = 0;\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n      state = state();\n      i += 1;\n    }\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n    if (root) {\n      const xml = (middleware ? middleware(root) : root) || root;\n      const ast = xml.children.map(astToReact);\n      const jsx = xml;\n      jsx.children = ast;\n      return jsx;\n    }\n    return null;\n  }\n});","lineCount":519,"map":[[22,2,9,0,"exports"],[22,9,9,0],[22,10,9,0,"SvgAst"],[22,16,9,0],[22,19,9,0,"SvgAst"],[22,25,9,0],[23,2,24,0,"exports"],[23,9,24,0],[23,10,24,0,"SvgXml"],[23,16,24,0],[23,19,24,0,"SvgXml"],[23,25,24,0],[24,2,42,0,"exports"],[24,9,42,0],[24,10,42,0,"SvgUri"],[24,16,42,0],[24,19,42,0,"SvgUri"],[24,25,42,0],[25,2,74,0,"Object"],[25,8,74,0],[25,9,74,0,"defineProperty"],[25,23,74,0],[25,24,74,0,"exports"],[25,31,74,0],[26,4,74,0,"enumerable"],[26,14,74,0],[27,4,74,0,"get"],[27,7,74,0],[27,18,74,0,"get"],[27,19,74,0],[28,6,74,0],[28,13,74,0,"SvgFromXml"],[28,23,74,0],[29,4,74,0],[30,2,74,0],[31,2,118,0,"Object"],[31,8,118,0],[31,9,118,0,"defineProperty"],[31,23,118,0],[31,24,118,0,"exports"],[31,31,118,0],[32,4,118,0,"enumerable"],[32,14,118,0],[33,4,118,0,"get"],[33,7,118,0],[33,18,118,0,"get"],[33,19,118,0],[34,6,118,0],[34,13,118,0,"SvgFromUri"],[34,23,118,0],[35,4,118,0],[36,2,118,0],[37,2,157,0,"Object"],[37,8,157,0],[37,9,157,0,"defineProperty"],[37,23,157,0],[37,24,157,0,"exports"],[37,31,157,0],[38,4,157,0,"enumerable"],[38,14,157,0],[39,4,157,0,"get"],[39,7,157,0],[39,18,157,0,"get"],[39,19,157,0],[40,6,157,0],[40,13,157,0,"camelCase"],[40,22,157,0],[41,4,157,0],[42,2,157,0],[43,2,158,0,"exports"],[43,9,158,0],[43,10,158,0,"getStyle"],[43,18,158,0],[43,21,158,0,"getStyle"],[43,29,158,0],[44,2,175,0,"exports"],[44,9,175,0],[44,10,175,0,"astToReact"],[44,20,175,0],[44,23,175,0,"astToReact"],[44,33,175,0],[45,2,236,0,"exports"],[45,9,236,0],[45,10,236,0,"parse"],[45,15,236,0],[45,18,236,0,"parse"],[45,23,236,0],[46,2,460,0,"Object"],[46,8,460,0],[46,9,460,0,"defineProperty"],[46,23,460,0],[46,24,460,0,"exports"],[46,31,460,0],[47,4,460,0,"enumerable"],[47,14,460,0],[48,4,460,0,"get"],[48,7,460,0],[48,18,460,0,"get"],[48,19,460,0],[49,6,460,0],[49,13,460,9,"tags"],[49,21,460,13],[49,22,460,13,"tags"],[49,26,460,13],[50,4,460,13],[51,2,460,13],[52,2,2,0],[52,6,2,0,"_react"],[52,12,2,0],[52,15,2,0,"require"],[52,22,2,0],[52,23,2,0,"_dependencyMap"],[52,37,2,0],[53,2,2,0],[53,6,2,0,"React"],[53,11,2,0],[53,14,2,0,"_interopNamespace"],[53,31,2,0],[53,32,2,0,"_react"],[53,38,2,0],[54,2,4,0],[54,6,4,0,"_utilsFetchData"],[54,21,4,0],[54,24,4,0,"require"],[54,31,4,0],[54,32,4,0,"_dependencyMap"],[54,46,4,0],[55,2,5,0],[55,6,5,0,"_xmlTags"],[55,14,5,0],[55,17,5,0,"require"],[55,24,5,0],[55,25,5,0,"_dependencyMap"],[55,39,5,0],[56,2,1,0],[56,11,1,9,"_extends"],[56,19,1,17,"_extends"],[56,20,1,17],[56,22,1,20],[57,4,1,22],[57,11,1,29,"_extends"],[57,19,1,37],[57,22,1,40,"Object"],[57,28,1,46],[57,29,1,47,"assign"],[57,35,1,53],[57,38,1,56,"Object"],[57,44,1,62],[57,45,1,63,"assign"],[57,51,1,69],[57,52,1,70,"bind"],[57,56,1,74],[57,57,1,75],[57,58,1,76],[57,61,1,79],[57,71,1,89,"n"],[57,72,1,90],[57,74,1,92],[58,6,1,94],[58,11,1,99],[58,15,1,103,"e"],[58,16,1,104],[58,19,1,107],[58,20,1,108],[58,22,1,110,"e"],[58,23,1,111],[58,26,1,114,"arguments"],[58,35,1,123],[58,36,1,124,"length"],[58,42,1,130],[58,44,1,132,"e"],[58,45,1,133],[58,47,1,135],[58,49,1,137],[59,8,1,139],[59,12,1,143,"t"],[59,13,1,144],[59,16,1,147,"arguments"],[59,25,1,156],[59,26,1,157,"e"],[59,27,1,158],[59,28,1,159],[60,8,1,161],[60,13,1,166],[60,17,1,170,"r"],[60,18,1,171],[60,22,1,175,"t"],[60,23,1,176],[60,25,1,178],[60,26,1,179],[60,27,1,180],[60,28,1,181],[60,30,1,183,"hasOwnProperty"],[60,44,1,197],[60,45,1,198,"call"],[60,49,1,202],[60,50,1,203,"t"],[60,51,1,204],[60,53,1,206,"r"],[60,54,1,207],[60,55,1,208],[60,60,1,213,"n"],[60,61,1,214],[60,62,1,215,"r"],[60,63,1,216],[60,64,1,217],[60,67,1,220,"t"],[60,68,1,221],[60,69,1,222,"r"],[60,70,1,223],[60,71,1,224],[60,72,1,225],[61,6,1,227],[62,6,1,229],[62,13,1,236,"n"],[62,14,1,237],[63,4,1,239],[63,5,1,240],[63,7,1,242,"_extends"],[63,15,1,250],[63,16,1,251,"apply"],[63,21,1,256],[63,22,1,257],[63,26,1,261],[63,28,1,263,"arguments"],[63,37,1,272],[63,38,1,273],[64,2,1,275],[65,2,6,0],[65,11,6,9,"missingTag"],[65,21,6,19,"missingTag"],[65,22,6,19],[65,24,6,22],[66,4,7,2],[66,11,7,9],[66,15,7,13],[67,2,8,0],[68,2,9,7],[68,11,9,16,"SvgAst"],[68,17,9,22,"SvgAst"],[68,18,9,23],[69,4,10,2,"ast"],[69,7,10,5],[70,4,11,2,"override"],[71,2,12,0],[71,3,12,1],[71,5,12,3],[72,4,13,2],[72,8,13,6],[72,9,13,7,"ast"],[72,12,13,10],[72,14,13,12],[73,6,14,4],[73,13,14,11],[73,17,14,15],[74,4,15,2],[75,4,16,2],[75,10,16,8],[76,6,17,4,"props"],[76,11,17,9],[77,6,18,4,"children"],[78,4,19,2],[78,5,19,3],[78,8,19,6,"ast"],[78,11,19,9],[79,4,20,2],[79,10,20,8,"Svg"],[79,13,20,11],[79,16,20,14,"tags"],[79,24,20,18],[79,25,20,18,"tags"],[79,29,20,18],[79,30,20,19,"svg"],[79,33,20,22],[80,4,21,2],[80,11,21,9],[80,24,21,22,"React"],[80,29,21,27],[80,30,21,28,"createElement"],[80,43,21,41],[80,44,21,42,"Svg"],[80,47,21,45],[80,49,21,47,"_extends"],[80,57,21,55],[80,58,21,56],[80,59,21,57],[80,60,21,58],[80,62,21,60,"props"],[80,67,21,65],[80,69,21,67,"override"],[80,77,21,75],[80,78,21,76],[80,80,21,78,"children"],[80,88,21,86],[80,89,21,87],[81,2,22,0],[82,2,23,0],[82,8,23,6,"err"],[82,11,23,9],[82,14,23,12,"console"],[82,21,23,19],[82,22,23,20,"error"],[82,27,23,25],[82,28,23,26,"bind"],[82,32,23,30],[82,33,23,31,"console"],[82,40,23,38],[82,41,23,39],[83,2,24,7],[83,11,24,16,"SvgXml"],[83,17,24,22,"SvgXml"],[83,18,24,23,"props"],[83,23,24,28],[83,25,24,30],[84,4,25,2],[84,10,25,8],[85,6,26,4,"onError"],[85,13,26,11],[85,16,26,14,"err"],[85,19,26,17],[86,6,27,4,"xml"],[86,9,27,7],[87,6,28,4,"override"],[87,14,28,12],[88,6,29,4,"fallback"],[89,4,30,2],[89,5,30,3],[89,8,30,6,"props"],[89,13,30,11],[90,4,31,2],[90,8,31,6],[91,6,32,4],[91,12,32,10,"ast"],[91,15,32,13],[91,18,32,16],[91,22,32,16,"useMemo"],[91,28,32,23],[91,29,32,23,"useMemo"],[91,36,32,23],[91,38,32,24],[91,44,32,30,"xml"],[91,47,32,33],[91,52,32,38],[91,56,32,42],[91,59,32,45,"parse"],[91,64,32,50],[91,65,32,51,"xml"],[91,68,32,54],[91,69,32,55],[91,72,32,58],[91,76,32,62],[91,78,32,64],[91,79,32,65,"xml"],[91,82,32,68],[91,83,32,69],[91,84,32,70],[92,6,33,4],[92,13,33,11],[92,26,33,24,"React"],[92,31,33,29],[92,32,33,30,"createElement"],[92,45,33,43],[92,46,33,44,"SvgAst"],[92,52,33,50],[92,54,33,52],[93,8,34,6,"ast"],[93,11,34,9],[93,13,34,11,"ast"],[93,16,34,14],[94,8,35,6,"override"],[94,16,35,14],[94,18,35,16,"override"],[94,26,35,24],[94,30,35,28,"props"],[95,6,36,4],[95,7,36,5],[95,8,36,6],[96,4,37,2],[96,5,37,3],[96,6,37,4],[96,13,37,11,"error"],[96,18,37,16],[96,20,37,18],[97,6,38,4,"onError"],[97,13,38,11],[97,14,38,12,"error"],[97,19,38,17],[97,20,38,18],[98,6,39,4],[98,13,39,11,"fallback"],[98,21,39,19],[98,25,39,23],[98,29,39,27],[99,4,40,2],[100,2,41,0],[101,2,42,7],[101,11,42,16,"SvgUri"],[101,17,42,22,"SvgUri"],[101,18,42,23,"props"],[101,23,42,28],[101,25,42,30],[102,4,43,2],[102,10,43,8],[103,6,44,4,"onError"],[103,13,44,11],[103,16,44,14,"err"],[103,19,44,17],[104,6,45,4,"uri"],[104,9,45,7],[105,6,46,4,"onLoad"],[105,12,46,10],[106,6,47,4,"fallback"],[107,4,48,2],[107,5,48,3],[107,8,48,6,"props"],[107,13,48,11],[108,4,49,2],[108,10,49,8],[108,11,49,9,"xml"],[108,14,49,12],[108,16,49,14,"setXml"],[108,22,49,20],[108,23,49,21],[108,26,49,24],[108,30,49,24,"useState"],[108,36,49,32],[108,37,49,32,"useState"],[108,45,49,32],[108,47,49,33],[108,51,49,37],[108,52,49,38],[109,4,50,2],[109,10,50,8],[109,11,50,9,"isError"],[109,18,50,16],[109,20,50,18,"setIsError"],[109,30,50,28],[109,31,50,29],[109,34,50,32],[109,38,50,32,"useState"],[109,44,50,40],[109,45,50,40,"useState"],[109,53,50,40],[109,55,50,41],[109,60,50,46],[109,61,50,47],[110,4,51,2],[110,8,51,2,"useEffect"],[110,14,51,11],[110,15,51,11,"useEffect"],[110,24,51,11],[110,26,51,12],[110,32,51,18],[111,6,52,4,"uri"],[111,9,52,7],[111,12,52,10],[111,16,52,10,"fetchText"],[111,31,52,19],[111,32,52,19,"fetchText"],[111,41,52,19],[111,43,52,20,"uri"],[111,46,52,23],[111,47,52,24],[111,48,52,25,"then"],[111,52,52,29],[111,53,52,30,"data"],[111,57,52,34],[111,61,52,38],[112,8,53,6,"setXml"],[112,14,53,12],[112,15,53,13,"data"],[112,19,53,17],[112,20,53,18],[113,8,54,6,"isError"],[113,15,54,13],[113,19,54,17,"setIsError"],[113,29,54,27],[113,30,54,28],[113,35,54,33],[113,36,54,34],[114,8,55,6,"onLoad"],[114,14,55,12],[114,19,55,17],[114,23,55,21],[114,27,55,25,"onLoad"],[114,33,55,31],[114,38,55,36],[114,43,55,41],[114,44,55,42],[114,48,55,46,"onLoad"],[114,54,55,52],[114,55,55,53],[114,56,55,54],[115,6,56,4],[115,7,56,5],[115,8,56,6],[115,9,56,7,"catch"],[115,14,56,12],[115,15,56,13,"e"],[115,16,56,14],[115,20,56,18],[116,8,57,6,"onError"],[116,15,57,13],[116,16,57,14,"e"],[116,17,57,15],[116,18,57,16],[117,8,58,6,"setIsError"],[117,18,58,16],[117,19,58,17],[117,23,58,21],[117,24,58,22],[118,6,59,4],[118,7,59,5],[118,8,59,6],[118,11,59,9,"setXml"],[118,17,59,15],[118,18,59,16],[118,22,59,20],[118,23,59,21],[119,6,60,4],[120,4,61,2],[120,5,61,3],[120,7,61,5],[120,8,61,6,"onError"],[120,15,61,13],[120,17,61,15,"uri"],[120,20,61,18],[120,22,61,20,"onLoad"],[120,28,61,26],[120,29,61,27],[120,30,61,28],[121,4,62,2],[121,8,62,6,"isError"],[121,15,62,13],[121,17,62,15],[122,6,63,4],[122,13,63,11,"fallback"],[122,21,63,19],[122,25,63,23],[122,29,63,27],[123,4,64,2],[124,4,65,2],[124,11,65,9],[124,24,65,22,"React"],[124,29,65,27],[124,30,65,28,"createElement"],[124,43,65,41],[124,44,65,42,"SvgXml"],[124,50,65,48],[124,52,65,50],[125,6,66,4,"xml"],[125,9,66,7],[125,11,66,9,"xml"],[125,14,66,12],[126,6,67,4,"override"],[126,14,67,12],[126,16,67,14,"props"],[126,21,67,19],[127,6,68,4,"fallback"],[127,14,68,12],[127,16,68,14,"fallback"],[128,4,69,2],[128,5,69,3],[128,6,69,4],[129,2,70,0],[131,2,72,0],[133,2,74,7],[133,8,74,13,"SvgFromXml"],[133,18,74,23],[133,27,74,32,"Component"],[133,33,74,41],[133,34,74,41,"Component"],[133,43,74,41],[133,44,74,42],[134,4,75,2,"state"],[134,9,75,7],[134,12,75,10],[135,6,76,4,"ast"],[135,9,76,7],[135,11,76,9],[136,4,77,2],[136,5,77,3],[137,4,78,2,"componentDidMount"],[137,21,78,19,"componentDidMount"],[137,22,78,19],[137,24,78,22],[138,6,79,4],[138,10,79,8],[138,11,79,9,"parse"],[138,16,79,14],[138,17,79,15],[138,21,79,19],[138,22,79,20,"props"],[138,27,79,25],[138,28,79,26,"xml"],[138,31,79,29],[138,32,79,30],[139,4,80,2],[140,4,81,2,"componentDidUpdate"],[140,22,81,20,"componentDidUpdate"],[140,23,81,21,"prevProps"],[140,32,81,30],[140,34,81,32],[141,6,82,4],[141,12,82,10],[142,8,83,6,"xml"],[143,6,84,4],[143,7,84,5],[143,10,84,8],[143,14,84,12],[143,15,84,13,"props"],[143,20,84,18],[144,6,85,4],[144,10,85,8,"xml"],[144,13,85,11],[144,18,85,16,"prevProps"],[144,27,85,25],[144,28,85,26,"xml"],[144,31,85,29],[144,33,85,31],[145,8,86,6],[145,12,86,10],[145,13,86,11,"parse"],[145,18,86,16],[145,19,86,17,"xml"],[145,22,86,20],[145,23,86,21],[146,6,87,4],[147,4,88,2],[148,4,89,2,"parse"],[148,9,89,7,"parse"],[148,10,89,8,"xml"],[148,13,89,11],[148,15,89,13],[149,6,90,4],[149,12,90,10],[150,8,91,6,"onError"],[150,15,91,13],[150,18,91,16,"err"],[151,6,92,4],[151,7,92,5],[151,10,92,8],[151,14,92,12],[151,15,92,13,"props"],[151,20,92,18],[152,6,93,4],[152,10,93,8],[153,8,94,6],[153,12,94,10],[153,13,94,11,"setState"],[153,21,94,19],[153,22,94,20],[154,10,95,8,"ast"],[154,13,95,11],[154,15,95,13,"xml"],[154,18,95,16],[154,21,95,19,"parse"],[154,26,95,24],[154,27,95,25,"xml"],[154,30,95,28],[154,31,95,29],[154,34,95,32],[155,8,96,6],[155,9,96,7],[155,10,96,8],[156,6,97,4],[156,7,97,5],[156,8,97,6],[156,15,97,13,"e"],[156,16,97,14],[156,18,97,16],[157,8,98,6],[157,14,98,12,"error"],[157,19,98,17],[157,22,98,20,"e"],[157,23,98,21],[158,8,99,6,"onError"],[158,15,99,13],[158,16,99,14],[159,10,100,8],[159,13,100,11,"error"],[159,18,100,16],[160,10,101,8,"message"],[160,17,101,15],[160,19,101,17],[160,58,101,56,"error"],[160,63,101,61],[160,64,101,62,"message"],[160,71,101,69],[161,8,102,6],[161,9,102,7],[161,10,102,8],[162,6,103,4],[163,4,104,2],[164,4,105,2,"render"],[164,10,105,8,"render"],[164,11,105,8],[164,13,105,11],[165,6,106,4],[165,12,106,10],[166,8,107,6,"props"],[166,13,107,11],[167,8,108,6,"state"],[167,13,108,11],[167,15,108,13],[168,10,109,8,"ast"],[169,8,110,6],[170,6,111,4],[170,7,111,5],[170,10,111,8],[170,14,111,12],[171,6,112,4],[171,13,112,11],[171,26,112,24,"React"],[171,31,112,29],[171,32,112,30,"createElement"],[171,45,112,43],[171,46,112,44,"SvgAst"],[171,52,112,50],[171,54,112,52],[172,8,113,6,"ast"],[172,11,113,9],[172,13,113,11,"ast"],[172,16,113,14],[173,8,114,6,"override"],[173,16,114,14],[173,18,114,16,"props"],[173,23,114,21],[173,24,114,22,"override"],[173,32,114,30],[173,36,114,34,"props"],[174,6,115,4],[174,7,115,5],[174,8,115,6],[175,4,116,2],[176,2,117,0],[177,2,118,7],[177,8,118,13,"SvgFromUri"],[177,18,118,23],[177,27,118,32,"Component"],[177,33,118,41],[177,34,118,41,"Component"],[177,43,118,41],[177,44,118,42],[178,4,119,2,"state"],[178,9,119,7],[178,12,119,10],[179,6,120,4,"xml"],[179,9,120,7],[179,11,120,9],[180,4,121,2],[180,5,121,3],[181,4,122,2,"componentDidMount"],[181,21,122,19,"componentDidMount"],[181,22,122,19],[181,24,122,22],[182,6,123,4],[182,10,123,8],[182,11,123,9,"fetch"],[182,16,123,14],[182,17,123,15],[182,21,123,19],[182,22,123,20,"props"],[182,27,123,25],[182,28,123,26,"uri"],[182,31,123,29],[182,32,123,30],[183,4,124,2],[184,4,125,2,"componentDidUpdate"],[184,22,125,20,"componentDidUpdate"],[184,23,125,21,"prevProps"],[184,32,125,30],[184,34,125,32],[185,6,126,4],[185,12,126,10],[186,8,127,6,"uri"],[187,6,128,4],[187,7,128,5],[187,10,128,8],[187,14,128,12],[187,15,128,13,"props"],[187,20,128,18],[188,6,129,4],[188,10,129,8,"uri"],[188,13,129,11],[188,18,129,16,"prevProps"],[188,27,129,25],[188,28,129,26,"uri"],[188,31,129,29],[188,33,129,31],[189,8,130,6],[189,12,130,10],[189,13,130,11,"fetch"],[189,18,130,16],[189,19,130,17,"uri"],[189,22,130,20],[189,23,130,21],[190,6,131,4],[191,4,132,2],[192,4,133,2],[192,10,133,8,"fetch"],[192,15,133,13,"fetch"],[192,16,133,14,"uri"],[192,19,133,17],[192,21,133,19],[193,6,134,4],[193,10,134,8],[194,8,135,6],[194,12,135,10],[194,13,135,11,"setState"],[194,21,135,19],[194,22,135,20],[195,10,136,8,"xml"],[195,13,136,11],[195,15,136,13,"uri"],[195,18,136,16],[195,21,136,19],[195,27,136,25],[195,31,136,25,"fetchText"],[195,46,136,34],[195,47,136,34,"fetchText"],[195,56,136,34],[195,58,136,35,"uri"],[195,61,136,38],[195,62,136,39],[195,65,136,42],[196,8,137,6],[196,9,137,7],[196,10,137,8],[197,6,138,4],[197,7,138,5],[197,8,138,6],[197,15,138,13,"e"],[197,16,138,14],[197,18,138,16],[198,8,139,6,"console"],[198,15,139,13],[198,16,139,14,"error"],[198,21,139,19],[198,22,139,20,"e"],[198,23,139,21],[198,24,139,22],[199,6,140,4],[200,4,141,2],[201,4,142,2,"render"],[201,10,142,8,"render"],[201,11,142,8],[201,13,142,11],[202,6,143,4],[202,12,143,10],[203,8,144,6,"props"],[203,13,144,11],[204,8,145,6,"state"],[204,13,145,11],[204,15,145,13],[205,10,146,8,"xml"],[206,8,147,6],[207,6,148,4],[207,7,148,5],[207,10,148,8],[207,14,148,12],[208,6,149,4],[208,13,149,11],[208,26,149,24,"React"],[208,31,149,29],[208,32,149,30,"createElement"],[208,45,149,43],[208,46,149,44,"SvgFromXml"],[208,56,149,54],[208,58,149,56],[209,8,150,6,"xml"],[209,11,150,9],[209,13,150,11,"xml"],[209,16,150,14],[210,8,151,6,"override"],[210,16,151,14],[210,18,151,16,"props"],[210,23,151,21],[211,8,152,6,"onError"],[211,15,152,13],[211,17,152,15,"props"],[211,22,152,20],[211,23,152,21,"onError"],[212,6,153,4],[212,7,153,5],[212,8,153,6],[213,4,154,2],[214,2,155,0],[215,2,156,0],[215,8,156,6,"upperCase"],[215,17,156,15],[215,20,156,18,"upperCase"],[215,21,156,19,"_match"],[215,27,156,25],[215,29,156,27,"letter"],[215,35,156,33],[215,40,156,38,"letter"],[215,46,156,44],[215,47,156,45,"toUpperCase"],[215,58,156,56],[215,59,156,57],[215,60,156,58],[216,2,157,7],[216,8,157,13,"camelCase"],[216,17,157,22],[216,20,157,25,"phrase"],[216,26,157,31],[216,30,157,35,"phrase"],[216,36,157,41],[216,37,157,42,"replace"],[216,44,157,49],[216,45,157,50],[216,59,157,64],[216,61,157,66,"upperCase"],[216,70,157,75],[216,71,157,76],[217,2,158,7],[217,11,158,16,"getStyle"],[217,19,158,24,"getStyle"],[217,20,158,25,"string"],[217,26,158,31],[217,28,158,33],[218,4,159,2],[218,10,159,8,"style"],[218,15,159,13],[218,18,159,16],[218,19,159,17],[218,20,159,18],[219,4,160,2],[219,10,160,8,"declarations"],[219,22,160,20],[219,25,160,23,"string"],[219,31,160,29],[219,32,160,30,"split"],[219,37,160,35],[219,38,160,36],[219,41,160,39],[219,42,160,40],[219,43,160,41,"filter"],[219,49,160,47],[219,50,160,48,"v"],[219,51,160,49],[219,55,160,53,"v"],[219,56,160,54],[219,57,160,55,"trim"],[219,61,160,59],[219,62,160,60],[219,63,160,61],[219,64,160,62],[220,4,161,2],[220,10,161,8],[221,6,162,4,"length"],[222,4,163,2],[222,5,163,3],[222,8,163,6,"declarations"],[222,20,163,18],[223,4,164,2],[223,9,164,7],[223,13,164,11,"i"],[223,14,164,12],[223,17,164,15],[223,18,164,16],[223,20,164,18,"i"],[223,21,164,19],[223,24,164,22,"length"],[223,30,164,28],[223,32,164,30,"i"],[223,33,164,31],[223,35,164,33],[223,37,164,35],[224,6,165,4],[224,12,165,10,"declaration"],[224,23,165,21],[224,26,165,24,"declarations"],[224,38,165,36],[224,39,165,37,"i"],[224,40,165,38],[224,41,165,39],[225,6,166,4],[225,10,166,8,"declaration"],[225,21,166,19],[225,22,166,20,"length"],[225,28,166,26],[225,33,166,31],[225,34,166,32],[225,36,166,34],[226,8,167,6],[226,14,167,12,"split"],[226,19,167,17],[226,22,167,20,"declaration"],[226,33,167,31],[226,34,167,32,"split"],[226,39,167,37],[226,40,167,38],[226,43,167,41],[226,44,167,42],[227,8,168,6],[227,14,168,12,"property"],[227,22,168,20],[227,25,168,23,"split"],[227,30,168,28],[227,31,168,29],[227,32,168,30],[227,33,168,31],[228,8,169,6],[228,14,169,12,"value"],[228,19,169,17],[228,22,169,20,"split"],[228,27,169,25],[228,28,169,26],[228,29,169,27],[228,30,169,28],[229,8,170,6,"style"],[229,13,170,11],[229,14,170,12,"camelCase"],[229,23,170,21],[229,24,170,22,"property"],[229,32,170,30],[229,33,170,31,"trim"],[229,37,170,35],[229,38,170,36],[229,39,170,37],[229,40,170,38],[229,41,170,39],[229,44,170,42,"value"],[229,49,170,47],[229,50,170,48,"trim"],[229,54,170,52],[229,55,170,53],[229,56,170,54],[230,6,171,4],[231,4,172,2],[232,4,173,2],[232,11,173,9,"style"],[232,16,173,14],[233,2,174,0],[234,2,175,7],[234,11,175,16,"astToReact"],[234,21,175,26,"astToReact"],[234,22,175,27,"value"],[234,27,175,32],[234,29,175,34,"index"],[234,34,175,39],[234,36,175,41],[235,4,176,2],[235,8,176,6],[235,15,176,13,"value"],[235,20,176,18],[235,25,176,23],[235,33,176,31],[235,35,176,33],[236,6,177,4],[236,12,177,10],[237,8,178,6,"Tag"],[237,11,178,9],[238,8,179,6,"props"],[238,13,179,11],[239,8,180,6,"children"],[240,6,181,4],[240,7,181,5],[240,10,181,8,"value"],[240,15,181,13],[241,6,182,4],[241,10,182,8,"props"],[241,15,182,13],[241,20,182,18],[241,24,182,22],[241,28,182,26,"props"],[241,33,182,31],[241,38,182,36],[241,43,182,41],[241,44,182,42],[241,48,182,46,"props"],[241,53,182,51],[241,54,182,52,"class"],[241,59,182,57],[241,61,182,59],[242,8,183,6,"props"],[242,13,183,11],[242,14,183,12,"className"],[242,23,183,21],[242,26,183,24,"props"],[242,31,183,29],[242,32,183,30,"class"],[242,37,183,35],[243,8,184,6],[243,15,184,13,"props"],[243,20,184,18],[243,21,184,19,"class"],[243,26,184,24],[244,6,185,4],[245,6,186,4],[245,13,186,11],[245,26,186,24,"React"],[245,31,186,29],[245,32,186,30,"createElement"],[245,45,186,43],[245,46,186,44,"Tag"],[245,49,186,47],[245,51,186,49,"_extends"],[245,59,186,57],[245,60,186,58],[246,8,187,6,"key"],[246,11,187,9],[246,13,187,11,"index"],[247,6,188,4],[247,7,188,5],[247,9,188,7,"props"],[247,14,188,12],[247,15,188,13],[247,17,188,15,"children"],[247,25,188,23],[247,26,188,24,"map"],[247,29,188,27],[247,30,188,28,"astToReact"],[247,40,188,38],[247,41,188,39],[247,42,188,40],[248,4,189,2],[249,4,190,2],[249,11,190,9,"value"],[249,16,190,14],[250,2,191,0],[252,2,193,0],[254,2,195,0],[254,11,195,9,"repeat"],[254,17,195,15,"repeat"],[254,18,195,16,"str"],[254,21,195,19],[254,23,195,21,"i"],[254,24,195,22],[254,26,195,24],[255,4,196,2],[255,8,196,6,"result"],[255,14,196,12],[255,17,196,15],[255,19,196,17],[256,4,197,2],[256,11,197,9,"i"],[256,12,197,10],[256,14,197,12],[256,16,197,14],[257,6,198,4,"result"],[257,12,198,10],[257,16,198,14,"str"],[257,19,198,17],[258,4,199,2],[259,4,200,2],[259,11,200,9,"result"],[259,17,200,15],[260,2,201,0],[261,2,202,0],[261,8,202,6,"toSpaces"],[261,16,202,14],[261,19,202,17,"tabs"],[261,23,202,21],[261,27,202,25,"repeat"],[261,33,202,31],[261,34,202,32],[261,38,202,36],[261,40,202,38,"tabs"],[261,44,202,42],[261,45,202,43,"length"],[261,51,202,49],[261,52,202,50],[262,2,203,0],[262,11,203,9,"locate"],[262,17,203,15,"locate"],[262,18,203,16,"source"],[262,24,203,22],[262,26,203,24,"i"],[262,27,203,25],[262,29,203,27],[263,4,204,2],[263,10,204,8,"lines"],[263,15,204,13],[263,18,204,16,"source"],[263,24,204,22],[263,25,204,23,"split"],[263,30,204,28],[263,31,204,29],[263,35,204,33],[263,36,204,34],[264,4,205,2],[264,10,205,8,"nLines"],[264,16,205,14],[264,19,205,17,"lines"],[264,24,205,22],[264,25,205,23,"length"],[264,31,205,29],[265,4,206,2],[265,8,206,6,"column"],[265,14,206,12],[265,17,206,15,"i"],[265,18,206,16],[266,4,207,2],[266,8,207,6,"line"],[266,12,207,10],[266,15,207,13],[266,16,207,14],[267,4,208,2],[267,11,208,9,"line"],[267,15,208,13],[267,18,208,16,"nLines"],[267,24,208,22],[267,26,208,24,"line"],[267,30,208,28],[267,32,208,30],[267,34,208,32],[268,6,209,4],[268,12,209,10],[269,8,210,6,"length"],[270,6,211,4],[270,7,211,5],[270,10,211,8,"lines"],[270,15,211,13],[270,16,211,14,"line"],[270,20,211,18],[270,21,211,19],[271,6,212,4],[271,10,212,8,"column"],[271,16,212,14],[271,20,212,18,"length"],[271,26,212,24],[271,28,212,26],[272,8,213,6,"column"],[272,14,213,12],[272,18,213,16,"length"],[272,24,213,22],[273,6,214,4],[273,7,214,5],[273,13,214,11],[274,8,215,6],[275,6,216,4],[276,4,217,2],[277,4,218,2],[277,10,218,8,"before"],[277,16,218,14],[277,19,218,17,"source"],[277,25,218,23],[277,26,218,24,"slice"],[277,31,218,29],[277,32,218,30],[277,33,218,31],[277,35,218,33,"i"],[277,36,218,34],[277,37,218,35],[277,38,218,36,"replace"],[277,45,218,43],[277,46,218,44],[277,52,218,50],[277,54,218,52,"toSpaces"],[277,62,218,60],[277,63,218,61],[278,4,219,2],[278,10,219,8,"beforeExec"],[278,20,219,18],[278,23,219,21],[278,34,219,32],[278,35,219,33,"exec"],[278,39,219,37],[278,40,219,38,"before"],[278,46,219,44],[278,47,219,45],[279,4,220,2],[279,10,220,8,"beforeLine"],[279,20,220,18],[279,23,220,21,"beforeExec"],[279,33,220,31],[279,37,220,35,"beforeExec"],[279,47,220,45],[279,48,220,46],[279,49,220,47],[279,50,220,48],[279,54,220,52],[279,56,220,54],[280,4,221,2],[280,10,221,8,"after"],[280,15,221,13],[280,18,221,16,"source"],[280,24,221,22],[280,25,221,23,"slice"],[280,30,221,28],[280,31,221,29,"i"],[280,32,221,30],[280,33,221,31],[281,4,222,2],[281,10,222,8,"afterExec"],[281,19,222,17],[281,22,222,20],[281,32,222,30],[281,33,222,31,"exec"],[281,37,222,35],[281,38,222,36,"after"],[281,43,222,41],[281,44,222,42],[282,4,223,2],[282,10,223,8,"afterLine"],[282,19,223,17],[282,22,223,20,"afterExec"],[282,31,223,29],[282,35,223,33,"afterExec"],[282,44,223,42],[282,45,223,43],[282,46,223,44],[282,47,223,45],[283,4,224,2],[283,10,224,8,"pad"],[283,13,224,11],[283,16,224,14,"repeat"],[283,22,224,20],[283,23,224,21],[283,26,224,24],[283,28,224,26,"beforeLine"],[283,38,224,36],[283,39,224,37,"length"],[283,45,224,43],[283,46,224,44],[284,4,225,2],[284,10,225,8,"snippet"],[284,17,225,15],[284,20,225,18],[284,23,225,21,"beforeLine"],[284,33,225,31],[284,36,225,34,"afterLine"],[284,45,225,43],[284,50,225,48,"pad"],[284,53,225,51],[284,56,225,54],[285,4,226,2],[285,11,226,9],[286,6,227,4,"line"],[286,10,227,8],[287,6,228,4,"column"],[287,12,228,10],[288,6,229,4,"snippet"],[289,4,230,2],[289,5,230,3],[290,2,231,0],[291,2,232,0],[291,8,232,6,"validNameCharacters"],[291,27,232,25],[291,30,232,28],[291,46,232,44],[292,2,233,0],[292,8,233,6,"commentStart"],[292,20,233,18],[292,23,233,21],[292,29,233,27],[293,2,234,0],[293,8,234,6,"whitespace"],[293,18,234,16],[293,21,234,19],[293,33,234,31],[294,2,235,0],[294,8,235,6,"quotemarks"],[294,18,235,16],[294,21,235,19],[294,27,235,25],[295,2,236,7],[295,11,236,16,"parse"],[295,16,236,21,"parse"],[295,17,236,22,"source"],[295,23,236,28],[295,25,236,30,"middleware"],[295,35,236,40],[295,37,236,42],[296,4,237,2],[296,10,237,8,"length"],[296,16,237,14],[296,19,237,17,"source"],[296,25,237,23],[296,26,237,24,"length"],[296,32,237,30],[297,4,238,2],[297,8,238,6,"currentElement"],[297,22,238,20],[297,25,238,23],[297,29,238,27],[298,4,239,2],[298,8,239,6,"state"],[298,13,239,11],[298,16,239,14,"metadata"],[298,24,239,22],[299,4,240,2],[299,8,240,6,"children"],[299,16,240,14],[299,19,240,17],[299,23,240,21],[300,4,241,2],[300,8,241,6,"root"],[300,12,241,10],[301,4,242,2],[301,10,242,8,"stack"],[301,15,242,13],[301,18,242,16],[301,20,242,18],[302,4,243,2],[302,13,243,11,"error"],[302,18,243,16,"error"],[302,19,243,17,"message"],[302,26,243,24],[302,28,243,26],[303,6,244,4],[303,12,244,10],[304,8,245,6,"line"],[304,12,245,10],[305,8,246,6,"column"],[305,14,246,12],[306,8,247,6,"snippet"],[307,6,248,4],[307,7,248,5],[307,10,248,8,"locate"],[307,16,248,14],[307,17,248,15,"source"],[307,23,248,21],[307,25,248,23,"i"],[307,26,248,24],[307,27,248,25],[308,6,249,4],[308,12,249,10],[308,16,249,14,"Error"],[308,21,249,19],[308,22,249,20],[308,25,249,23,"message"],[308,32,249,30],[308,37,249,35,"line"],[308,41,249,39],[308,45,249,43,"column"],[308,51,249,49],[308,125,249,123,"snippet"],[308,132,249,130],[308,134,249,132],[308,135,249,133],[309,4,250,2],[310,4,251,2],[310,13,251,11,"metadata"],[310,21,251,19,"metadata"],[310,22,251,19],[310,24,251,22],[311,6,252,4],[311,13,252,11,"i"],[311,14,252,12],[311,17,252,15],[311,18,252,16],[311,21,252,19,"length"],[311,27,252,25],[311,32,252,30,"source"],[311,38,252,36],[311,39,252,37,"i"],[311,40,252,38],[311,41,252,39],[311,46,252,44],[311,49,252,47],[311,53,252,51],[311,55,252,53,"validNameCharacters"],[311,74,252,72],[311,75,252,73,"test"],[311,79,252,77],[311,80,252,78,"source"],[311,86,252,84],[311,87,252,85,"i"],[311,88,252,86],[311,91,252,89],[311,92,252,90],[311,93,252,91],[311,94,252,92],[311,98,252,96,"commentStart"],[311,110,252,108],[311,111,252,109,"test"],[311,115,252,113],[311,116,252,114,"source"],[311,122,252,120],[311,123,252,121,"slice"],[311,128,252,126],[311,129,252,127,"i"],[311,130,252,128],[311,132,252,130,"i"],[311,133,252,131],[311,136,252,134],[311,137,252,135],[311,138,252,136],[311,139,252,137],[311,140,252,138],[311,141,252,139],[311,143,252,141],[312,8,253,6,"i"],[312,9,253,7],[312,11,253,9],[313,6,254,4],[314,6,255,4],[314,13,255,11,"neutral"],[314,20,255,18],[314,21,255,19],[314,22,255,20],[315,4,256,2],[316,4,257,2],[316,13,257,11,"neutral"],[316,20,257,18,"neutral"],[316,21,257,18],[316,23,257,21],[317,6,258,4],[317,10,258,8,"text"],[317,14,258,12],[317,17,258,15],[317,19,258,17],[318,6,259,4],[318,10,259,8,"char"],[318,14,259,12],[319,6,260,4],[319,13,260,11,"i"],[319,14,260,12],[319,17,260,15,"length"],[319,23,260,21],[319,27,260,25],[319,28,260,26,"char"],[319,32,260,30],[319,35,260,33,"source"],[319,41,260,39],[319,42,260,40,"i"],[319,43,260,41],[319,44,260,42],[319,50,260,48],[319,53,260,51],[319,55,260,53],[320,8,261,6,"text"],[320,12,261,10],[320,16,261,14,"char"],[320,20,261,18],[321,8,262,6,"i"],[321,9,262,7],[321,13,262,11],[321,14,262,12],[322,6,263,4],[323,6,264,4],[323,10,264,8],[323,14,264,12],[323,15,264,13,"test"],[323,19,264,17],[323,20,264,18,"text"],[323,24,264,22],[323,25,264,23],[323,27,264,25],[324,8,265,6,"children"],[324,16,265,14],[324,17,265,15,"push"],[324,21,265,19],[324,22,265,20,"text"],[324,26,265,24],[324,27,265,25],[325,6,266,4],[326,6,267,4],[326,10,267,8,"source"],[326,16,267,14],[326,17,267,15,"i"],[326,18,267,16],[326,19,267,17],[326,24,267,22],[326,27,267,25],[326,29,267,27],[327,8,268,6],[327,15,268,13,"openingTag"],[327,25,268,23],[328,6,269,4],[329,6,270,4],[329,13,270,11,"neutral"],[329,20,270,18],[330,4,271,2],[331,4,272,2],[331,13,272,11,"openingTag"],[331,23,272,21,"openingTag"],[331,24,272,21],[331,26,272,24],[332,6,273,4],[332,12,273,10,"char"],[332,16,273,14],[332,19,273,17,"source"],[332,25,273,23],[332,26,273,24,"i"],[332,27,273,25],[332,28,273,26],[333,6,274,4],[333,10,274,8,"char"],[333,14,274,12],[333,19,274,17],[333,22,274,20],[333,24,274,22],[334,8,275,6],[334,15,275,13,"neutral"],[334,22,275,20],[335,6,276,4],[335,7,276,5],[335,8,276,6],[337,6,278,4],[337,10,278,8,"char"],[337,14,278,12],[337,19,278,17],[337,22,278,20],[337,24,278,22],[338,8,279,6],[338,14,279,12,"start"],[338,19,279,17],[338,22,279,20,"i"],[338,23,279,21],[338,26,279,24],[338,27,279,25],[339,8,280,6],[339,12,280,10,"source"],[339,18,280,16],[339,19,280,17,"slice"],[339,24,280,22],[339,25,280,23,"start"],[339,30,280,28],[339,32,280,30,"i"],[339,33,280,31],[339,36,280,34],[339,37,280,35],[339,38,280,36],[339,43,280,41],[339,47,280,45],[339,49,280,47],[340,10,281,8],[340,17,281,15,"comment"],[340,24,281,22],[341,8,282,6],[342,8,283,6],[342,14,283,12,"end"],[342,17,283,15],[342,20,283,18,"i"],[342,21,283,19],[342,24,283,22],[342,25,283,23],[343,8,284,6],[343,12,284,10,"source"],[343,18,284,16],[343,19,284,17,"slice"],[343,24,284,22],[343,25,284,23,"start"],[343,30,284,28],[343,32,284,30,"end"],[343,35,284,33],[343,36,284,34],[343,41,284,39],[343,50,284,48],[343,52,284,50],[344,10,285,8],[344,17,285,15,"cdata"],[344,22,285,20],[345,8,286,6],[346,8,287,6],[346,12,287,10],[346,22,287,20],[346,23,287,21,"test"],[346,27,287,25],[346,28,287,26,"source"],[346,34,287,32],[346,35,287,33,"slice"],[346,40,287,38],[346,41,287,39,"start"],[346,46,287,44],[346,48,287,46,"end"],[346,51,287,49],[346,52,287,50],[346,53,287,51],[346,55,287,53],[347,10,288,8],[347,17,288,15,"neutral"],[347,24,288,22],[348,8,289,6],[349,6,290,4],[350,6,291,4],[350,10,291,8,"char"],[350,14,291,12],[350,19,291,17],[350,22,291,20],[350,24,291,22],[351,8,292,6],[351,15,292,13,"closingTag"],[351,25,292,23],[352,6,293,4],[353,6,294,4],[353,12,294,10,"tag"],[353,15,294,13],[353,18,294,16,"getName"],[353,25,294,23],[353,26,294,24],[353,27,294,25],[354,6,295,4],[354,12,295,10,"props"],[354,17,295,15],[354,20,295,18],[354,21,295,19],[354,22,295,20],[355,6,296,4],[355,12,296,10,"element"],[355,19,296,17],[355,22,296,20],[356,8,297,6,"tag"],[356,11,297,9],[357,8,298,6,"props"],[357,13,298,11],[358,8,299,6,"children"],[358,16,299,14],[358,18,299,16],[358,20,299,18],[359,8,300,6,"parent"],[359,14,300,12],[359,16,300,14,"currentElement"],[359,30,300,28],[360,8,301,6,"Tag"],[360,11,301,9],[360,13,301,11,"tags"],[360,21,301,15],[360,22,301,15,"tags"],[360,26,301,15],[360,27,301,16,"tag"],[360,30,301,19],[360,31,301,20],[360,35,301,24,"missingTag"],[361,6,302,4],[361,7,302,5],[362,6,303,4],[362,10,303,8,"currentElement"],[362,24,303,22],[362,26,303,24],[363,8,304,6,"children"],[363,16,304,14],[363,17,304,15,"push"],[363,21,304,19],[363,22,304,20,"element"],[363,29,304,27],[363,30,304,28],[364,6,305,4],[364,7,305,5],[364,13,305,11],[365,8,306,6,"root"],[365,12,306,10],[365,15,306,13,"element"],[365,22,306,20],[366,6,307,4],[367,6,308,4,"getAttributes"],[367,19,308,17],[367,20,308,18,"props"],[367,25,308,23],[367,26,308,24],[368,6,309,4],[368,12,309,10],[369,8,310,6,"style"],[370,6,311,4],[370,7,311,5],[370,10,311,8,"props"],[370,15,311,13],[371,6,312,4],[371,10,312,8],[371,17,312,15,"style"],[371,22,312,20],[371,27,312,25],[371,35,312,33],[371,37,312,35],[372,8,313,6,"element"],[372,15,313,13],[372,16,313,14,"styles"],[372,22,313,20],[372,25,313,23,"style"],[372,30,313,28],[373,8,314,6,"props"],[373,13,314,11],[373,14,314,12,"style"],[373,19,314,17],[373,22,314,20,"getStyle"],[373,30,314,28],[373,31,314,29,"style"],[373,36,314,34],[373,37,314,35],[374,6,315,4],[375,6,316,4],[375,10,316,8,"selfClosing"],[375,21,316,19],[375,24,316,22],[375,29,316,27],[376,6,317,4],[376,10,317,8,"source"],[376,16,317,14],[376,17,317,15,"i"],[376,18,317,16],[376,19,317,17],[376,24,317,22],[376,27,317,25],[376,29,317,27],[377,8,318,6,"i"],[377,9,318,7],[377,13,318,11],[377,14,318,12],[378,8,319,6,"selfClosing"],[378,19,319,17],[378,22,319,20],[378,26,319,24],[379,6,320,4],[380,6,321,4],[380,10,321,8,"source"],[380,16,321,14],[380,17,321,15,"i"],[380,18,321,16],[380,19,321,17],[380,24,321,22],[380,27,321,25],[380,29,321,27],[381,8,322,6,"error"],[381,13,322,11],[381,14,322,12],[381,26,322,24],[381,27,322,25],[382,6,323,4],[383,6,324,4],[383,10,324,8],[383,11,324,9,"selfClosing"],[383,22,324,20],[383,24,324,22],[384,8,325,6,"currentElement"],[384,22,325,20],[384,25,325,23,"element"],[384,32,325,30],[385,8,326,6],[385,9,326,7],[386,10,327,8,"children"],[387,8,328,6],[387,9,328,7],[387,12,328,10,"element"],[387,19,328,17],[388,8,329,6,"stack"],[388,13,329,11],[388,14,329,12,"push"],[388,18,329,16],[388,19,329,17,"element"],[388,26,329,24],[388,27,329,25],[389,6,330,4],[390,6,331,4],[390,13,331,11,"neutral"],[390,20,331,18],[391,4,332,2],[392,4,333,2],[392,13,333,11,"comment"],[392,20,333,18,"comment"],[392,21,333,18],[392,23,333,21],[393,6,334,4],[393,12,334,10,"index"],[393,17,334,15],[393,20,334,18,"source"],[393,26,334,24],[393,27,334,25,"indexOf"],[393,34,334,32],[393,35,334,33],[393,40,334,38],[393,42,334,40,"i"],[393,43,334,41],[393,44,334,42],[394,6,335,4],[394,10,335,8],[394,11,335,9],[394,12,335,10,"index"],[394,17,335,15],[394,19,335,17],[395,8,336,6,"error"],[395,13,336,11],[395,14,336,12],[395,28,336,26],[395,29,336,27],[396,6,337,4],[397,6,338,4,"i"],[397,7,338,5],[397,10,338,8,"index"],[397,15,338,13],[397,18,338,16],[397,19,338,17],[398,6,339,4],[398,13,339,11,"neutral"],[398,20,339,18],[399,4,340,2],[400,4,341,2],[400,13,341,11,"cdata"],[400,18,341,16,"cdata"],[400,19,341,16],[400,21,341,19],[401,6,342,4],[401,12,342,10,"index"],[401,17,342,15],[401,20,342,18,"source"],[401,26,342,24],[401,27,342,25,"indexOf"],[401,34,342,32],[401,35,342,33],[401,40,342,38],[401,42,342,40,"i"],[401,43,342,41],[401,44,342,42],[402,6,343,4],[402,10,343,8],[402,11,343,9],[402,12,343,10,"index"],[402,17,343,15],[402,19,343,17],[403,8,344,6,"error"],[403,13,344,11],[403,14,344,12],[403,28,344,26],[403,29,344,27],[404,6,345,4],[405,6,346,4,"children"],[405,14,346,12],[405,15,346,13,"push"],[405,19,346,17],[405,20,346,18,"source"],[405,26,346,24],[405,27,346,25,"slice"],[405,32,346,30],[405,33,346,31,"i"],[405,34,346,32],[405,37,346,35],[405,38,346,36],[405,40,346,38,"index"],[405,45,346,43],[405,46,346,44],[405,47,346,45],[406,6,347,4,"i"],[406,7,347,5],[406,10,347,8,"index"],[406,15,347,13],[406,18,347,16],[406,19,347,17],[407,6,348,4],[407,13,348,11,"neutral"],[407,20,348,18],[408,4,349,2],[409,4,350,2],[409,13,350,11,"closingTag"],[409,23,350,21,"closingTag"],[409,24,350,21],[409,26,350,24],[410,6,351,4],[410,12,351,10,"tag"],[410,15,351,13],[410,18,351,16,"getName"],[410,25,351,23],[410,26,351,24],[410,27,351,25],[411,6,352,4],[411,10,352,8],[411,11,352,9,"tag"],[411,14,352,12],[411,16,352,14],[412,8,353,6,"error"],[412,13,353,11],[412,14,353,12],[412,33,353,31],[412,34,353,32],[413,6,354,4],[414,6,355,4],[414,10,355,8,"currentElement"],[414,24,355,22],[414,28,355,26,"tag"],[414,31,355,29],[414,36,355,34,"currentElement"],[414,50,355,48],[414,51,355,49,"tag"],[414,54,355,52],[414,56,355,54],[415,8,356,6,"error"],[415,13,356,11],[415,14,356,12],[415,40,356,38,"tag"],[415,43,356,41],[415,70,356,68,"currentElement"],[415,84,356,82],[415,85,356,83,"tag"],[415,88,356,86],[415,91,356,89],[415,92,356,90],[416,6,357,4],[417,6,358,4,"allowSpaces"],[417,17,358,15],[417,18,358,16],[417,19,358,17],[418,6,359,4],[418,10,359,8,"source"],[418,16,359,14],[418,17,359,15,"i"],[418,18,359,16],[418,19,359,17],[418,24,359,22],[418,27,359,25],[418,29,359,27],[419,8,360,6,"error"],[419,13,360,11],[419,14,360,12],[419,26,360,24],[419,27,360,25],[420,6,361,4],[421,6,362,4,"stack"],[421,11,362,9],[421,12,362,10,"pop"],[421,15,362,13],[421,16,362,14],[421,17,362,15],[422,6,363,4,"currentElement"],[422,20,363,18],[422,23,363,21,"stack"],[422,28,363,26],[422,29,363,27,"stack"],[422,34,363,32],[422,35,363,33,"length"],[422,41,363,39],[422,44,363,42],[422,45,363,43],[422,46,363,44],[423,6,364,4],[423,10,364,8,"currentElement"],[423,24,364,22],[423,26,364,24],[424,8,365,6],[424,9,365,7],[425,10,366,8,"children"],[426,8,367,6],[426,9,367,7],[426,12,367,10,"currentElement"],[426,26,367,24],[427,6,368,4],[428,6,369,4],[428,13,369,11,"neutral"],[428,20,369,18],[429,4,370,2],[430,4,371,2],[430,13,371,11,"getName"],[430,20,371,18,"getName"],[430,21,371,18],[430,23,371,21],[431,6,372,4],[431,10,372,8,"name"],[431,14,372,12],[431,17,372,15],[431,19,372,17],[432,6,373,4],[432,10,373,8,"char"],[432,14,373,12],[433,6,374,4],[433,13,374,11,"i"],[433,14,374,12],[433,17,374,15,"length"],[433,23,374,21],[433,27,374,25,"validNameCharacters"],[433,46,374,44],[433,47,374,45,"test"],[433,51,374,49],[433,52,374,50,"char"],[433,56,374,54],[433,59,374,57,"source"],[433,65,374,63],[433,66,374,64,"i"],[433,67,374,65],[433,68,374,66],[433,69,374,67],[433,71,374,69],[434,8,375,6,"name"],[434,12,375,10],[434,16,375,14,"char"],[434,20,375,18],[435,8,376,6,"i"],[435,9,376,7],[435,13,376,11],[435,14,376,12],[436,6,377,4],[437,6,378,4],[437,13,378,11,"name"],[437,17,378,15],[438,4,379,2],[439,4,380,2],[439,13,380,11,"getAttributes"],[439,26,380,24,"getAttributes"],[439,27,380,25,"props"],[439,32,380,30],[439,34,380,32],[440,6,381,4],[440,13,381,11,"i"],[440,14,381,12],[440,17,381,15,"length"],[440,23,381,21],[440,25,381,23],[441,8,382,6],[441,12,382,10],[441,13,382,11,"whitespace"],[441,23,382,21],[441,24,382,22,"test"],[441,28,382,26],[441,29,382,27,"source"],[441,35,382,33],[441,36,382,34,"i"],[441,37,382,35],[441,38,382,36],[441,39,382,37],[441,41,382,39],[442,10,383,8],[443,8,384,6],[444,8,385,6,"allowSpaces"],[444,19,385,17],[444,20,385,18],[444,21,385,19],[445,8,386,6],[445,14,386,12,"name"],[445,18,386,16],[445,21,386,19,"getName"],[445,28,386,26],[445,29,386,27],[445,30,386,28],[446,8,387,6],[446,12,387,10],[446,13,387,11,"name"],[446,17,387,15],[446,19,387,17],[447,10,388,8],[448,8,389,6],[449,8,390,6],[449,12,390,10,"value"],[449,17,390,15],[449,20,390,18],[449,24,390,22],[450,8,391,6,"allowSpaces"],[450,19,391,17],[450,20,391,18],[450,21,391,19],[451,8,392,6],[451,12,392,10,"source"],[451,18,392,16],[451,19,392,17,"i"],[451,20,392,18],[451,21,392,19],[451,26,392,24],[451,29,392,27],[451,31,392,29],[452,10,393,8,"i"],[452,11,393,9],[452,15,393,13],[452,16,393,14],[453,10,394,8,"allowSpaces"],[453,21,394,19],[453,22,394,20],[453,23,394,21],[454,10,395,8,"value"],[454,15,395,13],[454,18,395,16,"getAttributeValue"],[454,35,395,33],[454,36,395,34],[454,37,395,35],[455,10,396,8],[455,14,396,12,"name"],[455,18,396,16],[455,23,396,21],[455,27,396,25],[455,31,396,29],[455,32,396,30,"isNaN"],[455,37,396,35],[455,38,396,36],[455,39,396,37,"value"],[455,44,396,42],[455,45,396,43],[455,49,396,47,"value"],[455,54,396,52],[455,55,396,53,"trim"],[455,59,396,57],[455,60,396,58],[455,61,396,59],[455,66,396,64],[455,68,396,66],[455,70,396,68],[456,12,397,10,"value"],[456,17,397,15],[456,20,397,18],[456,21,397,19,"value"],[456,26,397,24],[457,10,398,8],[458,8,399,6],[459,8,400,6,"props"],[459,13,400,11],[459,14,400,12,"camelCase"],[459,23,400,21],[459,24,400,22,"name"],[459,28,400,26],[459,29,400,27],[459,30,400,28],[459,33,400,31,"value"],[459,38,400,36],[460,6,401,4],[461,4,402,2],[462,4,403,2],[462,13,403,11,"getAttributeValue"],[462,30,403,28,"getAttributeValue"],[462,31,403,28],[462,33,403,31],[463,6,404,4],[463,13,404,11,"quotemarks"],[463,23,404,21],[463,24,404,22,"test"],[463,28,404,26],[463,29,404,27,"source"],[463,35,404,33],[463,36,404,34,"i"],[463,37,404,35],[463,38,404,36],[463,39,404,37],[463,42,404,40,"getQuotedAttributeValue"],[463,65,404,63],[463,66,404,64],[463,67,404,65],[463,70,404,68,"getUnquotedAttributeValue"],[463,95,404,93],[463,96,404,94],[463,97,404,95],[464,4,405,2],[465,4,406,2],[465,13,406,11,"getUnquotedAttributeValue"],[465,38,406,36,"getUnquotedAttributeValue"],[465,39,406,36],[465,41,406,39],[466,6,407,4],[466,10,407,8,"value"],[466,15,407,13],[466,18,407,16],[466,20,407,18],[467,6,408,4],[467,9,408,7],[468,8,409,6],[468,14,409,12,"char"],[468,18,409,16],[468,21,409,19,"source"],[468,27,409,25],[468,28,409,26,"i"],[468,29,409,27],[468,30,409,28],[469,8,410,6],[469,12,410,10,"char"],[469,16,410,14],[469,21,410,19],[469,24,410,22],[469,28,410,26,"char"],[469,32,410,30],[469,37,410,35],[469,40,410,38],[469,44,410,42,"char"],[469,48,410,46],[469,53,410,51],[469,56,410,54],[469,58,410,56],[470,10,411,8],[470,17,411,15,"value"],[470,22,411,20],[471,8,412,6],[472,8,413,6,"value"],[472,13,413,11],[472,17,413,15,"char"],[472,21,413,19],[473,8,414,6,"i"],[473,9,414,7],[473,13,414,11],[473,14,414,12],[474,6,415,4],[474,7,415,5],[474,15,415,13,"i"],[474,16,415,14],[474,19,415,17,"length"],[474,25,415,23],[475,6,416,4],[475,13,416,11,"value"],[475,18,416,16],[476,4,417,2],[477,4,418,2],[477,13,418,11,"getQuotedAttributeValue"],[477,36,418,34,"getQuotedAttributeValue"],[477,37,418,34],[477,39,418,37],[478,6,419,4],[478,12,419,10,"quotemark"],[478,21,419,19],[478,24,419,22,"source"],[478,30,419,28],[478,31,419,29,"i"],[478,32,419,30],[478,34,419,32],[478,35,419,33],[479,6,420,4],[479,10,420,8,"value"],[479,15,420,13],[479,18,420,16],[479,20,420,18],[480,6,421,4],[480,10,421,8,"escaped"],[480,17,421,15],[480,20,421,18],[480,25,421,23],[481,6,422,4],[481,13,422,11,"i"],[481,14,422,12],[481,17,422,15,"length"],[481,23,422,21],[481,25,422,23],[482,8,423,6],[482,14,423,12,"char"],[482,18,423,16],[482,21,423,19,"source"],[482,27,423,25],[482,28,423,26,"i"],[482,29,423,27],[482,31,423,29],[482,32,423,30],[483,8,424,6],[483,12,424,10,"char"],[483,16,424,14],[483,21,424,19,"quotemark"],[483,30,424,28],[483,34,424,32],[483,35,424,33,"escaped"],[483,42,424,40],[483,44,424,42],[484,10,425,8],[484,17,425,15,"value"],[484,22,425,20],[485,8,426,6],[486,8,427,6],[486,12,427,10,"char"],[486,16,427,14],[486,21,427,19],[486,25,427,23],[486,29,427,27],[486,30,427,28,"escaped"],[486,37,427,35],[486,39,427,37],[487,10,428,8,"escaped"],[487,17,428,15],[487,20,428,18],[487,24,428,22],[488,8,429,6],[489,8,430,6,"value"],[489,13,430,11],[489,17,430,15,"escaped"],[489,24,430,22],[489,27,430,25],[489,32,430,30,"char"],[489,36,430,34],[489,38,430,36],[489,41,430,39,"char"],[489,45,430,43],[490,8,431,6,"escaped"],[490,15,431,13],[490,18,431,16],[490,23,431,21],[491,6,432,4],[492,6,433,4],[492,13,433,11,"value"],[492,18,433,16],[493,4,434,2],[494,4,435,2],[494,13,435,11,"allowSpaces"],[494,24,435,22,"allowSpaces"],[494,25,435,22],[494,27,435,25],[495,6,436,4],[495,13,436,11,"i"],[495,14,436,12],[495,17,436,15,"length"],[495,23,436,21],[495,27,436,25,"whitespace"],[495,37,436,35],[495,38,436,36,"test"],[495,42,436,40],[495,43,436,41,"source"],[495,49,436,47],[495,50,436,48,"i"],[495,51,436,49],[495,52,436,50],[495,53,436,51],[495,55,436,53],[496,8,437,6,"i"],[496,9,437,7],[496,13,437,11],[496,14,437,12],[497,6,438,4],[498,4,439,2],[499,4,440,2],[499,8,440,6,"i"],[499,9,440,7],[499,12,440,10],[499,13,440,11],[500,4,441,2],[500,11,441,9,"i"],[500,12,441,10],[500,15,441,13,"length"],[500,21,441,19],[500,23,441,21],[501,6,442,4],[501,10,442,8],[501,11,442,9,"state"],[501,16,442,14],[501,18,442,16],[502,8,443,6,"error"],[502,13,443,11],[502,14,443,12],[502,36,443,34],[502,37,443,35],[503,6,444,4],[504,6,445,4,"state"],[504,11,445,9],[504,14,445,12,"state"],[504,19,445,17],[504,20,445,18],[504,21,445,19],[505,6,446,4,"i"],[505,7,446,5],[505,11,446,9],[505,12,446,10],[506,4,447,2],[507,4,448,2],[507,8,448,6,"state"],[507,13,448,11],[507,18,448,16,"neutral"],[507,25,448,23],[507,27,448,25],[508,6,449,4,"error"],[508,11,449,9],[508,12,449,10],[508,37,449,35],[508,38,449,36],[509,4,450,2],[510,4,451,2],[510,8,451,6,"root"],[510,12,451,10],[510,14,451,12],[511,6,452,4],[511,12,452,10,"xml"],[511,15,452,13],[511,18,452,16],[511,19,452,17,"middleware"],[511,29,452,27],[511,32,452,30,"middleware"],[511,42,452,40],[511,43,452,41,"root"],[511,47,452,45],[511,48,452,46],[511,51,452,49,"root"],[511,55,452,53],[511,60,452,58,"root"],[511,64,452,62],[512,6,453,4],[512,12,453,10,"ast"],[512,15,453,13],[512,18,453,16,"xml"],[512,21,453,19],[512,22,453,20,"children"],[512,30,453,28],[512,31,453,29,"map"],[512,34,453,32],[512,35,453,33,"astToReact"],[512,45,453,43],[512,46,453,44],[513,6,454,4],[513,12,454,10,"jsx"],[513,15,454,13],[513,18,454,16,"xml"],[513,21,454,19],[514,6,455,4,"jsx"],[514,9,455,7],[514,10,455,8,"children"],[514,18,455,16],[514,21,455,19,"ast"],[514,24,455,22],[515,6,456,4],[515,13,456,11,"jsx"],[515,16,456,14],[516,4,457,2],[517,4,458,2],[517,11,458,9],[517,15,458,13],[518,2,459,0],[519,0,459,1],[519,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","SvgUri","useEffect$argument_0","fetchText.then$argument_0","fetchText.then._catch$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","string.split.filter$argument_0","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA,+EC,iKD,oCE;ACK;CDE;OEC;CFa;OGE;wBCQ,sCD;CHS;OKC;YCS;8BCC;KDI,QE;KFG;GDE;CLS;OSI;ECI;GDE;EEC;GFO;EGC;GHe;EIC;GJW;CTC;OcC;ECI;GDE;EEC;GFO;EGC;GHQ;EIC;GJY;CdC;kBmBC,wCnB;yBoBC,mDpB;OqBC;gDCE,aD;CrBc;OuBC;CvBgB;AwBI;CxBM;iByBC,iCzB;A0BC;C1B4B;O2BK;ECO;GDO;EEC;GFK;EGC;GHc;EIC;GJ4D;EKC;GLO;EMC;GNQ;EOC;GPoB;EQC;GRQ;ESC;GTsB;EUC;GVE;EWC;GXW;EYC;GZgB;EaC;GbI;C3BoB"},"hasCjsExports":false},"type":"js/module"}]}