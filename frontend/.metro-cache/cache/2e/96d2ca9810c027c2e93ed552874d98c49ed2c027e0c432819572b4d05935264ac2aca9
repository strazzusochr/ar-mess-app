{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":31,"index":308}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./utils/fetchData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":374},"end":{"line":4,"column":46,"index":420}}],"key":"bvuZtUrCBORS7e0mnZMXcup8nyI=","exportNames":["*"],"imports":1}},{"name":"./xmlTags","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":33,"index":454}}],"key":"UjGGlBNdDx1pDIGgBuGLg90Be9Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.SvgUri = SvgUri;\n  Object.defineProperty(exports, \"SvgFromXml\", {\n    enumerable: true,\n    get: function () {\n      return SvgFromXml;\n    }\n  });\n  Object.defineProperty(exports, \"SvgFromUri\", {\n    enumerable: true,\n    get: function () {\n      return SvgFromUri;\n    }\n  });\n  Object.defineProperty(exports, \"camelCase\", {\n    enumerable: true,\n    get: function () {\n      return camelCase;\n    }\n  });\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = parse;\n  Object.defineProperty(exports, \"tags\", {\n    enumerable: true,\n    get: function () {\n      return _xmlTags.tags;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _utilsFetchData = require(_dependencyMap[1], \"./utils/fetchData\");\n  var _xmlTags = require(_dependencyMap[2], \"./xmlTags\");\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  function missingTag() {\n    return null;\n  }\n  function SvgAst({\n    ast,\n    override\n  }) {\n    if (!ast) {\n      return null;\n    }\n    const {\n      props,\n      children\n    } = ast;\n    const Svg = _xmlTags.tags.svg;\n    return /*#__PURE__*/React.createElement(Svg, _extends({}, props, override), children);\n  }\n  const err = console.error.bind(console);\n  function SvgXml(props) {\n    const {\n      onError = err,\n      xml,\n      override,\n      fallback\n    } = props;\n    try {\n      const ast = (0, _react.useMemo)(() => xml !== null ? parse(xml) : null, [xml]);\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: override || props\n      });\n    } catch (error) {\n      onError(error);\n      return fallback ?? null;\n    }\n  }\n  function SvgUri(props) {\n    const {\n      onError = err,\n      uri,\n      onLoad,\n      fallback\n    } = props;\n    const [xml, setXml] = (0, _react.useState)(null);\n    const [isError, setIsError] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      uri ? (0, _utilsFetchData.fetchText)(uri).then(data => {\n        setXml(data);\n        isError && setIsError(false);\n        onLoad === null || onLoad === void 0 || onLoad();\n      }).catch(e => {\n        onError(e);\n        setIsError(true);\n      }) : setXml(null);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onError, uri, onLoad]);\n    if (isError) {\n      return fallback ?? null;\n    }\n    return /*#__PURE__*/React.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      fallback: fallback\n    });\n  }\n\n  // Extending Component is required for Animated support.\n\n  class SvgFromXml extends _react.Component {\n    state = {\n      ast: null\n    };\n    componentDidMount() {\n      this.parse(this.props.xml);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        xml\n      } = this.props;\n      if (xml !== prevProps.xml) {\n        this.parse(xml);\n      }\n    }\n    parse(xml) {\n      const {\n        onError = err\n      } = this.props;\n      try {\n        this.setState({\n          ast: xml ? parse(xml) : null\n        });\n      } catch (e) {\n        const error = e;\n        onError(Object.assign({}, error, {\n          message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`\n        }));\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          ast\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: props.override || props\n      });\n    }\n  }\n  class SvgFromUri extends _react.Component {\n    state = {\n      xml: null\n    };\n    componentDidMount() {\n      this.fetch(this.props.uri);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        uri\n      } = this.props;\n      if (uri !== prevProps.uri) {\n        this.fetch(uri);\n      }\n    }\n    async fetch(uri) {\n      try {\n        this.setState({\n          xml: uri ? await (0, _utilsFetchData.fetchText)(uri) : null\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          xml\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgFromXml, {\n        xml: xml,\n        override: props,\n        onError: props.onError\n      });\n    }\n  }\n  const upperCase = (_match, letter) => letter.toUpperCase();\n  const camelCase = phrase => phrase.replace(/[:-]([a-z])/g, upperCase);\n  function getStyle(string) {\n    const style = {};\n    const declarations = string.split(';').filter(v => v.trim());\n    const {\n      length\n    } = declarations;\n    for (let i = 0; i < length; i++) {\n      const declaration = declarations[i];\n      if (declaration.length !== 0) {\n        const split = declaration.split(':');\n        const property = split[0];\n        const value = split[1];\n        style[camelCase(property.trim())] = value.trim();\n      }\n    }\n    return style;\n  }\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      const {\n        Tag,\n        props,\n        children\n      } = value;\n      if (props !== null && props !== void 0 && props.class) {\n        props.className = props.class;\n        delete props.class;\n      }\n      return /*#__PURE__*/React.createElement(Tag, _extends({\n        key: index\n      }, props), children.map(astToReact));\n    }\n    return value;\n  }\n\n  // slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\n  function repeat(str, i) {\n    let result = '';\n    while (i--) {\n      result += str;\n    }\n    return result;\n  }\n  const toSpaces = tabs => repeat('  ', tabs.length);\n  function locate(source, i) {\n    const lines = source.split('\\n');\n    const nLines = lines.length;\n    let column = i;\n    let line = 0;\n    for (; line < nLines; line++) {\n      const {\n        length\n      } = lines[line];\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n    const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    const beforeExec = /(^|\\n).*$/.exec(before);\n    const beforeLine = beforeExec && beforeExec[0] || '';\n    const after = source.slice(i);\n    const afterExec = /.*(\\n|$)/.exec(after);\n    const afterLine = afterExec && afterExec[0];\n    const pad = repeat(' ', beforeLine.length);\n    const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n    return {\n      line,\n      column,\n      snippet\n    };\n  }\n  const validNameCharacters = /[a-zA-Z0-9:_-]/;\n  const commentStart = /<!--/;\n  const whitespace = /[\\s\\t\\r\\n]/;\n  const quotemarks = /['\"]/;\n  function parse(source, middleware) {\n    const length = source.length;\n    let currentElement = null;\n    let state = metadata;\n    let children = null;\n    let root;\n    const stack = [];\n    function error(message) {\n      const {\n        line,\n        column,\n        snippet\n      } = locate(source, i);\n      throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);\n    }\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !(validNameCharacters.test(source[i + 1]) || commentStart.test(source.slice(i, i + 4))))) {\n        i++;\n      }\n      return neutral();\n    }\n    function neutral() {\n      let text = '';\n      let char;\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n      if (source[i] === '<') {\n        return openingTag;\n      }\n      return neutral;\n    }\n    function openingTag() {\n      const char = source[i];\n      if (char === '?') {\n        return neutral;\n      } // <?xml...\n\n      if (char === '!') {\n        const start = i + 1;\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n        const end = i + 8;\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n      if (char === '/') {\n        return closingTag;\n      }\n      const tag = getName();\n      const props = {};\n      const element = {\n        tag,\n        props,\n        children: [],\n        parent: currentElement,\n        Tag: _xmlTags.tags[tag] || missingTag\n      };\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n      getAttributes(props);\n      const {\n        style\n      } = props;\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n      let selfClosing = false;\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      if (!selfClosing) {\n        currentElement = element;\n        ({\n          children\n        } = element);\n        stack.push(element);\n      }\n      return neutral;\n    }\n    function comment() {\n      const index = source.indexOf('-->', i);\n      if (!~index) {\n        error('expected -->');\n      }\n      i = index + 2;\n      return neutral;\n    }\n    function cdata() {\n      const index = source.indexOf(']]>', i);\n      if (!~index) {\n        error('expected ]]>');\n      }\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n    function closingTag() {\n      const tag = getName();\n      if (!tag) {\n        error('Expected tag name');\n      }\n      if (currentElement && tag !== currentElement.tag) {\n        error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);\n      }\n      allowSpaces();\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n      if (currentElement) {\n        ({\n          children\n        } = currentElement);\n      }\n      return neutral;\n    }\n    function getName() {\n      let name = '';\n      let char;\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n      return name;\n    }\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n        allowSpaces();\n        const name = getName();\n        if (!name) {\n          return;\n        }\n        let value = true;\n        allowSpaces();\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n          if (name !== 'id' && !isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n        props[camelCase(name)] = value;\n      }\n    }\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n    function getUnquotedAttributeValue() {\n      let value = '';\n      do {\n        const char = source[i];\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n        value += char;\n        i += 1;\n      } while (i < length);\n      return value;\n    }\n    function getQuotedAttributeValue() {\n      const quotemark = source[i++];\n      let value = '';\n      let escaped = false;\n      while (i < length) {\n        const char = source[i++];\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n        value += escaped ? `\\\\${char}` : char;\n        escaped = false;\n      }\n      return value;\n    }\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n    let i = 0;\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n      state = state();\n      i += 1;\n    }\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n    if (root) {\n      const xml = (middleware ? middleware(root) : root) || root;\n      const ast = xml.children.map(astToReact);\n      const jsx = xml;\n      jsx.children = ast;\n      return jsx;\n    }\n    return null;\n  }\n});","lineCount":518,"map":[[22,2,9,0,"exports"],[22,9,9,0],[22,10,9,0,"SvgAst"],[22,16,9,0],[22,19,9,0,"SvgAst"],[22,25,9,0],[23,2,24,0,"exports"],[23,9,24,0],[23,10,24,0,"SvgXml"],[23,16,24,0],[23,19,24,0,"SvgXml"],[23,25,24,0],[24,2,42,0,"exports"],[24,9,42,0],[24,10,42,0,"SvgUri"],[24,16,42,0],[24,19,42,0,"SvgUri"],[24,25,42,0],[25,2,74,0,"Object"],[25,8,74,0],[25,9,74,0,"defineProperty"],[25,23,74,0],[25,24,74,0,"exports"],[25,31,74,0],[26,4,74,0,"enumerable"],[26,14,74,0],[27,4,74,0,"get"],[27,7,74,0],[27,18,74,0,"get"],[27,19,74,0],[28,6,74,0],[28,13,74,0,"SvgFromXml"],[28,23,74,0],[29,4,74,0],[30,2,74,0],[31,2,118,0,"Object"],[31,8,118,0],[31,9,118,0,"defineProperty"],[31,23,118,0],[31,24,118,0,"exports"],[31,31,118,0],[32,4,118,0,"enumerable"],[32,14,118,0],[33,4,118,0,"get"],[33,7,118,0],[33,18,118,0,"get"],[33,19,118,0],[34,6,118,0],[34,13,118,0,"SvgFromUri"],[34,23,118,0],[35,4,118,0],[36,2,118,0],[37,2,157,0,"Object"],[37,8,157,0],[37,9,157,0,"defineProperty"],[37,23,157,0],[37,24,157,0,"exports"],[37,31,157,0],[38,4,157,0,"enumerable"],[38,14,157,0],[39,4,157,0,"get"],[39,7,157,0],[39,18,157,0,"get"],[39,19,157,0],[40,6,157,0],[40,13,157,0,"camelCase"],[40,22,157,0],[41,4,157,0],[42,2,157,0],[43,2,158,0,"exports"],[43,9,158,0],[43,10,158,0,"getStyle"],[43,18,158,0],[43,21,158,0,"getStyle"],[43,29,158,0],[44,2,175,0,"exports"],[44,9,175,0],[44,10,175,0,"astToReact"],[44,20,175,0],[44,23,175,0,"astToReact"],[44,33,175,0],[45,2,236,0,"exports"],[45,9,236,0],[45,10,236,0,"parse"],[45,15,236,0],[45,18,236,0,"parse"],[45,23,236,0],[46,2,460,0,"Object"],[46,8,460,0],[46,9,460,0,"defineProperty"],[46,23,460,0],[46,24,460,0,"exports"],[46,31,460,0],[47,4,460,0,"enumerable"],[47,14,460,0],[48,4,460,0,"get"],[48,7,460,0],[48,18,460,0,"get"],[48,19,460,0],[49,6,460,0],[49,13,460,9,"tags"],[49,21,460,13],[49,22,460,13,"tags"],[49,26,460,13],[50,4,460,13],[51,2,460,13],[52,2,2,0],[52,6,2,0,"_react"],[52,12,2,0],[52,15,2,0,"require"],[52,22,2,0],[52,23,2,0,"_dependencyMap"],[52,37,2,0],[53,2,2,0],[53,6,2,0,"React"],[53,11,2,0],[53,14,2,0,"_interopNamespace"],[53,31,2,0],[53,32,2,0,"_react"],[53,38,2,0],[54,2,4,0],[54,6,4,0,"_utilsFetchData"],[54,21,4,0],[54,24,4,0,"require"],[54,31,4,0],[54,32,4,0,"_dependencyMap"],[54,46,4,0],[55,2,5,0],[55,6,5,0,"_xmlTags"],[55,14,5,0],[55,17,5,0,"require"],[55,24,5,0],[55,25,5,0,"_dependencyMap"],[55,39,5,0],[56,2,1,0],[56,11,1,9,"_extends"],[56,19,1,17,"_extends"],[56,20,1,17],[56,22,1,20],[57,4,1,22],[57,11,1,29,"_extends"],[57,19,1,37],[57,22,1,40,"Object"],[57,28,1,46],[57,29,1,47,"assign"],[57,35,1,53],[57,38,1,56,"Object"],[57,44,1,62],[57,45,1,63,"assign"],[57,51,1,69],[57,52,1,70,"bind"],[57,56,1,74],[57,57,1,75],[57,58,1,76],[57,61,1,79],[57,71,1,89,"n"],[57,72,1,90],[57,74,1,92],[58,6,1,94],[58,11,1,99],[58,15,1,103,"e"],[58,16,1,104],[58,19,1,107],[58,20,1,108],[58,22,1,110,"e"],[58,23,1,111],[58,26,1,114,"arguments"],[58,35,1,123],[58,36,1,124,"length"],[58,42,1,130],[58,44,1,132,"e"],[58,45,1,133],[58,47,1,135],[58,49,1,137],[59,8,1,139],[59,12,1,143,"t"],[59,13,1,144],[59,16,1,147,"arguments"],[59,25,1,156],[59,26,1,157,"e"],[59,27,1,158],[59,28,1,159],[60,8,1,161],[60,13,1,166],[60,17,1,170,"r"],[60,18,1,171],[60,22,1,175,"t"],[60,23,1,176],[60,25,1,178],[60,26,1,179],[60,27,1,180],[60,28,1,181],[60,30,1,183,"hasOwnProperty"],[60,44,1,197],[60,45,1,198,"call"],[60,49,1,202],[60,50,1,203,"t"],[60,51,1,204],[60,53,1,206,"r"],[60,54,1,207],[60,55,1,208],[60,60,1,213,"n"],[60,61,1,214],[60,62,1,215,"r"],[60,63,1,216],[60,64,1,217],[60,67,1,220,"t"],[60,68,1,221],[60,69,1,222,"r"],[60,70,1,223],[60,71,1,224],[60,72,1,225],[61,6,1,227],[62,6,1,229],[62,13,1,236,"n"],[62,14,1,237],[63,4,1,239],[63,5,1,240],[63,7,1,242,"_extends"],[63,15,1,250],[63,16,1,251,"apply"],[63,21,1,256],[63,22,1,257],[63,26,1,261],[63,28,1,263,"arguments"],[63,37,1,272],[63,38,1,273],[64,2,1,275],[65,2,6,0],[65,11,6,9,"missingTag"],[65,21,6,19,"missingTag"],[65,22,6,19],[65,24,6,22],[66,4,7,2],[66,11,7,9],[66,15,7,13],[67,2,8,0],[68,2,9,7],[68,11,9,16,"SvgAst"],[68,17,9,22,"SvgAst"],[68,18,9,23],[69,4,10,2,"ast"],[69,7,10,5],[70,4,11,2,"override"],[71,2,12,0],[71,3,12,1],[71,5,12,3],[72,4,13,2],[72,8,13,6],[72,9,13,7,"ast"],[72,12,13,10],[72,14,13,12],[73,6,14,4],[73,13,14,11],[73,17,14,15],[74,4,15,2],[75,4,16,2],[75,10,16,8],[76,6,17,4,"props"],[76,11,17,9],[77,6,18,4,"children"],[78,4,19,2],[78,5,19,3],[78,8,19,6,"ast"],[78,11,19,9],[79,4,20,2],[79,10,20,8,"Svg"],[79,13,20,11],[79,16,20,14,"tags"],[79,24,20,18],[79,25,20,18,"tags"],[79,29,20,18],[79,30,20,19,"svg"],[79,33,20,22],[80,4,21,2],[80,11,21,9],[80,24,21,22,"React"],[80,29,21,27],[80,30,21,28,"createElement"],[80,43,21,41],[80,44,21,42,"Svg"],[80,47,21,45],[80,49,21,47,"_extends"],[80,57,21,55],[80,58,21,56],[80,59,21,57],[80,60,21,58],[80,62,21,60,"props"],[80,67,21,65],[80,69,21,67,"override"],[80,77,21,75],[80,78,21,76],[80,80,21,78,"children"],[80,88,21,86],[80,89,21,87],[81,2,22,0],[82,2,23,0],[82,8,23,6,"err"],[82,11,23,9],[82,14,23,12,"console"],[82,21,23,19],[82,22,23,20,"error"],[82,27,23,25],[82,28,23,26,"bind"],[82,32,23,30],[82,33,23,31,"console"],[82,40,23,38],[82,41,23,39],[83,2,24,7],[83,11,24,16,"SvgXml"],[83,17,24,22,"SvgXml"],[83,18,24,23,"props"],[83,23,24,28],[83,25,24,30],[84,4,25,2],[84,10,25,8],[85,6,26,4,"onError"],[85,13,26,11],[85,16,26,14,"err"],[85,19,26,17],[86,6,27,4,"xml"],[86,9,27,7],[87,6,28,4,"override"],[87,14,28,12],[88,6,29,4,"fallback"],[89,4,30,2],[89,5,30,3],[89,8,30,6,"props"],[89,13,30,11],[90,4,31,2],[90,8,31,6],[91,6,32,4],[91,12,32,10,"ast"],[91,15,32,13],[91,18,32,16],[91,22,32,16,"useMemo"],[91,28,32,23],[91,29,32,23,"useMemo"],[91,36,32,23],[91,38,32,24],[91,44,32,30,"xml"],[91,47,32,33],[91,52,32,38],[91,56,32,42],[91,59,32,45,"parse"],[91,64,32,50],[91,65,32,51,"xml"],[91,68,32,54],[91,69,32,55],[91,72,32,58],[91,76,32,62],[91,78,32,64],[91,79,32,65,"xml"],[91,82,32,68],[91,83,32,69],[91,84,32,70],[92,6,33,4],[92,13,33,11],[92,26,33,24,"React"],[92,31,33,29],[92,32,33,30,"createElement"],[92,45,33,43],[92,46,33,44,"SvgAst"],[92,52,33,50],[92,54,33,52],[93,8,34,6,"ast"],[93,11,34,9],[93,13,34,11,"ast"],[93,16,34,14],[94,8,35,6,"override"],[94,16,35,14],[94,18,35,16,"override"],[94,26,35,24],[94,30,35,28,"props"],[95,6,36,4],[95,7,36,5],[95,8,36,6],[96,4,37,2],[96,5,37,3],[96,6,37,4],[96,13,37,11,"error"],[96,18,37,16],[96,20,37,18],[97,6,38,4,"onError"],[97,13,38,11],[97,14,38,12,"error"],[97,19,38,17],[97,20,38,18],[98,6,39,4],[98,13,39,11,"fallback"],[98,21,39,19],[98,25,39,23],[98,29,39,27],[99,4,40,2],[100,2,41,0],[101,2,42,7],[101,11,42,16,"SvgUri"],[101,17,42,22,"SvgUri"],[101,18,42,23,"props"],[101,23,42,28],[101,25,42,30],[102,4,43,2],[102,10,43,8],[103,6,44,4,"onError"],[103,13,44,11],[103,16,44,14,"err"],[103,19,44,17],[104,6,45,4,"uri"],[104,9,45,7],[105,6,46,4,"onLoad"],[105,12,46,10],[106,6,47,4,"fallback"],[107,4,48,2],[107,5,48,3],[107,8,48,6,"props"],[107,13,48,11],[108,4,49,2],[108,10,49,8],[108,11,49,9,"xml"],[108,14,49,12],[108,16,49,14,"setXml"],[108,22,49,20],[108,23,49,21],[108,26,49,24],[108,30,49,24,"useState"],[108,36,49,32],[108,37,49,32,"useState"],[108,45,49,32],[108,47,49,33],[108,51,49,37],[108,52,49,38],[109,4,50,2],[109,10,50,8],[109,11,50,9,"isError"],[109,18,50,16],[109,20,50,18,"setIsError"],[109,30,50,28],[109,31,50,29],[109,34,50,32],[109,38,50,32,"useState"],[109,44,50,40],[109,45,50,40,"useState"],[109,53,50,40],[109,55,50,41],[109,60,50,46],[109,61,50,47],[110,4,51,2],[110,8,51,2,"useEffect"],[110,14,51,11],[110,15,51,11,"useEffect"],[110,24,51,11],[110,26,51,12],[110,32,51,18],[111,6,52,4,"uri"],[111,9,52,7],[111,12,52,10],[111,16,52,10,"fetchText"],[111,31,52,19],[111,32,52,19,"fetchText"],[111,41,52,19],[111,43,52,20,"uri"],[111,46,52,23],[111,47,52,24],[111,48,52,25,"then"],[111,52,52,29],[111,53,52,30,"data"],[111,57,52,34],[111,61,52,38],[112,8,53,6,"setXml"],[112,14,53,12],[112,15,53,13,"data"],[112,19,53,17],[112,20,53,18],[113,8,54,6,"isError"],[113,15,54,13],[113,19,54,17,"setIsError"],[113,29,54,27],[113,30,54,28],[113,35,54,33],[113,36,54,34],[114,8,55,6,"onLoad"],[114,14,55,12],[114,19,55,17],[114,23,55,21],[114,27,55,25,"onLoad"],[114,33,55,31],[114,38,55,36],[114,43,55,41],[114,44,55,42],[114,48,55,46,"onLoad"],[114,54,55,52],[114,55,55,53],[114,56,55,54],[115,6,56,4],[115,7,56,5],[115,8,56,6],[115,9,56,7,"catch"],[115,14,56,12],[115,15,56,13,"e"],[115,16,56,14],[115,20,56,18],[116,8,57,6,"onError"],[116,15,57,13],[116,16,57,14,"e"],[116,17,57,15],[116,18,57,16],[117,8,58,6,"setIsError"],[117,18,58,16],[117,19,58,17],[117,23,58,21],[117,24,58,22],[118,6,59,4],[118,7,59,5],[118,8,59,6],[118,11,59,9,"setXml"],[118,17,59,15],[118,18,59,16],[118,22,59,20],[118,23,59,21],[119,6,60,4],[120,4,61,2],[120,5,61,3],[120,7,61,5],[120,8,61,6,"onError"],[120,15,61,13],[120,17,61,15,"uri"],[120,20,61,18],[120,22,61,20,"onLoad"],[120,28,61,26],[120,29,61,27],[120,30,61,28],[121,4,62,2],[121,8,62,6,"isError"],[121,15,62,13],[121,17,62,15],[122,6,63,4],[122,13,63,11,"fallback"],[122,21,63,19],[122,25,63,23],[122,29,63,27],[123,4,64,2],[124,4,65,2],[124,11,65,9],[124,24,65,22,"React"],[124,29,65,27],[124,30,65,28,"createElement"],[124,43,65,41],[124,44,65,42,"SvgXml"],[124,50,65,48],[124,52,65,50],[125,6,66,4,"xml"],[125,9,66,7],[125,11,66,9,"xml"],[125,14,66,12],[126,6,67,4,"override"],[126,14,67,12],[126,16,67,14,"props"],[126,21,67,19],[127,6,68,4,"fallback"],[127,14,68,12],[127,16,68,14,"fallback"],[128,4,69,2],[128,5,69,3],[128,6,69,4],[129,2,70,0],[131,2,72,0],[133,2,74,7],[133,8,74,13,"SvgFromXml"],[133,18,74,23],[133,27,74,32,"Component"],[133,33,74,41],[133,34,74,41,"Component"],[133,43,74,41],[133,44,74,42],[134,4,75,2,"state"],[134,9,75,7],[134,12,75,10],[135,6,76,4,"ast"],[135,9,76,7],[135,11,76,9],[136,4,77,2],[136,5,77,3],[137,4,78,2,"componentDidMount"],[137,21,78,19,"componentDidMount"],[137,22,78,19],[137,24,78,22],[138,6,79,4],[138,10,79,8],[138,11,79,9,"parse"],[138,16,79,14],[138,17,79,15],[138,21,79,19],[138,22,79,20,"props"],[138,27,79,25],[138,28,79,26,"xml"],[138,31,79,29],[138,32,79,30],[139,4,80,2],[140,4,81,2,"componentDidUpdate"],[140,22,81,20,"componentDidUpdate"],[140,23,81,21,"prevProps"],[140,32,81,30],[140,34,81,32],[141,6,82,4],[141,12,82,10],[142,8,83,6,"xml"],[143,6,84,4],[143,7,84,5],[143,10,84,8],[143,14,84,12],[143,15,84,13,"props"],[143,20,84,18],[144,6,85,4],[144,10,85,8,"xml"],[144,13,85,11],[144,18,85,16,"prevProps"],[144,27,85,25],[144,28,85,26,"xml"],[144,31,85,29],[144,33,85,31],[145,8,86,6],[145,12,86,10],[145,13,86,11,"parse"],[145,18,86,16],[145,19,86,17,"xml"],[145,22,86,20],[145,23,86,21],[146,6,87,4],[147,4,88,2],[148,4,89,2,"parse"],[148,9,89,7,"parse"],[148,10,89,8,"xml"],[148,13,89,11],[148,15,89,13],[149,6,90,4],[149,12,90,10],[150,8,91,6,"onError"],[150,15,91,13],[150,18,91,16,"err"],[151,6,92,4],[151,7,92,5],[151,10,92,8],[151,14,92,12],[151,15,92,13,"props"],[151,20,92,18],[152,6,93,4],[152,10,93,8],[153,8,94,6],[153,12,94,10],[153,13,94,11,"setState"],[153,21,94,19],[153,22,94,20],[154,10,95,8,"ast"],[154,13,95,11],[154,15,95,13,"xml"],[154,18,95,16],[154,21,95,19,"parse"],[154,26,95,24],[154,27,95,25,"xml"],[154,30,95,28],[154,31,95,29],[154,34,95,32],[155,8,96,6],[155,9,96,7],[155,10,96,8],[156,6,97,4],[156,7,97,5],[156,8,97,6],[156,15,97,13,"e"],[156,16,97,14],[156,18,97,16],[157,8,98,6],[157,14,98,12,"error"],[157,19,98,17],[157,22,98,20,"e"],[157,23,98,21],[158,8,99,6,"onError"],[158,15,99,13],[158,16,99,13,"Object"],[158,22,99,13],[158,23,99,13,"assign"],[158,29,99,13],[158,34,100,11,"error"],[158,39,100,16],[159,10,101,8,"message"],[159,17,101,15],[159,19,101,17],[159,58,101,56,"error"],[159,63,101,61],[159,64,101,62,"message"],[159,71,101,69],[160,8,101,71],[160,10,102,7],[160,11,102,8],[161,6,103,4],[162,4,104,2],[163,4,105,2,"render"],[163,10,105,8,"render"],[163,11,105,8],[163,13,105,11],[164,6,106,4],[164,12,106,10],[165,8,107,6,"props"],[165,13,107,11],[166,8,108,6,"state"],[166,13,108,11],[166,15,108,13],[167,10,109,8,"ast"],[168,8,110,6],[169,6,111,4],[169,7,111,5],[169,10,111,8],[169,14,111,12],[170,6,112,4],[170,13,112,11],[170,26,112,24,"React"],[170,31,112,29],[170,32,112,30,"createElement"],[170,45,112,43],[170,46,112,44,"SvgAst"],[170,52,112,50],[170,54,112,52],[171,8,113,6,"ast"],[171,11,113,9],[171,13,113,11,"ast"],[171,16,113,14],[172,8,114,6,"override"],[172,16,114,14],[172,18,114,16,"props"],[172,23,114,21],[172,24,114,22,"override"],[172,32,114,30],[172,36,114,34,"props"],[173,6,115,4],[173,7,115,5],[173,8,115,6],[174,4,116,2],[175,2,117,0],[176,2,118,7],[176,8,118,13,"SvgFromUri"],[176,18,118,23],[176,27,118,32,"Component"],[176,33,118,41],[176,34,118,41,"Component"],[176,43,118,41],[176,44,118,42],[177,4,119,2,"state"],[177,9,119,7],[177,12,119,10],[178,6,120,4,"xml"],[178,9,120,7],[178,11,120,9],[179,4,121,2],[179,5,121,3],[180,4,122,2,"componentDidMount"],[180,21,122,19,"componentDidMount"],[180,22,122,19],[180,24,122,22],[181,6,123,4],[181,10,123,8],[181,11,123,9,"fetch"],[181,16,123,14],[181,17,123,15],[181,21,123,19],[181,22,123,20,"props"],[181,27,123,25],[181,28,123,26,"uri"],[181,31,123,29],[181,32,123,30],[182,4,124,2],[183,4,125,2,"componentDidUpdate"],[183,22,125,20,"componentDidUpdate"],[183,23,125,21,"prevProps"],[183,32,125,30],[183,34,125,32],[184,6,126,4],[184,12,126,10],[185,8,127,6,"uri"],[186,6,128,4],[186,7,128,5],[186,10,128,8],[186,14,128,12],[186,15,128,13,"props"],[186,20,128,18],[187,6,129,4],[187,10,129,8,"uri"],[187,13,129,11],[187,18,129,16,"prevProps"],[187,27,129,25],[187,28,129,26,"uri"],[187,31,129,29],[187,33,129,31],[188,8,130,6],[188,12,130,10],[188,13,130,11,"fetch"],[188,18,130,16],[188,19,130,17,"uri"],[188,22,130,20],[188,23,130,21],[189,6,131,4],[190,4,132,2],[191,4,133,2],[191,10,133,8,"fetch"],[191,15,133,13,"fetch"],[191,16,133,14,"uri"],[191,19,133,17],[191,21,133,19],[192,6,134,4],[192,10,134,8],[193,8,135,6],[193,12,135,10],[193,13,135,11,"setState"],[193,21,135,19],[193,22,135,20],[194,10,136,8,"xml"],[194,13,136,11],[194,15,136,13,"uri"],[194,18,136,16],[194,21,136,19],[194,27,136,25],[194,31,136,25,"fetchText"],[194,46,136,34],[194,47,136,34,"fetchText"],[194,56,136,34],[194,58,136,35,"uri"],[194,61,136,38],[194,62,136,39],[194,65,136,42],[195,8,137,6],[195,9,137,7],[195,10,137,8],[196,6,138,4],[196,7,138,5],[196,8,138,6],[196,15,138,13,"e"],[196,16,138,14],[196,18,138,16],[197,8,139,6,"console"],[197,15,139,13],[197,16,139,14,"error"],[197,21,139,19],[197,22,139,20,"e"],[197,23,139,21],[197,24,139,22],[198,6,140,4],[199,4,141,2],[200,4,142,2,"render"],[200,10,142,8,"render"],[200,11,142,8],[200,13,142,11],[201,6,143,4],[201,12,143,10],[202,8,144,6,"props"],[202,13,144,11],[203,8,145,6,"state"],[203,13,145,11],[203,15,145,13],[204,10,146,8,"xml"],[205,8,147,6],[206,6,148,4],[206,7,148,5],[206,10,148,8],[206,14,148,12],[207,6,149,4],[207,13,149,11],[207,26,149,24,"React"],[207,31,149,29],[207,32,149,30,"createElement"],[207,45,149,43],[207,46,149,44,"SvgFromXml"],[207,56,149,54],[207,58,149,56],[208,8,150,6,"xml"],[208,11,150,9],[208,13,150,11,"xml"],[208,16,150,14],[209,8,151,6,"override"],[209,16,151,14],[209,18,151,16,"props"],[209,23,151,21],[210,8,152,6,"onError"],[210,15,152,13],[210,17,152,15,"props"],[210,22,152,20],[210,23,152,21,"onError"],[211,6,153,4],[211,7,153,5],[211,8,153,6],[212,4,154,2],[213,2,155,0],[214,2,156,0],[214,8,156,6,"upperCase"],[214,17,156,15],[214,20,156,18,"upperCase"],[214,21,156,19,"_match"],[214,27,156,25],[214,29,156,27,"letter"],[214,35,156,33],[214,40,156,38,"letter"],[214,46,156,44],[214,47,156,45,"toUpperCase"],[214,58,156,56],[214,59,156,57],[214,60,156,58],[215,2,157,7],[215,8,157,13,"camelCase"],[215,17,157,22],[215,20,157,25,"phrase"],[215,26,157,31],[215,30,157,35,"phrase"],[215,36,157,41],[215,37,157,42,"replace"],[215,44,157,49],[215,45,157,50],[215,59,157,64],[215,61,157,66,"upperCase"],[215,70,157,75],[215,71,157,76],[216,2,158,7],[216,11,158,16,"getStyle"],[216,19,158,24,"getStyle"],[216,20,158,25,"string"],[216,26,158,31],[216,28,158,33],[217,4,159,2],[217,10,159,8,"style"],[217,15,159,13],[217,18,159,16],[217,19,159,17],[217,20,159,18],[218,4,160,2],[218,10,160,8,"declarations"],[218,22,160,20],[218,25,160,23,"string"],[218,31,160,29],[218,32,160,30,"split"],[218,37,160,35],[218,38,160,36],[218,41,160,39],[218,42,160,40],[218,43,160,41,"filter"],[218,49,160,47],[218,50,160,48,"v"],[218,51,160,49],[218,55,160,53,"v"],[218,56,160,54],[218,57,160,55,"trim"],[218,61,160,59],[218,62,160,60],[218,63,160,61],[218,64,160,62],[219,4,161,2],[219,10,161,8],[220,6,162,4,"length"],[221,4,163,2],[221,5,163,3],[221,8,163,6,"declarations"],[221,20,163,18],[222,4,164,2],[222,9,164,7],[222,13,164,11,"i"],[222,14,164,12],[222,17,164,15],[222,18,164,16],[222,20,164,18,"i"],[222,21,164,19],[222,24,164,22,"length"],[222,30,164,28],[222,32,164,30,"i"],[222,33,164,31],[222,35,164,33],[222,37,164,35],[223,6,165,4],[223,12,165,10,"declaration"],[223,23,165,21],[223,26,165,24,"declarations"],[223,38,165,36],[223,39,165,37,"i"],[223,40,165,38],[223,41,165,39],[224,6,166,4],[224,10,166,8,"declaration"],[224,21,166,19],[224,22,166,20,"length"],[224,28,166,26],[224,33,166,31],[224,34,166,32],[224,36,166,34],[225,8,167,6],[225,14,167,12,"split"],[225,19,167,17],[225,22,167,20,"declaration"],[225,33,167,31],[225,34,167,32,"split"],[225,39,167,37],[225,40,167,38],[225,43,167,41],[225,44,167,42],[226,8,168,6],[226,14,168,12,"property"],[226,22,168,20],[226,25,168,23,"split"],[226,30,168,28],[226,31,168,29],[226,32,168,30],[226,33,168,31],[227,8,169,6],[227,14,169,12,"value"],[227,19,169,17],[227,22,169,20,"split"],[227,27,169,25],[227,28,169,26],[227,29,169,27],[227,30,169,28],[228,8,170,6,"style"],[228,13,170,11],[228,14,170,12,"camelCase"],[228,23,170,21],[228,24,170,22,"property"],[228,32,170,30],[228,33,170,31,"trim"],[228,37,170,35],[228,38,170,36],[228,39,170,37],[228,40,170,38],[228,41,170,39],[228,44,170,42,"value"],[228,49,170,47],[228,50,170,48,"trim"],[228,54,170,52],[228,55,170,53],[228,56,170,54],[229,6,171,4],[230,4,172,2],[231,4,173,2],[231,11,173,9,"style"],[231,16,173,14],[232,2,174,0],[233,2,175,7],[233,11,175,16,"astToReact"],[233,21,175,26,"astToReact"],[233,22,175,27,"value"],[233,27,175,32],[233,29,175,34,"index"],[233,34,175,39],[233,36,175,41],[234,4,176,2],[234,8,176,6],[234,15,176,13,"value"],[234,20,176,18],[234,25,176,23],[234,33,176,31],[234,35,176,33],[235,6,177,4],[235,12,177,10],[236,8,178,6,"Tag"],[236,11,178,9],[237,8,179,6,"props"],[237,13,179,11],[238,8,180,6,"children"],[239,6,181,4],[239,7,181,5],[239,10,181,8,"value"],[239,15,181,13],[240,6,182,4],[240,10,182,8,"props"],[240,15,182,13],[240,20,182,18],[240,24,182,22],[240,28,182,26,"props"],[240,33,182,31],[240,38,182,36],[240,43,182,41],[240,44,182,42],[240,48,182,46,"props"],[240,53,182,51],[240,54,182,52,"class"],[240,59,182,57],[240,61,182,59],[241,8,183,6,"props"],[241,13,183,11],[241,14,183,12,"className"],[241,23,183,21],[241,26,183,24,"props"],[241,31,183,29],[241,32,183,30,"class"],[241,37,183,35],[242,8,184,6],[242,15,184,13,"props"],[242,20,184,18],[242,21,184,19,"class"],[242,26,184,24],[243,6,185,4],[244,6,186,4],[244,13,186,11],[244,26,186,24,"React"],[244,31,186,29],[244,32,186,30,"createElement"],[244,45,186,43],[244,46,186,44,"Tag"],[244,49,186,47],[244,51,186,49,"_extends"],[244,59,186,57],[244,60,186,58],[245,8,187,6,"key"],[245,11,187,9],[245,13,187,11,"index"],[246,6,188,4],[246,7,188,5],[246,9,188,7,"props"],[246,14,188,12],[246,15,188,13],[246,17,188,15,"children"],[246,25,188,23],[246,26,188,24,"map"],[246,29,188,27],[246,30,188,28,"astToReact"],[246,40,188,38],[246,41,188,39],[246,42,188,40],[247,4,189,2],[248,4,190,2],[248,11,190,9,"value"],[248,16,190,14],[249,2,191,0],[251,2,193,0],[253,2,195,0],[253,11,195,9,"repeat"],[253,17,195,15,"repeat"],[253,18,195,16,"str"],[253,21,195,19],[253,23,195,21,"i"],[253,24,195,22],[253,26,195,24],[254,4,196,2],[254,8,196,6,"result"],[254,14,196,12],[254,17,196,15],[254,19,196,17],[255,4,197,2],[255,11,197,9,"i"],[255,12,197,10],[255,14,197,12],[255,16,197,14],[256,6,198,4,"result"],[256,12,198,10],[256,16,198,14,"str"],[256,19,198,17],[257,4,199,2],[258,4,200,2],[258,11,200,9,"result"],[258,17,200,15],[259,2,201,0],[260,2,202,0],[260,8,202,6,"toSpaces"],[260,16,202,14],[260,19,202,17,"tabs"],[260,23,202,21],[260,27,202,25,"repeat"],[260,33,202,31],[260,34,202,32],[260,38,202,36],[260,40,202,38,"tabs"],[260,44,202,42],[260,45,202,43,"length"],[260,51,202,49],[260,52,202,50],[261,2,203,0],[261,11,203,9,"locate"],[261,17,203,15,"locate"],[261,18,203,16,"source"],[261,24,203,22],[261,26,203,24,"i"],[261,27,203,25],[261,29,203,27],[262,4,204,2],[262,10,204,8,"lines"],[262,15,204,13],[262,18,204,16,"source"],[262,24,204,22],[262,25,204,23,"split"],[262,30,204,28],[262,31,204,29],[262,35,204,33],[262,36,204,34],[263,4,205,2],[263,10,205,8,"nLines"],[263,16,205,14],[263,19,205,17,"lines"],[263,24,205,22],[263,25,205,23,"length"],[263,31,205,29],[264,4,206,2],[264,8,206,6,"column"],[264,14,206,12],[264,17,206,15,"i"],[264,18,206,16],[265,4,207,2],[265,8,207,6,"line"],[265,12,207,10],[265,15,207,13],[265,16,207,14],[266,4,208,2],[266,11,208,9,"line"],[266,15,208,13],[266,18,208,16,"nLines"],[266,24,208,22],[266,26,208,24,"line"],[266,30,208,28],[266,32,208,30],[266,34,208,32],[267,6,209,4],[267,12,209,10],[268,8,210,6,"length"],[269,6,211,4],[269,7,211,5],[269,10,211,8,"lines"],[269,15,211,13],[269,16,211,14,"line"],[269,20,211,18],[269,21,211,19],[270,6,212,4],[270,10,212,8,"column"],[270,16,212,14],[270,20,212,18,"length"],[270,26,212,24],[270,28,212,26],[271,8,213,6,"column"],[271,14,213,12],[271,18,213,16,"length"],[271,24,213,22],[272,6,214,4],[272,7,214,5],[272,13,214,11],[273,8,215,6],[274,6,216,4],[275,4,217,2],[276,4,218,2],[276,10,218,8,"before"],[276,16,218,14],[276,19,218,17,"source"],[276,25,218,23],[276,26,218,24,"slice"],[276,31,218,29],[276,32,218,30],[276,33,218,31],[276,35,218,33,"i"],[276,36,218,34],[276,37,218,35],[276,38,218,36,"replace"],[276,45,218,43],[276,46,218,44],[276,52,218,50],[276,54,218,52,"toSpaces"],[276,62,218,60],[276,63,218,61],[277,4,219,2],[277,10,219,8,"beforeExec"],[277,20,219,18],[277,23,219,21],[277,34,219,32],[277,35,219,33,"exec"],[277,39,219,37],[277,40,219,38,"before"],[277,46,219,44],[277,47,219,45],[278,4,220,2],[278,10,220,8,"beforeLine"],[278,20,220,18],[278,23,220,21,"beforeExec"],[278,33,220,31],[278,37,220,35,"beforeExec"],[278,47,220,45],[278,48,220,46],[278,49,220,47],[278,50,220,48],[278,54,220,52],[278,56,220,54],[279,4,221,2],[279,10,221,8,"after"],[279,15,221,13],[279,18,221,16,"source"],[279,24,221,22],[279,25,221,23,"slice"],[279,30,221,28],[279,31,221,29,"i"],[279,32,221,30],[279,33,221,31],[280,4,222,2],[280,10,222,8,"afterExec"],[280,19,222,17],[280,22,222,20],[280,32,222,30],[280,33,222,31,"exec"],[280,37,222,35],[280,38,222,36,"after"],[280,43,222,41],[280,44,222,42],[281,4,223,2],[281,10,223,8,"afterLine"],[281,19,223,17],[281,22,223,20,"afterExec"],[281,31,223,29],[281,35,223,33,"afterExec"],[281,44,223,42],[281,45,223,43],[281,46,223,44],[281,47,223,45],[282,4,224,2],[282,10,224,8,"pad"],[282,13,224,11],[282,16,224,14,"repeat"],[282,22,224,20],[282,23,224,21],[282,26,224,24],[282,28,224,26,"beforeLine"],[282,38,224,36],[282,39,224,37,"length"],[282,45,224,43],[282,46,224,44],[283,4,225,2],[283,10,225,8,"snippet"],[283,17,225,15],[283,20,225,18],[283,23,225,21,"beforeLine"],[283,33,225,31],[283,36,225,34,"afterLine"],[283,45,225,43],[283,50,225,48,"pad"],[283,53,225,51],[283,56,225,54],[284,4,226,2],[284,11,226,9],[285,6,227,4,"line"],[285,10,227,8],[286,6,228,4,"column"],[286,12,228,10],[287,6,229,4,"snippet"],[288,4,230,2],[288,5,230,3],[289,2,231,0],[290,2,232,0],[290,8,232,6,"validNameCharacters"],[290,27,232,25],[290,30,232,28],[290,46,232,44],[291,2,233,0],[291,8,233,6,"commentStart"],[291,20,233,18],[291,23,233,21],[291,29,233,27],[292,2,234,0],[292,8,234,6,"whitespace"],[292,18,234,16],[292,21,234,19],[292,33,234,31],[293,2,235,0],[293,8,235,6,"quotemarks"],[293,18,235,16],[293,21,235,19],[293,27,235,25],[294,2,236,7],[294,11,236,16,"parse"],[294,16,236,21,"parse"],[294,17,236,22,"source"],[294,23,236,28],[294,25,236,30,"middleware"],[294,35,236,40],[294,37,236,42],[295,4,237,2],[295,10,237,8,"length"],[295,16,237,14],[295,19,237,17,"source"],[295,25,237,23],[295,26,237,24,"length"],[295,32,237,30],[296,4,238,2],[296,8,238,6,"currentElement"],[296,22,238,20],[296,25,238,23],[296,29,238,27],[297,4,239,2],[297,8,239,6,"state"],[297,13,239,11],[297,16,239,14,"metadata"],[297,24,239,22],[298,4,240,2],[298,8,240,6,"children"],[298,16,240,14],[298,19,240,17],[298,23,240,21],[299,4,241,2],[299,8,241,6,"root"],[299,12,241,10],[300,4,242,2],[300,10,242,8,"stack"],[300,15,242,13],[300,18,242,16],[300,20,242,18],[301,4,243,2],[301,13,243,11,"error"],[301,18,243,16,"error"],[301,19,243,17,"message"],[301,26,243,24],[301,28,243,26],[302,6,244,4],[302,12,244,10],[303,8,245,6,"line"],[303,12,245,10],[304,8,246,6,"column"],[304,14,246,12],[305,8,247,6,"snippet"],[306,6,248,4],[306,7,248,5],[306,10,248,8,"locate"],[306,16,248,14],[306,17,248,15,"source"],[306,23,248,21],[306,25,248,23,"i"],[306,26,248,24],[306,27,248,25],[307,6,249,4],[307,12,249,10],[307,16,249,14,"Error"],[307,21,249,19],[307,22,249,20],[307,25,249,23,"message"],[307,32,249,30],[307,37,249,35,"line"],[307,41,249,39],[307,45,249,43,"column"],[307,51,249,49],[307,125,249,123,"snippet"],[307,132,249,130],[307,134,249,132],[307,135,249,133],[308,4,250,2],[309,4,251,2],[309,13,251,11,"metadata"],[309,21,251,19,"metadata"],[309,22,251,19],[309,24,251,22],[310,6,252,4],[310,13,252,11,"i"],[310,14,252,12],[310,17,252,15],[310,18,252,16],[310,21,252,19,"length"],[310,27,252,25],[310,32,252,30,"source"],[310,38,252,36],[310,39,252,37,"i"],[310,40,252,38],[310,41,252,39],[310,46,252,44],[310,49,252,47],[310,53,252,51],[310,55,252,53,"validNameCharacters"],[310,74,252,72],[310,75,252,73,"test"],[310,79,252,77],[310,80,252,78,"source"],[310,86,252,84],[310,87,252,85,"i"],[310,88,252,86],[310,91,252,89],[310,92,252,90],[310,93,252,91],[310,94,252,92],[310,98,252,96,"commentStart"],[310,110,252,108],[310,111,252,109,"test"],[310,115,252,113],[310,116,252,114,"source"],[310,122,252,120],[310,123,252,121,"slice"],[310,128,252,126],[310,129,252,127,"i"],[310,130,252,128],[310,132,252,130,"i"],[310,133,252,131],[310,136,252,134],[310,137,252,135],[310,138,252,136],[310,139,252,137],[310,140,252,138],[310,141,252,139],[310,143,252,141],[311,8,253,6,"i"],[311,9,253,7],[311,11,253,9],[312,6,254,4],[313,6,255,4],[313,13,255,11,"neutral"],[313,20,255,18],[313,21,255,19],[313,22,255,20],[314,4,256,2],[315,4,257,2],[315,13,257,11,"neutral"],[315,20,257,18,"neutral"],[315,21,257,18],[315,23,257,21],[316,6,258,4],[316,10,258,8,"text"],[316,14,258,12],[316,17,258,15],[316,19,258,17],[317,6,259,4],[317,10,259,8,"char"],[317,14,259,12],[318,6,260,4],[318,13,260,11,"i"],[318,14,260,12],[318,17,260,15,"length"],[318,23,260,21],[318,27,260,25],[318,28,260,26,"char"],[318,32,260,30],[318,35,260,33,"source"],[318,41,260,39],[318,42,260,40,"i"],[318,43,260,41],[318,44,260,42],[318,50,260,48],[318,53,260,51],[318,55,260,53],[319,8,261,6,"text"],[319,12,261,10],[319,16,261,14,"char"],[319,20,261,18],[320,8,262,6,"i"],[320,9,262,7],[320,13,262,11],[320,14,262,12],[321,6,263,4],[322,6,264,4],[322,10,264,8],[322,14,264,12],[322,15,264,13,"test"],[322,19,264,17],[322,20,264,18,"text"],[322,24,264,22],[322,25,264,23],[322,27,264,25],[323,8,265,6,"children"],[323,16,265,14],[323,17,265,15,"push"],[323,21,265,19],[323,22,265,20,"text"],[323,26,265,24],[323,27,265,25],[324,6,266,4],[325,6,267,4],[325,10,267,8,"source"],[325,16,267,14],[325,17,267,15,"i"],[325,18,267,16],[325,19,267,17],[325,24,267,22],[325,27,267,25],[325,29,267,27],[326,8,268,6],[326,15,268,13,"openingTag"],[326,25,268,23],[327,6,269,4],[328,6,270,4],[328,13,270,11,"neutral"],[328,20,270,18],[329,4,271,2],[330,4,272,2],[330,13,272,11,"openingTag"],[330,23,272,21,"openingTag"],[330,24,272,21],[330,26,272,24],[331,6,273,4],[331,12,273,10,"char"],[331,16,273,14],[331,19,273,17,"source"],[331,25,273,23],[331,26,273,24,"i"],[331,27,273,25],[331,28,273,26],[332,6,274,4],[332,10,274,8,"char"],[332,14,274,12],[332,19,274,17],[332,22,274,20],[332,24,274,22],[333,8,275,6],[333,15,275,13,"neutral"],[333,22,275,20],[334,6,276,4],[334,7,276,5],[334,8,276,6],[336,6,278,4],[336,10,278,8,"char"],[336,14,278,12],[336,19,278,17],[336,22,278,20],[336,24,278,22],[337,8,279,6],[337,14,279,12,"start"],[337,19,279,17],[337,22,279,20,"i"],[337,23,279,21],[337,26,279,24],[337,27,279,25],[338,8,280,6],[338,12,280,10,"source"],[338,18,280,16],[338,19,280,17,"slice"],[338,24,280,22],[338,25,280,23,"start"],[338,30,280,28],[338,32,280,30,"i"],[338,33,280,31],[338,36,280,34],[338,37,280,35],[338,38,280,36],[338,43,280,41],[338,47,280,45],[338,49,280,47],[339,10,281,8],[339,17,281,15,"comment"],[339,24,281,22],[340,8,282,6],[341,8,283,6],[341,14,283,12,"end"],[341,17,283,15],[341,20,283,18,"i"],[341,21,283,19],[341,24,283,22],[341,25,283,23],[342,8,284,6],[342,12,284,10,"source"],[342,18,284,16],[342,19,284,17,"slice"],[342,24,284,22],[342,25,284,23,"start"],[342,30,284,28],[342,32,284,30,"end"],[342,35,284,33],[342,36,284,34],[342,41,284,39],[342,50,284,48],[342,52,284,50],[343,10,285,8],[343,17,285,15,"cdata"],[343,22,285,20],[344,8,286,6],[345,8,287,6],[345,12,287,10],[345,22,287,20],[345,23,287,21,"test"],[345,27,287,25],[345,28,287,26,"source"],[345,34,287,32],[345,35,287,33,"slice"],[345,40,287,38],[345,41,287,39,"start"],[345,46,287,44],[345,48,287,46,"end"],[345,51,287,49],[345,52,287,50],[345,53,287,51],[345,55,287,53],[346,10,288,8],[346,17,288,15,"neutral"],[346,24,288,22],[347,8,289,6],[348,6,290,4],[349,6,291,4],[349,10,291,8,"char"],[349,14,291,12],[349,19,291,17],[349,22,291,20],[349,24,291,22],[350,8,292,6],[350,15,292,13,"closingTag"],[350,25,292,23],[351,6,293,4],[352,6,294,4],[352,12,294,10,"tag"],[352,15,294,13],[352,18,294,16,"getName"],[352,25,294,23],[352,26,294,24],[352,27,294,25],[353,6,295,4],[353,12,295,10,"props"],[353,17,295,15],[353,20,295,18],[353,21,295,19],[353,22,295,20],[354,6,296,4],[354,12,296,10,"element"],[354,19,296,17],[354,22,296,20],[355,8,297,6,"tag"],[355,11,297,9],[356,8,298,6,"props"],[356,13,298,11],[357,8,299,6,"children"],[357,16,299,14],[357,18,299,16],[357,20,299,18],[358,8,300,6,"parent"],[358,14,300,12],[358,16,300,14,"currentElement"],[358,30,300,28],[359,8,301,6,"Tag"],[359,11,301,9],[359,13,301,11,"tags"],[359,21,301,15],[359,22,301,15,"tags"],[359,26,301,15],[359,27,301,16,"tag"],[359,30,301,19],[359,31,301,20],[359,35,301,24,"missingTag"],[360,6,302,4],[360,7,302,5],[361,6,303,4],[361,10,303,8,"currentElement"],[361,24,303,22],[361,26,303,24],[362,8,304,6,"children"],[362,16,304,14],[362,17,304,15,"push"],[362,21,304,19],[362,22,304,20,"element"],[362,29,304,27],[362,30,304,28],[363,6,305,4],[363,7,305,5],[363,13,305,11],[364,8,306,6,"root"],[364,12,306,10],[364,15,306,13,"element"],[364,22,306,20],[365,6,307,4],[366,6,308,4,"getAttributes"],[366,19,308,17],[366,20,308,18,"props"],[366,25,308,23],[366,26,308,24],[367,6,309,4],[367,12,309,10],[368,8,310,6,"style"],[369,6,311,4],[369,7,311,5],[369,10,311,8,"props"],[369,15,311,13],[370,6,312,4],[370,10,312,8],[370,17,312,15,"style"],[370,22,312,20],[370,27,312,25],[370,35,312,33],[370,37,312,35],[371,8,313,6,"element"],[371,15,313,13],[371,16,313,14,"styles"],[371,22,313,20],[371,25,313,23,"style"],[371,30,313,28],[372,8,314,6,"props"],[372,13,314,11],[372,14,314,12,"style"],[372,19,314,17],[372,22,314,20,"getStyle"],[372,30,314,28],[372,31,314,29,"style"],[372,36,314,34],[372,37,314,35],[373,6,315,4],[374,6,316,4],[374,10,316,8,"selfClosing"],[374,21,316,19],[374,24,316,22],[374,29,316,27],[375,6,317,4],[375,10,317,8,"source"],[375,16,317,14],[375,17,317,15,"i"],[375,18,317,16],[375,19,317,17],[375,24,317,22],[375,27,317,25],[375,29,317,27],[376,8,318,6,"i"],[376,9,318,7],[376,13,318,11],[376,14,318,12],[377,8,319,6,"selfClosing"],[377,19,319,17],[377,22,319,20],[377,26,319,24],[378,6,320,4],[379,6,321,4],[379,10,321,8,"source"],[379,16,321,14],[379,17,321,15,"i"],[379,18,321,16],[379,19,321,17],[379,24,321,22],[379,27,321,25],[379,29,321,27],[380,8,322,6,"error"],[380,13,322,11],[380,14,322,12],[380,26,322,24],[380,27,322,25],[381,6,323,4],[382,6,324,4],[382,10,324,8],[382,11,324,9,"selfClosing"],[382,22,324,20],[382,24,324,22],[383,8,325,6,"currentElement"],[383,22,325,20],[383,25,325,23,"element"],[383,32,325,30],[384,8,326,6],[384,9,326,7],[385,10,327,8,"children"],[386,8,328,6],[386,9,328,7],[386,12,328,10,"element"],[386,19,328,17],[387,8,329,6,"stack"],[387,13,329,11],[387,14,329,12,"push"],[387,18,329,16],[387,19,329,17,"element"],[387,26,329,24],[387,27,329,25],[388,6,330,4],[389,6,331,4],[389,13,331,11,"neutral"],[389,20,331,18],[390,4,332,2],[391,4,333,2],[391,13,333,11,"comment"],[391,20,333,18,"comment"],[391,21,333,18],[391,23,333,21],[392,6,334,4],[392,12,334,10,"index"],[392,17,334,15],[392,20,334,18,"source"],[392,26,334,24],[392,27,334,25,"indexOf"],[392,34,334,32],[392,35,334,33],[392,40,334,38],[392,42,334,40,"i"],[392,43,334,41],[392,44,334,42],[393,6,335,4],[393,10,335,8],[393,11,335,9],[393,12,335,10,"index"],[393,17,335,15],[393,19,335,17],[394,8,336,6,"error"],[394,13,336,11],[394,14,336,12],[394,28,336,26],[394,29,336,27],[395,6,337,4],[396,6,338,4,"i"],[396,7,338,5],[396,10,338,8,"index"],[396,15,338,13],[396,18,338,16],[396,19,338,17],[397,6,339,4],[397,13,339,11,"neutral"],[397,20,339,18],[398,4,340,2],[399,4,341,2],[399,13,341,11,"cdata"],[399,18,341,16,"cdata"],[399,19,341,16],[399,21,341,19],[400,6,342,4],[400,12,342,10,"index"],[400,17,342,15],[400,20,342,18,"source"],[400,26,342,24],[400,27,342,25,"indexOf"],[400,34,342,32],[400,35,342,33],[400,40,342,38],[400,42,342,40,"i"],[400,43,342,41],[400,44,342,42],[401,6,343,4],[401,10,343,8],[401,11,343,9],[401,12,343,10,"index"],[401,17,343,15],[401,19,343,17],[402,8,344,6,"error"],[402,13,344,11],[402,14,344,12],[402,28,344,26],[402,29,344,27],[403,6,345,4],[404,6,346,4,"children"],[404,14,346,12],[404,15,346,13,"push"],[404,19,346,17],[404,20,346,18,"source"],[404,26,346,24],[404,27,346,25,"slice"],[404,32,346,30],[404,33,346,31,"i"],[404,34,346,32],[404,37,346,35],[404,38,346,36],[404,40,346,38,"index"],[404,45,346,43],[404,46,346,44],[404,47,346,45],[405,6,347,4,"i"],[405,7,347,5],[405,10,347,8,"index"],[405,15,347,13],[405,18,347,16],[405,19,347,17],[406,6,348,4],[406,13,348,11,"neutral"],[406,20,348,18],[407,4,349,2],[408,4,350,2],[408,13,350,11,"closingTag"],[408,23,350,21,"closingTag"],[408,24,350,21],[408,26,350,24],[409,6,351,4],[409,12,351,10,"tag"],[409,15,351,13],[409,18,351,16,"getName"],[409,25,351,23],[409,26,351,24],[409,27,351,25],[410,6,352,4],[410,10,352,8],[410,11,352,9,"tag"],[410,14,352,12],[410,16,352,14],[411,8,353,6,"error"],[411,13,353,11],[411,14,353,12],[411,33,353,31],[411,34,353,32],[412,6,354,4],[413,6,355,4],[413,10,355,8,"currentElement"],[413,24,355,22],[413,28,355,26,"tag"],[413,31,355,29],[413,36,355,34,"currentElement"],[413,50,355,48],[413,51,355,49,"tag"],[413,54,355,52],[413,56,355,54],[414,8,356,6,"error"],[414,13,356,11],[414,14,356,12],[414,40,356,38,"tag"],[414,43,356,41],[414,70,356,68,"currentElement"],[414,84,356,82],[414,85,356,83,"tag"],[414,88,356,86],[414,91,356,89],[414,92,356,90],[415,6,357,4],[416,6,358,4,"allowSpaces"],[416,17,358,15],[416,18,358,16],[416,19,358,17],[417,6,359,4],[417,10,359,8,"source"],[417,16,359,14],[417,17,359,15,"i"],[417,18,359,16],[417,19,359,17],[417,24,359,22],[417,27,359,25],[417,29,359,27],[418,8,360,6,"error"],[418,13,360,11],[418,14,360,12],[418,26,360,24],[418,27,360,25],[419,6,361,4],[420,6,362,4,"stack"],[420,11,362,9],[420,12,362,10,"pop"],[420,15,362,13],[420,16,362,14],[420,17,362,15],[421,6,363,4,"currentElement"],[421,20,363,18],[421,23,363,21,"stack"],[421,28,363,26],[421,29,363,27,"stack"],[421,34,363,32],[421,35,363,33,"length"],[421,41,363,39],[421,44,363,42],[421,45,363,43],[421,46,363,44],[422,6,364,4],[422,10,364,8,"currentElement"],[422,24,364,22],[422,26,364,24],[423,8,365,6],[423,9,365,7],[424,10,366,8,"children"],[425,8,367,6],[425,9,367,7],[425,12,367,10,"currentElement"],[425,26,367,24],[426,6,368,4],[427,6,369,4],[427,13,369,11,"neutral"],[427,20,369,18],[428,4,370,2],[429,4,371,2],[429,13,371,11,"getName"],[429,20,371,18,"getName"],[429,21,371,18],[429,23,371,21],[430,6,372,4],[430,10,372,8,"name"],[430,14,372,12],[430,17,372,15],[430,19,372,17],[431,6,373,4],[431,10,373,8,"char"],[431,14,373,12],[432,6,374,4],[432,13,374,11,"i"],[432,14,374,12],[432,17,374,15,"length"],[432,23,374,21],[432,27,374,25,"validNameCharacters"],[432,46,374,44],[432,47,374,45,"test"],[432,51,374,49],[432,52,374,50,"char"],[432,56,374,54],[432,59,374,57,"source"],[432,65,374,63],[432,66,374,64,"i"],[432,67,374,65],[432,68,374,66],[432,69,374,67],[432,71,374,69],[433,8,375,6,"name"],[433,12,375,10],[433,16,375,14,"char"],[433,20,375,18],[434,8,376,6,"i"],[434,9,376,7],[434,13,376,11],[434,14,376,12],[435,6,377,4],[436,6,378,4],[436,13,378,11,"name"],[436,17,378,15],[437,4,379,2],[438,4,380,2],[438,13,380,11,"getAttributes"],[438,26,380,24,"getAttributes"],[438,27,380,25,"props"],[438,32,380,30],[438,34,380,32],[439,6,381,4],[439,13,381,11,"i"],[439,14,381,12],[439,17,381,15,"length"],[439,23,381,21],[439,25,381,23],[440,8,382,6],[440,12,382,10],[440,13,382,11,"whitespace"],[440,23,382,21],[440,24,382,22,"test"],[440,28,382,26],[440,29,382,27,"source"],[440,35,382,33],[440,36,382,34,"i"],[440,37,382,35],[440,38,382,36],[440,39,382,37],[440,41,382,39],[441,10,383,8],[442,8,384,6],[443,8,385,6,"allowSpaces"],[443,19,385,17],[443,20,385,18],[443,21,385,19],[444,8,386,6],[444,14,386,12,"name"],[444,18,386,16],[444,21,386,19,"getName"],[444,28,386,26],[444,29,386,27],[444,30,386,28],[445,8,387,6],[445,12,387,10],[445,13,387,11,"name"],[445,17,387,15],[445,19,387,17],[446,10,388,8],[447,8,389,6],[448,8,390,6],[448,12,390,10,"value"],[448,17,390,15],[448,20,390,18],[448,24,390,22],[449,8,391,6,"allowSpaces"],[449,19,391,17],[449,20,391,18],[449,21,391,19],[450,8,392,6],[450,12,392,10,"source"],[450,18,392,16],[450,19,392,17,"i"],[450,20,392,18],[450,21,392,19],[450,26,392,24],[450,29,392,27],[450,31,392,29],[451,10,393,8,"i"],[451,11,393,9],[451,15,393,13],[451,16,393,14],[452,10,394,8,"allowSpaces"],[452,21,394,19],[452,22,394,20],[452,23,394,21],[453,10,395,8,"value"],[453,15,395,13],[453,18,395,16,"getAttributeValue"],[453,35,395,33],[453,36,395,34],[453,37,395,35],[454,10,396,8],[454,14,396,12,"name"],[454,18,396,16],[454,23,396,21],[454,27,396,25],[454,31,396,29],[454,32,396,30,"isNaN"],[454,37,396,35],[454,38,396,36],[454,39,396,37,"value"],[454,44,396,42],[454,45,396,43],[454,49,396,47,"value"],[454,54,396,52],[454,55,396,53,"trim"],[454,59,396,57],[454,60,396,58],[454,61,396,59],[454,66,396,64],[454,68,396,66],[454,70,396,68],[455,12,397,10,"value"],[455,17,397,15],[455,20,397,18],[455,21,397,19,"value"],[455,26,397,24],[456,10,398,8],[457,8,399,6],[458,8,400,6,"props"],[458,13,400,11],[458,14,400,12,"camelCase"],[458,23,400,21],[458,24,400,22,"name"],[458,28,400,26],[458,29,400,27],[458,30,400,28],[458,33,400,31,"value"],[458,38,400,36],[459,6,401,4],[460,4,402,2],[461,4,403,2],[461,13,403,11,"getAttributeValue"],[461,30,403,28,"getAttributeValue"],[461,31,403,28],[461,33,403,31],[462,6,404,4],[462,13,404,11,"quotemarks"],[462,23,404,21],[462,24,404,22,"test"],[462,28,404,26],[462,29,404,27,"source"],[462,35,404,33],[462,36,404,34,"i"],[462,37,404,35],[462,38,404,36],[462,39,404,37],[462,42,404,40,"getQuotedAttributeValue"],[462,65,404,63],[462,66,404,64],[462,67,404,65],[462,70,404,68,"getUnquotedAttributeValue"],[462,95,404,93],[462,96,404,94],[462,97,404,95],[463,4,405,2],[464,4,406,2],[464,13,406,11,"getUnquotedAttributeValue"],[464,38,406,36,"getUnquotedAttributeValue"],[464,39,406,36],[464,41,406,39],[465,6,407,4],[465,10,407,8,"value"],[465,15,407,13],[465,18,407,16],[465,20,407,18],[466,6,408,4],[466,9,408,7],[467,8,409,6],[467,14,409,12,"char"],[467,18,409,16],[467,21,409,19,"source"],[467,27,409,25],[467,28,409,26,"i"],[467,29,409,27],[467,30,409,28],[468,8,410,6],[468,12,410,10,"char"],[468,16,410,14],[468,21,410,19],[468,24,410,22],[468,28,410,26,"char"],[468,32,410,30],[468,37,410,35],[468,40,410,38],[468,44,410,42,"char"],[468,48,410,46],[468,53,410,51],[468,56,410,54],[468,58,410,56],[469,10,411,8],[469,17,411,15,"value"],[469,22,411,20],[470,8,412,6],[471,8,413,6,"value"],[471,13,413,11],[471,17,413,15,"char"],[471,21,413,19],[472,8,414,6,"i"],[472,9,414,7],[472,13,414,11],[472,14,414,12],[473,6,415,4],[473,7,415,5],[473,15,415,13,"i"],[473,16,415,14],[473,19,415,17,"length"],[473,25,415,23],[474,6,416,4],[474,13,416,11,"value"],[474,18,416,16],[475,4,417,2],[476,4,418,2],[476,13,418,11,"getQuotedAttributeValue"],[476,36,418,34,"getQuotedAttributeValue"],[476,37,418,34],[476,39,418,37],[477,6,419,4],[477,12,419,10,"quotemark"],[477,21,419,19],[477,24,419,22,"source"],[477,30,419,28],[477,31,419,29,"i"],[477,32,419,30],[477,34,419,32],[477,35,419,33],[478,6,420,4],[478,10,420,8,"value"],[478,15,420,13],[478,18,420,16],[478,20,420,18],[479,6,421,4],[479,10,421,8,"escaped"],[479,17,421,15],[479,20,421,18],[479,25,421,23],[480,6,422,4],[480,13,422,11,"i"],[480,14,422,12],[480,17,422,15,"length"],[480,23,422,21],[480,25,422,23],[481,8,423,6],[481,14,423,12,"char"],[481,18,423,16],[481,21,423,19,"source"],[481,27,423,25],[481,28,423,26,"i"],[481,29,423,27],[481,31,423,29],[481,32,423,30],[482,8,424,6],[482,12,424,10,"char"],[482,16,424,14],[482,21,424,19,"quotemark"],[482,30,424,28],[482,34,424,32],[482,35,424,33,"escaped"],[482,42,424,40],[482,44,424,42],[483,10,425,8],[483,17,425,15,"value"],[483,22,425,20],[484,8,426,6],[485,8,427,6],[485,12,427,10,"char"],[485,16,427,14],[485,21,427,19],[485,25,427,23],[485,29,427,27],[485,30,427,28,"escaped"],[485,37,427,35],[485,39,427,37],[486,10,428,8,"escaped"],[486,17,428,15],[486,20,428,18],[486,24,428,22],[487,8,429,6],[488,8,430,6,"value"],[488,13,430,11],[488,17,430,15,"escaped"],[488,24,430,22],[488,27,430,25],[488,32,430,30,"char"],[488,36,430,34],[488,38,430,36],[488,41,430,39,"char"],[488,45,430,43],[489,8,431,6,"escaped"],[489,15,431,13],[489,18,431,16],[489,23,431,21],[490,6,432,4],[491,6,433,4],[491,13,433,11,"value"],[491,18,433,16],[492,4,434,2],[493,4,435,2],[493,13,435,11,"allowSpaces"],[493,24,435,22,"allowSpaces"],[493,25,435,22],[493,27,435,25],[494,6,436,4],[494,13,436,11,"i"],[494,14,436,12],[494,17,436,15,"length"],[494,23,436,21],[494,27,436,25,"whitespace"],[494,37,436,35],[494,38,436,36,"test"],[494,42,436,40],[494,43,436,41,"source"],[494,49,436,47],[494,50,436,48,"i"],[494,51,436,49],[494,52,436,50],[494,53,436,51],[494,55,436,53],[495,8,437,6,"i"],[495,9,437,7],[495,13,437,11],[495,14,437,12],[496,6,438,4],[497,4,439,2],[498,4,440,2],[498,8,440,6,"i"],[498,9,440,7],[498,12,440,10],[498,13,440,11],[499,4,441,2],[499,11,441,9,"i"],[499,12,441,10],[499,15,441,13,"length"],[499,21,441,19],[499,23,441,21],[500,6,442,4],[500,10,442,8],[500,11,442,9,"state"],[500,16,442,14],[500,18,442,16],[501,8,443,6,"error"],[501,13,443,11],[501,14,443,12],[501,36,443,34],[501,37,443,35],[502,6,444,4],[503,6,445,4,"state"],[503,11,445,9],[503,14,445,12,"state"],[503,19,445,17],[503,20,445,18],[503,21,445,19],[504,6,446,4,"i"],[504,7,446,5],[504,11,446,9],[504,12,446,10],[505,4,447,2],[506,4,448,2],[506,8,448,6,"state"],[506,13,448,11],[506,18,448,16,"neutral"],[506,25,448,23],[506,27,448,25],[507,6,449,4,"error"],[507,11,449,9],[507,12,449,10],[507,37,449,35],[507,38,449,36],[508,4,450,2],[509,4,451,2],[509,8,451,6,"root"],[509,12,451,10],[509,14,451,12],[510,6,452,4],[510,12,452,10,"xml"],[510,15,452,13],[510,18,452,16],[510,19,452,17,"middleware"],[510,29,452,27],[510,32,452,30,"middleware"],[510,42,452,40],[510,43,452,41,"root"],[510,47,452,45],[510,48,452,46],[510,51,452,49,"root"],[510,55,452,53],[510,60,452,58,"root"],[510,64,452,62],[511,6,453,4],[511,12,453,10,"ast"],[511,15,453,13],[511,18,453,16,"xml"],[511,21,453,19],[511,22,453,20,"children"],[511,30,453,28],[511,31,453,29,"map"],[511,34,453,32],[511,35,453,33,"astToReact"],[511,45,453,43],[511,46,453,44],[512,6,454,4],[512,12,454,10,"jsx"],[512,15,454,13],[512,18,454,16,"xml"],[512,21,454,19],[513,6,455,4,"jsx"],[513,9,455,7],[513,10,455,8,"children"],[513,18,455,16],[513,21,455,19,"ast"],[513,24,455,22],[514,6,456,4],[514,13,456,11,"jsx"],[514,16,456,14],[515,4,457,2],[516,4,458,2],[516,11,458,9],[516,15,458,13],[517,2,459,0],[518,0,459,1],[518,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","SvgUri","useEffect$argument_0","fetchText.then$argument_0","fetchText.then._catch$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","string.split.filter$argument_0","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA,+EC,iKD,oCE;ACK;CDE;OEC;CFa;OGE;wBCQ,sCD;CHS;OKC;YCS;8BCC;KDI,QE;KFG;GDE;CLS;OSI;ECI;GDE;EEC;GFO;EGC;GHe;EIC;GJW;CTC;OcC;ECI;GDE;EEC;GFO;EGC;GHQ;EIC;GJY;CdC;kBmBC,wCnB;yBoBC,mDpB;OqBC;gDCE,aD;CrBc;OuBC;CvBgB;AwBI;CxBM;iByBC,iCzB;A0BC;C1B4B;O2BK;ECO;GDO;EEC;GFK;EGC;GHc;EIC;GJ4D;EKC;GLO;EMC;GNQ;EOC;GPoB;EQC;GRQ;ESC;GTsB;EUC;GVE;EWC;GXW;EYC;GZgB;EaC;GbI;C3BoB"},"hasCjsExports":false},"type":"js/module"}]}