{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":37,"index":471},"end":{"line":20,"column":53,"index":487}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./utils/fetchData","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":17,"index":527},"end":{"line":22,"column":45,"index":555}}],"key":"3gNQrkv2HsnCGjIfQ7Lewb0Maas=","exportNames":["*"],"imports":1}},{"name":"./xmlTags","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":15,"index":572},"end":{"line":23,"column":35,"index":592}}],"key":"4o/C7SvV/HjW7MQMWglXTR4PEAM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgFromXml = exports.SvgFromUri = void 0;\n  exports.SvgUri = SvgUri;\n  exports.SvgXml = SvgXml;\n  exports.astToReact = astToReact;\n  exports.camelCase = void 0;\n  exports.getStyle = getStyle;\n  exports.parse = parse;\n  Object.defineProperty(exports, \"tags\", {\n    enumerable: true,\n    get: function () {\n      return _xmlTags.tags;\n    }\n  });\n  var _react = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var React = _react;\n  var _fetchData = require(_dependencyMap[1], \"./utils/fetchData\");\n  var _xmlTags = require(_dependencyMap[2], \"./xmlTags\");\n  function _interopRequireWildcard(e, t) {\n    if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n      n = new WeakMap();\n    return (_interopRequireWildcard = function (e, t) {\n      if (!t && e && e.__esModule) return e;\n      var o,\n        i,\n        f = {\n          __proto__: null,\n          default: e\n        };\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f;\n      if (o = t ? n : r) {\n        if (o.has(e)) return o.get(e);\n        o.set(e, f);\n      }\n      for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);\n      return f;\n    })(e, t);\n  }\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  function missingTag() {\n    return null;\n  }\n  function SvgAst({\n    ast,\n    override\n  }) {\n    if (!ast) {\n      return null;\n    }\n    const {\n      props,\n      children\n    } = ast;\n    const Svg = _xmlTags.tags.svg;\n    return /*#__PURE__*/React.createElement(Svg, _extends({}, props, override), children);\n  }\n  const err = console.error.bind(console);\n  function SvgXml(props) {\n    const {\n      onError = err,\n      xml,\n      override,\n      fallback\n    } = props;\n    try {\n      const ast = (0, _react.useMemo)(() => xml !== null ? parse(xml) : null, [xml]);\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: override || props\n      });\n    } catch (error) {\n      onError(error);\n      return fallback ?? null;\n    }\n  }\n  function SvgUri(props) {\n    const {\n      onError = err,\n      uri,\n      onLoad,\n      fallback\n    } = props;\n    const [xml, setXml] = (0, _react.useState)(null);\n    const [isError, setIsError] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      uri ? (0, _fetchData.fetchText)(uri).then(data => {\n        setXml(data);\n        isError && setIsError(false);\n        onLoad === null || onLoad === void 0 || onLoad();\n      }).catch(e => {\n        onError(e);\n        setIsError(true);\n      }) : setXml(null);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onError, uri, onLoad]);\n    if (isError) {\n      return fallback ?? null;\n    }\n    return /*#__PURE__*/React.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      fallback: fallback\n    });\n  }\n\n  // Extending Component is required for Animated support.\n\n  class SvgFromXml extends _react.Component {\n    state = {\n      ast: null\n    };\n    componentDidMount() {\n      this.parse(this.props.xml);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        xml\n      } = this.props;\n      if (xml !== prevProps.xml) {\n        this.parse(xml);\n      }\n    }\n    parse(xml) {\n      const {\n        onError = err\n      } = this.props;\n      try {\n        this.setState({\n          ast: xml ? parse(xml) : null\n        });\n      } catch (e) {\n        const error = e;\n        onError({\n          ...error,\n          message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`\n        });\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          ast\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: props.override || props\n      });\n    }\n  }\n  exports.SvgFromXml = SvgFromXml;\n  class SvgFromUri extends _react.Component {\n    state = {\n      xml: null\n    };\n    componentDidMount() {\n      this.fetch(this.props.uri);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        uri\n      } = this.props;\n      if (uri !== prevProps.uri) {\n        this.fetch(uri);\n      }\n    }\n    async fetch(uri) {\n      try {\n        this.setState({\n          xml: uri ? await (0, _fetchData.fetchText)(uri) : null\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          xml\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgFromXml, {\n        xml: xml,\n        override: props,\n        onError: props.onError\n      });\n    }\n  }\n  exports.SvgFromUri = SvgFromUri;\n  const upperCase = (_match, letter) => letter.toUpperCase();\n  const camelCase = phrase => phrase.replace(/[:-]([a-z])/g, upperCase);\n  exports.camelCase = camelCase;\n  function getStyle(string) {\n    const style = {};\n    const declarations = string.split(';').filter(v => v.trim());\n    const {\n      length\n    } = declarations;\n    for (let i = 0; i < length; i++) {\n      const declaration = declarations[i];\n      if (declaration.length !== 0) {\n        const split = declaration.split(':');\n        const property = split[0];\n        const value = split[1];\n        style[camelCase(property.trim())] = value.trim();\n      }\n    }\n    return style;\n  }\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      const {\n        Tag,\n        props,\n        children\n      } = value;\n      if (props !== null && props !== void 0 && props.class) {\n        props.className = props.class;\n        delete props.class;\n      }\n      return /*#__PURE__*/React.createElement(Tag, _extends({\n        key: index\n      }, props), children.map(astToReact));\n    }\n    return value;\n  }\n\n  // slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\n  function repeat(str, i) {\n    let result = '';\n    while (i--) {\n      result += str;\n    }\n    return result;\n  }\n  const toSpaces = tabs => repeat('  ', tabs.length);\n  function locate(source, i) {\n    const lines = source.split('\\n');\n    const nLines = lines.length;\n    let column = i;\n    let line = 0;\n    for (; line < nLines; line++) {\n      const {\n        length\n      } = lines[line];\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n    const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    const beforeExec = /(^|\\n).*$/.exec(before);\n    const beforeLine = beforeExec && beforeExec[0] || '';\n    const after = source.slice(i);\n    const afterExec = /.*(\\n|$)/.exec(after);\n    const afterLine = afterExec && afterExec[0];\n    const pad = repeat(' ', beforeLine.length);\n    const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n    return {\n      line,\n      column,\n      snippet\n    };\n  }\n  const validNameCharacters = /[a-zA-Z0-9:_-]/;\n  const commentStart = /<!--/;\n  const whitespace = /[\\s\\t\\r\\n]/;\n  const quotemarks = /['\"]/;\n  function parse(source, middleware) {\n    const length = source.length;\n    let currentElement = null;\n    let state = metadata;\n    let children = null;\n    let root;\n    const stack = [];\n    function error(message) {\n      const {\n        line,\n        column,\n        snippet\n      } = locate(source, i);\n      throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);\n    }\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !(validNameCharacters.test(source[i + 1]) || commentStart.test(source.slice(i, i + 4))))) {\n        i++;\n      }\n      return neutral();\n    }\n    function neutral() {\n      let text = '';\n      let char;\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n      if (source[i] === '<') {\n        return openingTag;\n      }\n      return neutral;\n    }\n    function openingTag() {\n      const char = source[i];\n      if (char === '?') {\n        return neutral;\n      } // <?xml...\n\n      if (char === '!') {\n        const start = i + 1;\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n        const end = i + 8;\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n      if (char === '/') {\n        return closingTag;\n      }\n      const tag = getName();\n      const props = {};\n      const element = {\n        tag,\n        props,\n        children: [],\n        parent: currentElement,\n        Tag: _xmlTags.tags[tag] || missingTag\n      };\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n      getAttributes(props);\n      const {\n        style\n      } = props;\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n      let selfClosing = false;\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      if (!selfClosing) {\n        currentElement = element;\n        ({\n          children\n        } = element);\n        stack.push(element);\n      }\n      return neutral;\n    }\n    function comment() {\n      const index = source.indexOf('-->', i);\n      if (!~index) {\n        error('expected -->');\n      }\n      i = index + 2;\n      return neutral;\n    }\n    function cdata() {\n      const index = source.indexOf(']]>', i);\n      if (!~index) {\n        error('expected ]]>');\n      }\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n    function closingTag() {\n      const tag = getName();\n      if (!tag) {\n        error('Expected tag name');\n      }\n      if (currentElement && tag !== currentElement.tag) {\n        error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);\n      }\n      allowSpaces();\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n      if (currentElement) {\n        ({\n          children\n        } = currentElement);\n      }\n      return neutral;\n    }\n    function getName() {\n      let name = '';\n      let char;\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n      return name;\n    }\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n        allowSpaces();\n        const name = getName();\n        if (!name) {\n          return;\n        }\n        let value = true;\n        allowSpaces();\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n          if (name !== 'id' && !isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n        props[camelCase(name)] = value;\n      }\n    }\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n    function getUnquotedAttributeValue() {\n      let value = '';\n      do {\n        const char = source[i];\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n        value += char;\n        i += 1;\n      } while (i < length);\n      return value;\n    }\n    function getQuotedAttributeValue() {\n      const quotemark = source[i++];\n      let value = '';\n      let escaped = false;\n      while (i < length) {\n        const char = source[i++];\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n        value += escaped ? `\\\\${char}` : char;\n        escaped = false;\n      }\n      return value;\n    }\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n    let i = 0;\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n      state = state();\n      i += 1;\n    }\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n    if (root) {\n      const xml = (middleware ? middleware(root) : root) || root;\n      const ast = xml.children.map(astToReact);\n      const jsx = xml;\n      jsx.children = ast;\n      return jsx;\n    }\n    return null;\n  }\n});","lineCount":511,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"SvgAst"],[7,16,6,14],[7,19,6,17,"SvgAst"],[7,25,6,23],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"SvgFromXml"],[8,20,7,18],[8,23,7,21,"exports"],[8,30,7,28],[8,31,7,29,"SvgFromUri"],[8,41,7,39],[8,44,7,42],[8,49,7,47],[8,50,7,48],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"SvgUri"],[9,16,8,14],[9,19,8,17,"SvgUri"],[9,25,8,23],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"SvgXml"],[10,16,9,14],[10,19,9,17,"SvgXml"],[10,25,9,23],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"astToReact"],[11,20,10,18],[11,23,10,21,"astToReact"],[11,33,10,31],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"camelCase"],[12,19,11,17],[12,22,11,20],[12,27,11,25],[12,28,11,26],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"getStyle"],[13,18,12,16],[13,21,12,19,"getStyle"],[13,29,12,27],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"parse"],[14,15,13,13],[14,18,13,16,"parse"],[14,23,13,21],[15,2,14,0,"Object"],[15,8,14,6],[15,9,14,7,"defineProperty"],[15,23,14,21],[15,24,14,22,"exports"],[15,31,14,29],[15,33,14,31],[15,39,14,37],[15,41,14,39],[16,4,15,2,"enumerable"],[16,14,15,12],[16,16,15,14],[16,20,15,18],[17,4,16,2,"get"],[17,7,16,5],[17,9,16,7],[17,18,16,7,"get"],[17,19,16,7],[17,21,16,19],[18,6,17,4],[18,13,17,11,"_xmlTags"],[18,21,17,19],[18,22,17,20,"tags"],[18,26,17,24],[19,4,18,2],[20,2,19,0],[20,3,19,1],[20,4,19,2],[21,2,20,0],[21,6,20,4,"_react"],[21,12,20,10],[21,15,20,13,"_interopRequireWildcard"],[21,38,20,36],[21,39,20,37,"require"],[21,46,20,44],[21,47,20,44,"_dependencyMap"],[21,61,20,44],[21,73,20,52],[21,74,20,53],[21,75,20,54],[22,2,21,0],[22,6,21,4,"React"],[22,11,21,9],[22,14,21,12,"_react"],[22,20,21,18],[23,2,22,0],[23,6,22,4,"_fetchData"],[23,16,22,14],[23,19,22,17,"require"],[23,26,22,24],[23,27,22,24,"_dependencyMap"],[23,41,22,24],[23,65,22,44],[23,66,22,45],[24,2,23,0],[24,6,23,4,"_xmlTags"],[24,14,23,12],[24,17,23,15,"require"],[24,24,23,22],[24,25,23,22,"_dependencyMap"],[24,39,23,22],[24,55,23,34],[24,56,23,35],[25,2,24,0],[25,11,24,9,"_interopRequireWildcard"],[25,34,24,32,"_interopRequireWildcard"],[25,35,24,33,"e"],[25,36,24,34],[25,38,24,36,"t"],[25,39,24,37],[25,41,24,39],[26,4,24,41],[26,8,24,45],[26,18,24,55],[26,22,24,59],[26,29,24,66,"WeakMap"],[26,36,24,73],[26,38,24,75],[26,42,24,79,"r"],[26,43,24,80],[26,46,24,83],[26,50,24,87,"WeakMap"],[26,57,24,94],[26,58,24,95],[26,59,24,96],[27,6,24,98,"n"],[27,7,24,99],[27,10,24,102],[27,14,24,106,"WeakMap"],[27,21,24,113],[27,22,24,114],[27,23,24,115],[28,4,24,117],[28,11,24,124],[28,12,24,125,"_interopRequireWildcard"],[28,35,24,148],[28,38,24,151],[28,47,24,151,"_interopRequireWildcard"],[28,48,24,161,"e"],[28,49,24,162],[28,51,24,164,"t"],[28,52,24,165],[28,54,24,167],[29,6,24,169],[29,10,24,173],[29,11,24,174,"t"],[29,12,24,175],[29,16,24,179,"e"],[29,17,24,180],[29,21,24,184,"e"],[29,22,24,185],[29,23,24,186,"__esModule"],[29,33,24,196],[29,35,24,198],[29,42,24,205,"e"],[29,43,24,206],[30,6,24,208],[30,10,24,212,"o"],[30,11,24,213],[31,8,24,215,"i"],[31,9,24,216],[32,8,24,218,"f"],[32,9,24,219],[32,12,24,222],[33,10,24,224,"__proto__"],[33,19,24,233],[33,21,24,235],[33,25,24,239],[34,10,24,241,"default"],[34,17,24,248],[34,19,24,250,"e"],[35,8,24,252],[35,9,24,253],[36,6,24,255],[36,10,24,259],[36,14,24,263],[36,19,24,268,"e"],[36,20,24,269],[36,24,24,273],[36,32,24,281],[36,36,24,285],[36,43,24,292,"e"],[36,44,24,293],[36,48,24,297],[36,58,24,307],[36,62,24,311],[36,69,24,318,"e"],[36,70,24,319],[36,72,24,321],[36,79,24,328,"f"],[36,80,24,329],[37,6,24,331],[37,10,24,335,"o"],[37,11,24,336],[37,14,24,339,"t"],[37,15,24,340],[37,18,24,343,"n"],[37,19,24,344],[37,22,24,347,"r"],[37,23,24,348],[37,25,24,350],[38,8,24,352],[38,12,24,356,"o"],[38,13,24,357],[38,14,24,358,"has"],[38,17,24,361],[38,18,24,362,"e"],[38,19,24,363],[38,20,24,364],[38,22,24,366],[38,29,24,373,"o"],[38,30,24,374],[38,31,24,375,"get"],[38,34,24,378],[38,35,24,379,"e"],[38,36,24,380],[38,37,24,381],[39,8,24,383,"o"],[39,9,24,384],[39,10,24,385,"set"],[39,13,24,388],[39,14,24,389,"e"],[39,15,24,390],[39,17,24,392,"f"],[39,18,24,393],[39,19,24,394],[40,6,24,396],[41,6,24,398],[41,11,24,403],[41,17,24,409,"t"],[41,18,24,410],[41,22,24,414,"e"],[41,23,24,415],[41,25,24,417],[41,34,24,426],[41,39,24,431,"t"],[41,40,24,432],[41,44,24,436],[41,45,24,437],[41,46,24,438],[41,47,24,439,"hasOwnProperty"],[41,61,24,453],[41,62,24,454,"call"],[41,66,24,458],[41,67,24,459,"e"],[41,68,24,460],[41,70,24,462,"t"],[41,71,24,463],[41,72,24,464],[41,77,24,469],[41,78,24,470,"i"],[41,79,24,471],[41,82,24,474],[41,83,24,475,"o"],[41,84,24,476],[41,87,24,479,"Object"],[41,93,24,485],[41,94,24,486,"defineProperty"],[41,108,24,500],[41,113,24,505,"Object"],[41,119,24,511],[41,120,24,512,"getOwnPropertyDescriptor"],[41,144,24,536],[41,145,24,537,"e"],[41,146,24,538],[41,148,24,540,"t"],[41,149,24,541],[41,150,24,542],[41,156,24,548,"i"],[41,157,24,549],[41,158,24,550,"get"],[41,161,24,553],[41,165,24,557,"i"],[41,166,24,558],[41,167,24,559,"set"],[41,170,24,562],[41,171,24,563],[41,174,24,566,"o"],[41,175,24,567],[41,176,24,568,"f"],[41,177,24,569],[41,179,24,571,"t"],[41,180,24,572],[41,182,24,574,"i"],[41,183,24,575],[41,184,24,576],[41,187,24,579,"f"],[41,188,24,580],[41,189,24,581,"t"],[41,190,24,582],[41,191,24,583],[41,194,24,586,"e"],[41,195,24,587],[41,196,24,588,"t"],[41,197,24,589],[41,198,24,590],[41,199,24,591],[42,6,24,593],[42,13,24,600,"f"],[42,14,24,601],[43,4,24,603],[43,5,24,604],[43,7,24,606,"e"],[43,8,24,607],[43,10,24,609,"t"],[43,11,24,610],[43,12,24,611],[44,2,24,613],[45,2,25,0],[45,11,25,9,"_extends"],[45,19,25,17,"_extends"],[45,20,25,17],[45,22,25,20],[46,4,25,22],[46,11,25,29,"_extends"],[46,19,25,37],[46,22,25,40,"Object"],[46,28,25,46],[46,29,25,47,"assign"],[46,35,25,53],[46,38,25,56,"Object"],[46,44,25,62],[46,45,25,63,"assign"],[46,51,25,69],[46,52,25,70,"bind"],[46,56,25,74],[46,57,25,75],[46,58,25,76],[46,61,25,79],[46,71,25,89,"n"],[46,72,25,90],[46,74,25,92],[47,6,25,94],[47,11,25,99],[47,15,25,103,"e"],[47,16,25,104],[47,19,25,107],[47,20,25,108],[47,22,25,110,"e"],[47,23,25,111],[47,26,25,114,"arguments"],[47,35,25,123],[47,36,25,124,"length"],[47,42,25,130],[47,44,25,132,"e"],[47,45,25,133],[47,47,25,135],[47,49,25,137],[48,8,25,139],[48,12,25,143,"t"],[48,13,25,144],[48,16,25,147,"arguments"],[48,25,25,156],[48,26,25,157,"e"],[48,27,25,158],[48,28,25,159],[49,8,25,161],[49,13,25,166],[49,17,25,170,"r"],[49,18,25,171],[49,22,25,175,"t"],[49,23,25,176],[49,25,25,178],[49,26,25,179],[49,27,25,180],[49,28,25,181],[49,30,25,183,"hasOwnProperty"],[49,44,25,197],[49,45,25,198,"call"],[49,49,25,202],[49,50,25,203,"t"],[49,51,25,204],[49,53,25,206,"r"],[49,54,25,207],[49,55,25,208],[49,60,25,213,"n"],[49,61,25,214],[49,62,25,215,"r"],[49,63,25,216],[49,64,25,217],[49,67,25,220,"t"],[49,68,25,221],[49,69,25,222,"r"],[49,70,25,223],[49,71,25,224],[49,72,25,225],[50,6,25,227],[51,6,25,229],[51,13,25,236,"n"],[51,14,25,237],[52,4,25,239],[52,5,25,240],[52,7,25,242,"_extends"],[52,15,25,250],[52,16,25,251,"apply"],[52,21,25,256],[52,22,25,257],[52,26,25,261],[52,28,25,263,"arguments"],[52,37,25,272],[52,38,25,273],[53,2,25,275],[54,2,26,0],[54,11,26,9,"missingTag"],[54,21,26,19,"missingTag"],[54,22,26,19],[54,24,26,22],[55,4,27,2],[55,11,27,9],[55,15,27,13],[56,2,28,0],[57,2,29,0],[57,11,29,9,"SvgAst"],[57,17,29,15,"SvgAst"],[57,18,29,16],[58,4,30,2,"ast"],[58,7,30,5],[59,4,31,2,"override"],[60,2,32,0],[60,3,32,1],[60,5,32,3],[61,4,33,2],[61,8,33,6],[61,9,33,7,"ast"],[61,12,33,10],[61,14,33,12],[62,6,34,4],[62,13,34,11],[62,17,34,15],[63,4,35,2],[64,4,36,2],[64,10,36,8],[65,6,37,4,"props"],[65,11,37,9],[66,6,38,4,"children"],[67,4,39,2],[67,5,39,3],[67,8,39,6,"ast"],[67,11,39,9],[68,4,40,2],[68,10,40,8,"Svg"],[68,13,40,11],[68,16,40,14,"_xmlTags"],[68,24,40,22],[68,25,40,23,"tags"],[68,29,40,27],[68,30,40,28,"svg"],[68,33,40,31],[69,4,41,2],[69,11,41,9],[69,24,41,22,"React"],[69,29,41,27],[69,30,41,28,"createElement"],[69,43,41,41],[69,44,41,42,"Svg"],[69,47,41,45],[69,49,41,47,"_extends"],[69,57,41,55],[69,58,41,56],[69,59,41,57],[69,60,41,58],[69,62,41,60,"props"],[69,67,41,65],[69,69,41,67,"override"],[69,77,41,75],[69,78,41,76],[69,80,41,78,"children"],[69,88,41,86],[69,89,41,87],[70,2,42,0],[71,2,43,0],[71,8,43,6,"err"],[71,11,43,9],[71,14,43,12,"console"],[71,21,43,19],[71,22,43,20,"error"],[71,27,43,25],[71,28,43,26,"bind"],[71,32,43,30],[71,33,43,31,"console"],[71,40,43,38],[71,41,43,39],[72,2,44,0],[72,11,44,9,"SvgXml"],[72,17,44,15,"SvgXml"],[72,18,44,16,"props"],[72,23,44,21],[72,25,44,23],[73,4,45,2],[73,10,45,8],[74,6,46,4,"onError"],[74,13,46,11],[74,16,46,14,"err"],[74,19,46,17],[75,6,47,4,"xml"],[75,9,47,7],[76,6,48,4,"override"],[76,14,48,12],[77,6,49,4,"fallback"],[78,4,50,2],[78,5,50,3],[78,8,50,6,"props"],[78,13,50,11],[79,4,51,2],[79,8,51,6],[80,6,52,4],[80,12,52,10,"ast"],[80,15,52,13],[80,18,52,16],[80,19,52,17],[80,20,52,18],[80,22,52,20,"_react"],[80,28,52,26],[80,29,52,27,"useMemo"],[80,36,52,34],[80,38,52,36],[80,44,52,42,"xml"],[80,47,52,45],[80,52,52,50],[80,56,52,54],[80,59,52,57,"parse"],[80,64,52,62],[80,65,52,63,"xml"],[80,68,52,66],[80,69,52,67],[80,72,52,70],[80,76,52,74],[80,78,52,76],[80,79,52,77,"xml"],[80,82,52,80],[80,83,52,81],[80,84,52,82],[81,6,53,4],[81,13,53,11],[81,26,53,24,"React"],[81,31,53,29],[81,32,53,30,"createElement"],[81,45,53,43],[81,46,53,44,"SvgAst"],[81,52,53,50],[81,54,53,52],[82,8,54,6,"ast"],[82,11,54,9],[82,13,54,11,"ast"],[82,16,54,14],[83,8,55,6,"override"],[83,16,55,14],[83,18,55,16,"override"],[83,26,55,24],[83,30,55,28,"props"],[84,6,56,4],[84,7,56,5],[84,8,56,6],[85,4,57,2],[85,5,57,3],[85,6,57,4],[85,13,57,11,"error"],[85,18,57,16],[85,20,57,18],[86,6,58,4,"onError"],[86,13,58,11],[86,14,58,12,"error"],[86,19,58,17],[86,20,58,18],[87,6,59,4],[87,13,59,11,"fallback"],[87,21,59,19],[87,25,59,23],[87,29,59,27],[88,4,60,2],[89,2,61,0],[90,2,62,0],[90,11,62,9,"SvgUri"],[90,17,62,15,"SvgUri"],[90,18,62,16,"props"],[90,23,62,21],[90,25,62,23],[91,4,63,2],[91,10,63,8],[92,6,64,4,"onError"],[92,13,64,11],[92,16,64,14,"err"],[92,19,64,17],[93,6,65,4,"uri"],[93,9,65,7],[94,6,66,4,"onLoad"],[94,12,66,10],[95,6,67,4,"fallback"],[96,4,68,2],[96,5,68,3],[96,8,68,6,"props"],[96,13,68,11],[97,4,69,2],[97,10,69,8],[97,11,69,9,"xml"],[97,14,69,12],[97,16,69,14,"setXml"],[97,22,69,20],[97,23,69,21],[97,26,69,24],[97,27,69,25],[97,28,69,26],[97,30,69,28,"_react"],[97,36,69,34],[97,37,69,35,"useState"],[97,45,69,43],[97,47,69,45],[97,51,69,49],[97,52,69,50],[98,4,70,2],[98,10,70,8],[98,11,70,9,"isError"],[98,18,70,16],[98,20,70,18,"setIsError"],[98,30,70,28],[98,31,70,29],[98,34,70,32],[98,35,70,33],[98,36,70,34],[98,38,70,36,"_react"],[98,44,70,42],[98,45,70,43,"useState"],[98,53,70,51],[98,55,70,53],[98,60,70,58],[98,61,70,59],[99,4,71,2],[99,5,71,3],[99,6,71,4],[99,8,71,6,"_react"],[99,14,71,12],[99,15,71,13,"useEffect"],[99,24,71,22],[99,26,71,24],[99,32,71,30],[100,6,72,4,"uri"],[100,9,72,7],[100,12,72,10],[100,13,72,11],[100,14,72,12],[100,16,72,14,"_fetchData"],[100,26,72,24],[100,27,72,25,"fetchText"],[100,36,72,34],[100,38,72,36,"uri"],[100,41,72,39],[100,42,72,40],[100,43,72,41,"then"],[100,47,72,45],[100,48,72,46,"data"],[100,52,72,50],[100,56,72,54],[101,8,73,6,"setXml"],[101,14,73,12],[101,15,73,13,"data"],[101,19,73,17],[101,20,73,18],[102,8,74,6,"isError"],[102,15,74,13],[102,19,74,17,"setIsError"],[102,29,74,27],[102,30,74,28],[102,35,74,33],[102,36,74,34],[103,8,75,6,"onLoad"],[103,14,75,12],[103,19,75,17],[103,23,75,21],[103,27,75,25,"onLoad"],[103,33,75,31],[103,38,75,36],[103,43,75,41],[103,44,75,42],[103,48,75,46,"onLoad"],[103,54,75,52],[103,55,75,53],[103,56,75,54],[104,6,76,4],[104,7,76,5],[104,8,76,6],[104,9,76,7,"catch"],[104,14,76,12],[104,15,76,13,"e"],[104,16,76,14],[104,20,76,18],[105,8,77,6,"onError"],[105,15,77,13],[105,16,77,14,"e"],[105,17,77,15],[105,18,77,16],[106,8,78,6,"setIsError"],[106,18,78,16],[106,19,78,17],[106,23,78,21],[106,24,78,22],[107,6,79,4],[107,7,79,5],[107,8,79,6],[107,11,79,9,"setXml"],[107,17,79,15],[107,18,79,16],[107,22,79,20],[107,23,79,21],[108,6,80,4],[109,4,81,2],[109,5,81,3],[109,7,81,5],[109,8,81,6,"onError"],[109,15,81,13],[109,17,81,15,"uri"],[109,20,81,18],[109,22,81,20,"onLoad"],[109,28,81,26],[109,29,81,27],[109,30,81,28],[110,4,82,2],[110,8,82,6,"isError"],[110,15,82,13],[110,17,82,15],[111,6,83,4],[111,13,83,11,"fallback"],[111,21,83,19],[111,25,83,23],[111,29,83,27],[112,4,84,2],[113,4,85,2],[113,11,85,9],[113,24,85,22,"React"],[113,29,85,27],[113,30,85,28,"createElement"],[113,43,85,41],[113,44,85,42,"SvgXml"],[113,50,85,48],[113,52,85,50],[114,6,86,4,"xml"],[114,9,86,7],[114,11,86,9,"xml"],[114,14,86,12],[115,6,87,4,"override"],[115,14,87,12],[115,16,87,14,"props"],[115,21,87,19],[116,6,88,4,"fallback"],[116,14,88,12],[116,16,88,14,"fallback"],[117,4,89,2],[117,5,89,3],[117,6,89,4],[118,2,90,0],[120,2,92,0],[122,2,94,0],[122,8,94,6,"SvgFromXml"],[122,18,94,16],[122,27,94,25,"_react"],[122,33,94,31],[122,34,94,32,"Component"],[122,43,94,41],[122,44,94,42],[123,4,95,2,"state"],[123,9,95,7],[123,12,95,10],[124,6,96,4,"ast"],[124,9,96,7],[124,11,96,9],[125,4,97,2],[125,5,97,3],[126,4,98,2,"componentDidMount"],[126,21,98,19,"componentDidMount"],[126,22,98,19],[126,24,98,22],[127,6,99,4],[127,10,99,8],[127,11,99,9,"parse"],[127,16,99,14],[127,17,99,15],[127,21,99,19],[127,22,99,20,"props"],[127,27,99,25],[127,28,99,26,"xml"],[127,31,99,29],[127,32,99,30],[128,4,100,2],[129,4,101,2,"componentDidUpdate"],[129,22,101,20,"componentDidUpdate"],[129,23,101,21,"prevProps"],[129,32,101,30],[129,34,101,32],[130,6,102,4],[130,12,102,10],[131,8,103,6,"xml"],[132,6,104,4],[132,7,104,5],[132,10,104,8],[132,14,104,12],[132,15,104,13,"props"],[132,20,104,18],[133,6,105,4],[133,10,105,8,"xml"],[133,13,105,11],[133,18,105,16,"prevProps"],[133,27,105,25],[133,28,105,26,"xml"],[133,31,105,29],[133,33,105,31],[134,8,106,6],[134,12,106,10],[134,13,106,11,"parse"],[134,18,106,16],[134,19,106,17,"xml"],[134,22,106,20],[134,23,106,21],[135,6,107,4],[136,4,108,2],[137,4,109,2,"parse"],[137,9,109,7,"parse"],[137,10,109,8,"xml"],[137,13,109,11],[137,15,109,13],[138,6,110,4],[138,12,110,10],[139,8,111,6,"onError"],[139,15,111,13],[139,18,111,16,"err"],[140,6,112,4],[140,7,112,5],[140,10,112,8],[140,14,112,12],[140,15,112,13,"props"],[140,20,112,18],[141,6,113,4],[141,10,113,8],[142,8,114,6],[142,12,114,10],[142,13,114,11,"setState"],[142,21,114,19],[142,22,114,20],[143,10,115,8,"ast"],[143,13,115,11],[143,15,115,13,"xml"],[143,18,115,16],[143,21,115,19,"parse"],[143,26,115,24],[143,27,115,25,"xml"],[143,30,115,28],[143,31,115,29],[143,34,115,32],[144,8,116,6],[144,9,116,7],[144,10,116,8],[145,6,117,4],[145,7,117,5],[145,8,117,6],[145,15,117,13,"e"],[145,16,117,14],[145,18,117,16],[146,8,118,6],[146,14,118,12,"error"],[146,19,118,17],[146,22,118,20,"e"],[146,23,118,21],[147,8,119,6,"onError"],[147,15,119,13],[147,16,119,14],[148,10,120,8],[148,13,120,11,"error"],[148,18,120,16],[149,10,121,8,"message"],[149,17,121,15],[149,19,121,17],[149,58,121,56,"error"],[149,63,121,61],[149,64,121,62,"message"],[149,71,121,69],[150,8,122,6],[150,9,122,7],[150,10,122,8],[151,6,123,4],[152,4,124,2],[153,4,125,2,"render"],[153,10,125,8,"render"],[153,11,125,8],[153,13,125,11],[154,6,126,4],[154,12,126,10],[155,8,127,6,"props"],[155,13,127,11],[156,8,128,6,"state"],[156,13,128,11],[156,15,128,13],[157,10,129,8,"ast"],[158,8,130,6],[159,6,131,4],[159,7,131,5],[159,10,131,8],[159,14,131,12],[160,6,132,4],[160,13,132,11],[160,26,132,24,"React"],[160,31,132,29],[160,32,132,30,"createElement"],[160,45,132,43],[160,46,132,44,"SvgAst"],[160,52,132,50],[160,54,132,52],[161,8,133,6,"ast"],[161,11,133,9],[161,13,133,11,"ast"],[161,16,133,14],[162,8,134,6,"override"],[162,16,134,14],[162,18,134,16,"props"],[162,23,134,21],[162,24,134,22,"override"],[162,32,134,30],[162,36,134,34,"props"],[163,6,135,4],[163,7,135,5],[163,8,135,6],[164,4,136,2],[165,2,137,0],[166,2,138,0,"exports"],[166,9,138,7],[166,10,138,8,"SvgFromXml"],[166,20,138,18],[166,23,138,21,"SvgFromXml"],[166,33,138,31],[167,2,139,0],[167,8,139,6,"SvgFromUri"],[167,18,139,16],[167,27,139,25,"_react"],[167,33,139,31],[167,34,139,32,"Component"],[167,43,139,41],[167,44,139,42],[168,4,140,2,"state"],[168,9,140,7],[168,12,140,10],[169,6,141,4,"xml"],[169,9,141,7],[169,11,141,9],[170,4,142,2],[170,5,142,3],[171,4,143,2,"componentDidMount"],[171,21,143,19,"componentDidMount"],[171,22,143,19],[171,24,143,22],[172,6,144,4],[172,10,144,8],[172,11,144,9,"fetch"],[172,16,144,14],[172,17,144,15],[172,21,144,19],[172,22,144,20,"props"],[172,27,144,25],[172,28,144,26,"uri"],[172,31,144,29],[172,32,144,30],[173,4,145,2],[174,4,146,2,"componentDidUpdate"],[174,22,146,20,"componentDidUpdate"],[174,23,146,21,"prevProps"],[174,32,146,30],[174,34,146,32],[175,6,147,4],[175,12,147,10],[176,8,148,6,"uri"],[177,6,149,4],[177,7,149,5],[177,10,149,8],[177,14,149,12],[177,15,149,13,"props"],[177,20,149,18],[178,6,150,4],[178,10,150,8,"uri"],[178,13,150,11],[178,18,150,16,"prevProps"],[178,27,150,25],[178,28,150,26,"uri"],[178,31,150,29],[178,33,150,31],[179,8,151,6],[179,12,151,10],[179,13,151,11,"fetch"],[179,18,151,16],[179,19,151,17,"uri"],[179,22,151,20],[179,23,151,21],[180,6,152,4],[181,4,153,2],[182,4,154,2],[182,10,154,8,"fetch"],[182,15,154,13,"fetch"],[182,16,154,14,"uri"],[182,19,154,17],[182,21,154,19],[183,6,155,4],[183,10,155,8],[184,8,156,6],[184,12,156,10],[184,13,156,11,"setState"],[184,21,156,19],[184,22,156,20],[185,10,157,8,"xml"],[185,13,157,11],[185,15,157,13,"uri"],[185,18,157,16],[185,21,157,19],[185,27,157,25],[185,28,157,26],[185,29,157,27],[185,31,157,29,"_fetchData"],[185,41,157,39],[185,42,157,40,"fetchText"],[185,51,157,49],[185,53,157,51,"uri"],[185,56,157,54],[185,57,157,55],[185,60,157,58],[186,8,158,6],[186,9,158,7],[186,10,158,8],[187,6,159,4],[187,7,159,5],[187,8,159,6],[187,15,159,13,"e"],[187,16,159,14],[187,18,159,16],[188,8,160,6,"console"],[188,15,160,13],[188,16,160,14,"error"],[188,21,160,19],[188,22,160,20,"e"],[188,23,160,21],[188,24,160,22],[189,6,161,4],[190,4,162,2],[191,4,163,2,"render"],[191,10,163,8,"render"],[191,11,163,8],[191,13,163,11],[192,6,164,4],[192,12,164,10],[193,8,165,6,"props"],[193,13,165,11],[194,8,166,6,"state"],[194,13,166,11],[194,15,166,13],[195,10,167,8,"xml"],[196,8,168,6],[197,6,169,4],[197,7,169,5],[197,10,169,8],[197,14,169,12],[198,6,170,4],[198,13,170,11],[198,26,170,24,"React"],[198,31,170,29],[198,32,170,30,"createElement"],[198,45,170,43],[198,46,170,44,"SvgFromXml"],[198,56,170,54],[198,58,170,56],[199,8,171,6,"xml"],[199,11,171,9],[199,13,171,11,"xml"],[199,16,171,14],[200,8,172,6,"override"],[200,16,172,14],[200,18,172,16,"props"],[200,23,172,21],[201,8,173,6,"onError"],[201,15,173,13],[201,17,173,15,"props"],[201,22,173,20],[201,23,173,21,"onError"],[202,6,174,4],[202,7,174,5],[202,8,174,6],[203,4,175,2],[204,2,176,0],[205,2,177,0,"exports"],[205,9,177,7],[205,10,177,8,"SvgFromUri"],[205,20,177,18],[205,23,177,21,"SvgFromUri"],[205,33,177,31],[206,2,178,0],[206,8,178,6,"upperCase"],[206,17,178,15],[206,20,178,18,"upperCase"],[206,21,178,19,"_match"],[206,27,178,25],[206,29,178,27,"letter"],[206,35,178,33],[206,40,178,38,"letter"],[206,46,178,44],[206,47,178,45,"toUpperCase"],[206,58,178,56],[206,59,178,57],[206,60,178,58],[207,2,179,0],[207,8,179,6,"camelCase"],[207,17,179,15],[207,20,179,18,"phrase"],[207,26,179,24],[207,30,179,28,"phrase"],[207,36,179,34],[207,37,179,35,"replace"],[207,44,179,42],[207,45,179,43],[207,59,179,57],[207,61,179,59,"upperCase"],[207,70,179,68],[207,71,179,69],[208,2,180,0,"exports"],[208,9,180,7],[208,10,180,8,"camelCase"],[208,19,180,17],[208,22,180,20,"camelCase"],[208,31,180,29],[209,2,181,0],[209,11,181,9,"getStyle"],[209,19,181,17,"getStyle"],[209,20,181,18,"string"],[209,26,181,24],[209,28,181,26],[210,4,182,2],[210,10,182,8,"style"],[210,15,182,13],[210,18,182,16],[210,19,182,17],[210,20,182,18],[211,4,183,2],[211,10,183,8,"declarations"],[211,22,183,20],[211,25,183,23,"string"],[211,31,183,29],[211,32,183,30,"split"],[211,37,183,35],[211,38,183,36],[211,41,183,39],[211,42,183,40],[211,43,183,41,"filter"],[211,49,183,47],[211,50,183,48,"v"],[211,51,183,49],[211,55,183,53,"v"],[211,56,183,54],[211,57,183,55,"trim"],[211,61,183,59],[211,62,183,60],[211,63,183,61],[211,64,183,62],[212,4,184,2],[212,10,184,8],[213,6,185,4,"length"],[214,4,186,2],[214,5,186,3],[214,8,186,6,"declarations"],[214,20,186,18],[215,4,187,2],[215,9,187,7],[215,13,187,11,"i"],[215,14,187,12],[215,17,187,15],[215,18,187,16],[215,20,187,18,"i"],[215,21,187,19],[215,24,187,22,"length"],[215,30,187,28],[215,32,187,30,"i"],[215,33,187,31],[215,35,187,33],[215,37,187,35],[216,6,188,4],[216,12,188,10,"declaration"],[216,23,188,21],[216,26,188,24,"declarations"],[216,38,188,36],[216,39,188,37,"i"],[216,40,188,38],[216,41,188,39],[217,6,189,4],[217,10,189,8,"declaration"],[217,21,189,19],[217,22,189,20,"length"],[217,28,189,26],[217,33,189,31],[217,34,189,32],[217,36,189,34],[218,8,190,6],[218,14,190,12,"split"],[218,19,190,17],[218,22,190,20,"declaration"],[218,33,190,31],[218,34,190,32,"split"],[218,39,190,37],[218,40,190,38],[218,43,190,41],[218,44,190,42],[219,8,191,6],[219,14,191,12,"property"],[219,22,191,20],[219,25,191,23,"split"],[219,30,191,28],[219,31,191,29],[219,32,191,30],[219,33,191,31],[220,8,192,6],[220,14,192,12,"value"],[220,19,192,17],[220,22,192,20,"split"],[220,27,192,25],[220,28,192,26],[220,29,192,27],[220,30,192,28],[221,8,193,6,"style"],[221,13,193,11],[221,14,193,12,"camelCase"],[221,23,193,21],[221,24,193,22,"property"],[221,32,193,30],[221,33,193,31,"trim"],[221,37,193,35],[221,38,193,36],[221,39,193,37],[221,40,193,38],[221,41,193,39],[221,44,193,42,"value"],[221,49,193,47],[221,50,193,48,"trim"],[221,54,193,52],[221,55,193,53],[221,56,193,54],[222,6,194,4],[223,4,195,2],[224,4,196,2],[224,11,196,9,"style"],[224,16,196,14],[225,2,197,0],[226,2,198,0],[226,11,198,9,"astToReact"],[226,21,198,19,"astToReact"],[226,22,198,20,"value"],[226,27,198,25],[226,29,198,27,"index"],[226,34,198,32],[226,36,198,34],[227,4,199,2],[227,8,199,6],[227,15,199,13,"value"],[227,20,199,18],[227,25,199,23],[227,33,199,31],[227,35,199,33],[228,6,200,4],[228,12,200,10],[229,8,201,6,"Tag"],[229,11,201,9],[230,8,202,6,"props"],[230,13,202,11],[231,8,203,6,"children"],[232,6,204,4],[232,7,204,5],[232,10,204,8,"value"],[232,15,204,13],[233,6,205,4],[233,10,205,8,"props"],[233,15,205,13],[233,20,205,18],[233,24,205,22],[233,28,205,26,"props"],[233,33,205,31],[233,38,205,36],[233,43,205,41],[233,44,205,42],[233,48,205,46,"props"],[233,53,205,51],[233,54,205,52,"class"],[233,59,205,57],[233,61,205,59],[234,8,206,6,"props"],[234,13,206,11],[234,14,206,12,"className"],[234,23,206,21],[234,26,206,24,"props"],[234,31,206,29],[234,32,206,30,"class"],[234,37,206,35],[235,8,207,6],[235,15,207,13,"props"],[235,20,207,18],[235,21,207,19,"class"],[235,26,207,24],[236,6,208,4],[237,6,209,4],[237,13,209,11],[237,26,209,24,"React"],[237,31,209,29],[237,32,209,30,"createElement"],[237,45,209,43],[237,46,209,44,"Tag"],[237,49,209,47],[237,51,209,49,"_extends"],[237,59,209,57],[237,60,209,58],[238,8,210,6,"key"],[238,11,210,9],[238,13,210,11,"index"],[239,6,211,4],[239,7,211,5],[239,9,211,7,"props"],[239,14,211,12],[239,15,211,13],[239,17,211,15,"children"],[239,25,211,23],[239,26,211,24,"map"],[239,29,211,27],[239,30,211,28,"astToReact"],[239,40,211,38],[239,41,211,39],[239,42,211,40],[240,4,212,2],[241,4,213,2],[241,11,213,9,"value"],[241,16,213,14],[242,2,214,0],[244,2,216,0],[246,2,218,0],[246,11,218,9,"repeat"],[246,17,218,15,"repeat"],[246,18,218,16,"str"],[246,21,218,19],[246,23,218,21,"i"],[246,24,218,22],[246,26,218,24],[247,4,219,2],[247,8,219,6,"result"],[247,14,219,12],[247,17,219,15],[247,19,219,17],[248,4,220,2],[248,11,220,9,"i"],[248,12,220,10],[248,14,220,12],[248,16,220,14],[249,6,221,4,"result"],[249,12,221,10],[249,16,221,14,"str"],[249,19,221,17],[250,4,222,2],[251,4,223,2],[251,11,223,9,"result"],[251,17,223,15],[252,2,224,0],[253,2,225,0],[253,8,225,6,"toSpaces"],[253,16,225,14],[253,19,225,17,"tabs"],[253,23,225,21],[253,27,225,25,"repeat"],[253,33,225,31],[253,34,225,32],[253,38,225,36],[253,40,225,38,"tabs"],[253,44,225,42],[253,45,225,43,"length"],[253,51,225,49],[253,52,225,50],[254,2,226,0],[254,11,226,9,"locate"],[254,17,226,15,"locate"],[254,18,226,16,"source"],[254,24,226,22],[254,26,226,24,"i"],[254,27,226,25],[254,29,226,27],[255,4,227,2],[255,10,227,8,"lines"],[255,15,227,13],[255,18,227,16,"source"],[255,24,227,22],[255,25,227,23,"split"],[255,30,227,28],[255,31,227,29],[255,35,227,33],[255,36,227,34],[256,4,228,2],[256,10,228,8,"nLines"],[256,16,228,14],[256,19,228,17,"lines"],[256,24,228,22],[256,25,228,23,"length"],[256,31,228,29],[257,4,229,2],[257,8,229,6,"column"],[257,14,229,12],[257,17,229,15,"i"],[257,18,229,16],[258,4,230,2],[258,8,230,6,"line"],[258,12,230,10],[258,15,230,13],[258,16,230,14],[259,4,231,2],[259,11,231,9,"line"],[259,15,231,13],[259,18,231,16,"nLines"],[259,24,231,22],[259,26,231,24,"line"],[259,30,231,28],[259,32,231,30],[259,34,231,32],[260,6,232,4],[260,12,232,10],[261,8,233,6,"length"],[262,6,234,4],[262,7,234,5],[262,10,234,8,"lines"],[262,15,234,13],[262,16,234,14,"line"],[262,20,234,18],[262,21,234,19],[263,6,235,4],[263,10,235,8,"column"],[263,16,235,14],[263,20,235,18,"length"],[263,26,235,24],[263,28,235,26],[264,8,236,6,"column"],[264,14,236,12],[264,18,236,16,"length"],[264,24,236,22],[265,6,237,4],[265,7,237,5],[265,13,237,11],[266,8,238,6],[267,6,239,4],[268,4,240,2],[269,4,241,2],[269,10,241,8,"before"],[269,16,241,14],[269,19,241,17,"source"],[269,25,241,23],[269,26,241,24,"slice"],[269,31,241,29],[269,32,241,30],[269,33,241,31],[269,35,241,33,"i"],[269,36,241,34],[269,37,241,35],[269,38,241,36,"replace"],[269,45,241,43],[269,46,241,44],[269,52,241,50],[269,54,241,52,"toSpaces"],[269,62,241,60],[269,63,241,61],[270,4,242,2],[270,10,242,8,"beforeExec"],[270,20,242,18],[270,23,242,21],[270,34,242,32],[270,35,242,33,"exec"],[270,39,242,37],[270,40,242,38,"before"],[270,46,242,44],[270,47,242,45],[271,4,243,2],[271,10,243,8,"beforeLine"],[271,20,243,18],[271,23,243,21,"beforeExec"],[271,33,243,31],[271,37,243,35,"beforeExec"],[271,47,243,45],[271,48,243,46],[271,49,243,47],[271,50,243,48],[271,54,243,52],[271,56,243,54],[272,4,244,2],[272,10,244,8,"after"],[272,15,244,13],[272,18,244,16,"source"],[272,24,244,22],[272,25,244,23,"slice"],[272,30,244,28],[272,31,244,29,"i"],[272,32,244,30],[272,33,244,31],[273,4,245,2],[273,10,245,8,"afterExec"],[273,19,245,17],[273,22,245,20],[273,32,245,30],[273,33,245,31,"exec"],[273,37,245,35],[273,38,245,36,"after"],[273,43,245,41],[273,44,245,42],[274,4,246,2],[274,10,246,8,"afterLine"],[274,19,246,17],[274,22,246,20,"afterExec"],[274,31,246,29],[274,35,246,33,"afterExec"],[274,44,246,42],[274,45,246,43],[274,46,246,44],[274,47,246,45],[275,4,247,2],[275,10,247,8,"pad"],[275,13,247,11],[275,16,247,14,"repeat"],[275,22,247,20],[275,23,247,21],[275,26,247,24],[275,28,247,26,"beforeLine"],[275,38,247,36],[275,39,247,37,"length"],[275,45,247,43],[275,46,247,44],[276,4,248,2],[276,10,248,8,"snippet"],[276,17,248,15],[276,20,248,18],[276,23,248,21,"beforeLine"],[276,33,248,31],[276,36,248,34,"afterLine"],[276,45,248,43],[276,50,248,48,"pad"],[276,53,248,51],[276,56,248,54],[277,4,249,2],[277,11,249,9],[278,6,250,4,"line"],[278,10,250,8],[279,6,251,4,"column"],[279,12,251,10],[280,6,252,4,"snippet"],[281,4,253,2],[281,5,253,3],[282,2,254,0],[283,2,255,0],[283,8,255,6,"validNameCharacters"],[283,27,255,25],[283,30,255,28],[283,46,255,44],[284,2,256,0],[284,8,256,6,"commentStart"],[284,20,256,18],[284,23,256,21],[284,29,256,27],[285,2,257,0],[285,8,257,6,"whitespace"],[285,18,257,16],[285,21,257,19],[285,33,257,31],[286,2,258,0],[286,8,258,6,"quotemarks"],[286,18,258,16],[286,21,258,19],[286,27,258,25],[287,2,259,0],[287,11,259,9,"parse"],[287,16,259,14,"parse"],[287,17,259,15,"source"],[287,23,259,21],[287,25,259,23,"middleware"],[287,35,259,33],[287,37,259,35],[288,4,260,2],[288,10,260,8,"length"],[288,16,260,14],[288,19,260,17,"source"],[288,25,260,23],[288,26,260,24,"length"],[288,32,260,30],[289,4,261,2],[289,8,261,6,"currentElement"],[289,22,261,20],[289,25,261,23],[289,29,261,27],[290,4,262,2],[290,8,262,6,"state"],[290,13,262,11],[290,16,262,14,"metadata"],[290,24,262,22],[291,4,263,2],[291,8,263,6,"children"],[291,16,263,14],[291,19,263,17],[291,23,263,21],[292,4,264,2],[292,8,264,6,"root"],[292,12,264,10],[293,4,265,2],[293,10,265,8,"stack"],[293,15,265,13],[293,18,265,16],[293,20,265,18],[294,4,266,2],[294,13,266,11,"error"],[294,18,266,16,"error"],[294,19,266,17,"message"],[294,26,266,24],[294,28,266,26],[295,6,267,4],[295,12,267,10],[296,8,268,6,"line"],[296,12,268,10],[297,8,269,6,"column"],[297,14,269,12],[298,8,270,6,"snippet"],[299,6,271,4],[299,7,271,5],[299,10,271,8,"locate"],[299,16,271,14],[299,17,271,15,"source"],[299,23,271,21],[299,25,271,23,"i"],[299,26,271,24],[299,27,271,25],[300,6,272,4],[300,12,272,10],[300,16,272,14,"Error"],[300,21,272,19],[300,22,272,20],[300,25,272,23,"message"],[300,32,272,30],[300,37,272,35,"line"],[300,41,272,39],[300,45,272,43,"column"],[300,51,272,49],[300,125,272,123,"snippet"],[300,132,272,130],[300,134,272,132],[300,135,272,133],[301,4,273,2],[302,4,274,2],[302,13,274,11,"metadata"],[302,21,274,19,"metadata"],[302,22,274,19],[302,24,274,22],[303,6,275,4],[303,13,275,11,"i"],[303,14,275,12],[303,17,275,15],[303,18,275,16],[303,21,275,19,"length"],[303,27,275,25],[303,32,275,30,"source"],[303,38,275,36],[303,39,275,37,"i"],[303,40,275,38],[303,41,275,39],[303,46,275,44],[303,49,275,47],[303,53,275,51],[303,55,275,53,"validNameCharacters"],[303,74,275,72],[303,75,275,73,"test"],[303,79,275,77],[303,80,275,78,"source"],[303,86,275,84],[303,87,275,85,"i"],[303,88,275,86],[303,91,275,89],[303,92,275,90],[303,93,275,91],[303,94,275,92],[303,98,275,96,"commentStart"],[303,110,275,108],[303,111,275,109,"test"],[303,115,275,113],[303,116,275,114,"source"],[303,122,275,120],[303,123,275,121,"slice"],[303,128,275,126],[303,129,275,127,"i"],[303,130,275,128],[303,132,275,130,"i"],[303,133,275,131],[303,136,275,134],[303,137,275,135],[303,138,275,136],[303,139,275,137],[303,140,275,138],[303,141,275,139],[303,143,275,141],[304,8,276,6,"i"],[304,9,276,7],[304,11,276,9],[305,6,277,4],[306,6,278,4],[306,13,278,11,"neutral"],[306,20,278,18],[306,21,278,19],[306,22,278,20],[307,4,279,2],[308,4,280,2],[308,13,280,11,"neutral"],[308,20,280,18,"neutral"],[308,21,280,18],[308,23,280,21],[309,6,281,4],[309,10,281,8,"text"],[309,14,281,12],[309,17,281,15],[309,19,281,17],[310,6,282,4],[310,10,282,8,"char"],[310,14,282,12],[311,6,283,4],[311,13,283,11,"i"],[311,14,283,12],[311,17,283,15,"length"],[311,23,283,21],[311,27,283,25],[311,28,283,26,"char"],[311,32,283,30],[311,35,283,33,"source"],[311,41,283,39],[311,42,283,40,"i"],[311,43,283,41],[311,44,283,42],[311,50,283,48],[311,53,283,51],[311,55,283,53],[312,8,284,6,"text"],[312,12,284,10],[312,16,284,14,"char"],[312,20,284,18],[313,8,285,6,"i"],[313,9,285,7],[313,13,285,11],[313,14,285,12],[314,6,286,4],[315,6,287,4],[315,10,287,8],[315,14,287,12],[315,15,287,13,"test"],[315,19,287,17],[315,20,287,18,"text"],[315,24,287,22],[315,25,287,23],[315,27,287,25],[316,8,288,6,"children"],[316,16,288,14],[316,17,288,15,"push"],[316,21,288,19],[316,22,288,20,"text"],[316,26,288,24],[316,27,288,25],[317,6,289,4],[318,6,290,4],[318,10,290,8,"source"],[318,16,290,14],[318,17,290,15,"i"],[318,18,290,16],[318,19,290,17],[318,24,290,22],[318,27,290,25],[318,29,290,27],[319,8,291,6],[319,15,291,13,"openingTag"],[319,25,291,23],[320,6,292,4],[321,6,293,4],[321,13,293,11,"neutral"],[321,20,293,18],[322,4,294,2],[323,4,295,2],[323,13,295,11,"openingTag"],[323,23,295,21,"openingTag"],[323,24,295,21],[323,26,295,24],[324,6,296,4],[324,12,296,10,"char"],[324,16,296,14],[324,19,296,17,"source"],[324,25,296,23],[324,26,296,24,"i"],[324,27,296,25],[324,28,296,26],[325,6,297,4],[325,10,297,8,"char"],[325,14,297,12],[325,19,297,17],[325,22,297,20],[325,24,297,22],[326,8,298,6],[326,15,298,13,"neutral"],[326,22,298,20],[327,6,299,4],[327,7,299,5],[327,8,299,6],[329,6,301,4],[329,10,301,8,"char"],[329,14,301,12],[329,19,301,17],[329,22,301,20],[329,24,301,22],[330,8,302,6],[330,14,302,12,"start"],[330,19,302,17],[330,22,302,20,"i"],[330,23,302,21],[330,26,302,24],[330,27,302,25],[331,8,303,6],[331,12,303,10,"source"],[331,18,303,16],[331,19,303,17,"slice"],[331,24,303,22],[331,25,303,23,"start"],[331,30,303,28],[331,32,303,30,"i"],[331,33,303,31],[331,36,303,34],[331,37,303,35],[331,38,303,36],[331,43,303,41],[331,47,303,45],[331,49,303,47],[332,10,304,8],[332,17,304,15,"comment"],[332,24,304,22],[333,8,305,6],[334,8,306,6],[334,14,306,12,"end"],[334,17,306,15],[334,20,306,18,"i"],[334,21,306,19],[334,24,306,22],[334,25,306,23],[335,8,307,6],[335,12,307,10,"source"],[335,18,307,16],[335,19,307,17,"slice"],[335,24,307,22],[335,25,307,23,"start"],[335,30,307,28],[335,32,307,30,"end"],[335,35,307,33],[335,36,307,34],[335,41,307,39],[335,50,307,48],[335,52,307,50],[336,10,308,8],[336,17,308,15,"cdata"],[336,22,308,20],[337,8,309,6],[338,8,310,6],[338,12,310,10],[338,22,310,20],[338,23,310,21,"test"],[338,27,310,25],[338,28,310,26,"source"],[338,34,310,32],[338,35,310,33,"slice"],[338,40,310,38],[338,41,310,39,"start"],[338,46,310,44],[338,48,310,46,"end"],[338,51,310,49],[338,52,310,50],[338,53,310,51],[338,55,310,53],[339,10,311,8],[339,17,311,15,"neutral"],[339,24,311,22],[340,8,312,6],[341,6,313,4],[342,6,314,4],[342,10,314,8,"char"],[342,14,314,12],[342,19,314,17],[342,22,314,20],[342,24,314,22],[343,8,315,6],[343,15,315,13,"closingTag"],[343,25,315,23],[344,6,316,4],[345,6,317,4],[345,12,317,10,"tag"],[345,15,317,13],[345,18,317,16,"getName"],[345,25,317,23],[345,26,317,24],[345,27,317,25],[346,6,318,4],[346,12,318,10,"props"],[346,17,318,15],[346,20,318,18],[346,21,318,19],[346,22,318,20],[347,6,319,4],[347,12,319,10,"element"],[347,19,319,17],[347,22,319,20],[348,8,320,6,"tag"],[348,11,320,9],[349,8,321,6,"props"],[349,13,321,11],[350,8,322,6,"children"],[350,16,322,14],[350,18,322,16],[350,20,322,18],[351,8,323,6,"parent"],[351,14,323,12],[351,16,323,14,"currentElement"],[351,30,323,28],[352,8,324,6,"Tag"],[352,11,324,9],[352,13,324,11,"_xmlTags"],[352,21,324,19],[352,22,324,20,"tags"],[352,26,324,24],[352,27,324,25,"tag"],[352,30,324,28],[352,31,324,29],[352,35,324,33,"missingTag"],[353,6,325,4],[353,7,325,5],[354,6,326,4],[354,10,326,8,"currentElement"],[354,24,326,22],[354,26,326,24],[355,8,327,6,"children"],[355,16,327,14],[355,17,327,15,"push"],[355,21,327,19],[355,22,327,20,"element"],[355,29,327,27],[355,30,327,28],[356,6,328,4],[356,7,328,5],[356,13,328,11],[357,8,329,6,"root"],[357,12,329,10],[357,15,329,13,"element"],[357,22,329,20],[358,6,330,4],[359,6,331,4,"getAttributes"],[359,19,331,17],[359,20,331,18,"props"],[359,25,331,23],[359,26,331,24],[360,6,332,4],[360,12,332,10],[361,8,333,6,"style"],[362,6,334,4],[362,7,334,5],[362,10,334,8,"props"],[362,15,334,13],[363,6,335,4],[363,10,335,8],[363,17,335,15,"style"],[363,22,335,20],[363,27,335,25],[363,35,335,33],[363,37,335,35],[364,8,336,6,"element"],[364,15,336,13],[364,16,336,14,"styles"],[364,22,336,20],[364,25,336,23,"style"],[364,30,336,28],[365,8,337,6,"props"],[365,13,337,11],[365,14,337,12,"style"],[365,19,337,17],[365,22,337,20,"getStyle"],[365,30,337,28],[365,31,337,29,"style"],[365,36,337,34],[365,37,337,35],[366,6,338,4],[367,6,339,4],[367,10,339,8,"selfClosing"],[367,21,339,19],[367,24,339,22],[367,29,339,27],[368,6,340,4],[368,10,340,8,"source"],[368,16,340,14],[368,17,340,15,"i"],[368,18,340,16],[368,19,340,17],[368,24,340,22],[368,27,340,25],[368,29,340,27],[369,8,341,6,"i"],[369,9,341,7],[369,13,341,11],[369,14,341,12],[370,8,342,6,"selfClosing"],[370,19,342,17],[370,22,342,20],[370,26,342,24],[371,6,343,4],[372,6,344,4],[372,10,344,8,"source"],[372,16,344,14],[372,17,344,15,"i"],[372,18,344,16],[372,19,344,17],[372,24,344,22],[372,27,344,25],[372,29,344,27],[373,8,345,6,"error"],[373,13,345,11],[373,14,345,12],[373,26,345,24],[373,27,345,25],[374,6,346,4],[375,6,347,4],[375,10,347,8],[375,11,347,9,"selfClosing"],[375,22,347,20],[375,24,347,22],[376,8,348,6,"currentElement"],[376,22,348,20],[376,25,348,23,"element"],[376,32,348,30],[377,8,349,6],[377,9,349,7],[378,10,350,8,"children"],[379,8,351,6],[379,9,351,7],[379,12,351,10,"element"],[379,19,351,17],[380,8,352,6,"stack"],[380,13,352,11],[380,14,352,12,"push"],[380,18,352,16],[380,19,352,17,"element"],[380,26,352,24],[380,27,352,25],[381,6,353,4],[382,6,354,4],[382,13,354,11,"neutral"],[382,20,354,18],[383,4,355,2],[384,4,356,2],[384,13,356,11,"comment"],[384,20,356,18,"comment"],[384,21,356,18],[384,23,356,21],[385,6,357,4],[385,12,357,10,"index"],[385,17,357,15],[385,20,357,18,"source"],[385,26,357,24],[385,27,357,25,"indexOf"],[385,34,357,32],[385,35,357,33],[385,40,357,38],[385,42,357,40,"i"],[385,43,357,41],[385,44,357,42],[386,6,358,4],[386,10,358,8],[386,11,358,9],[386,12,358,10,"index"],[386,17,358,15],[386,19,358,17],[387,8,359,6,"error"],[387,13,359,11],[387,14,359,12],[387,28,359,26],[387,29,359,27],[388,6,360,4],[389,6,361,4,"i"],[389,7,361,5],[389,10,361,8,"index"],[389,15,361,13],[389,18,361,16],[389,19,361,17],[390,6,362,4],[390,13,362,11,"neutral"],[390,20,362,18],[391,4,363,2],[392,4,364,2],[392,13,364,11,"cdata"],[392,18,364,16,"cdata"],[392,19,364,16],[392,21,364,19],[393,6,365,4],[393,12,365,10,"index"],[393,17,365,15],[393,20,365,18,"source"],[393,26,365,24],[393,27,365,25,"indexOf"],[393,34,365,32],[393,35,365,33],[393,40,365,38],[393,42,365,40,"i"],[393,43,365,41],[393,44,365,42],[394,6,366,4],[394,10,366,8],[394,11,366,9],[394,12,366,10,"index"],[394,17,366,15],[394,19,366,17],[395,8,367,6,"error"],[395,13,367,11],[395,14,367,12],[395,28,367,26],[395,29,367,27],[396,6,368,4],[397,6,369,4,"children"],[397,14,369,12],[397,15,369,13,"push"],[397,19,369,17],[397,20,369,18,"source"],[397,26,369,24],[397,27,369,25,"slice"],[397,32,369,30],[397,33,369,31,"i"],[397,34,369,32],[397,37,369,35],[397,38,369,36],[397,40,369,38,"index"],[397,45,369,43],[397,46,369,44],[397,47,369,45],[398,6,370,4,"i"],[398,7,370,5],[398,10,370,8,"index"],[398,15,370,13],[398,18,370,16],[398,19,370,17],[399,6,371,4],[399,13,371,11,"neutral"],[399,20,371,18],[400,4,372,2],[401,4,373,2],[401,13,373,11,"closingTag"],[401,23,373,21,"closingTag"],[401,24,373,21],[401,26,373,24],[402,6,374,4],[402,12,374,10,"tag"],[402,15,374,13],[402,18,374,16,"getName"],[402,25,374,23],[402,26,374,24],[402,27,374,25],[403,6,375,4],[403,10,375,8],[403,11,375,9,"tag"],[403,14,375,12],[403,16,375,14],[404,8,376,6,"error"],[404,13,376,11],[404,14,376,12],[404,33,376,31],[404,34,376,32],[405,6,377,4],[406,6,378,4],[406,10,378,8,"currentElement"],[406,24,378,22],[406,28,378,26,"tag"],[406,31,378,29],[406,36,378,34,"currentElement"],[406,50,378,48],[406,51,378,49,"tag"],[406,54,378,52],[406,56,378,54],[407,8,379,6,"error"],[407,13,379,11],[407,14,379,12],[407,40,379,38,"tag"],[407,43,379,41],[407,70,379,68,"currentElement"],[407,84,379,82],[407,85,379,83,"tag"],[407,88,379,86],[407,91,379,89],[407,92,379,90],[408,6,380,4],[409,6,381,4,"allowSpaces"],[409,17,381,15],[409,18,381,16],[409,19,381,17],[410,6,382,4],[410,10,382,8,"source"],[410,16,382,14],[410,17,382,15,"i"],[410,18,382,16],[410,19,382,17],[410,24,382,22],[410,27,382,25],[410,29,382,27],[411,8,383,6,"error"],[411,13,383,11],[411,14,383,12],[411,26,383,24],[411,27,383,25],[412,6,384,4],[413,6,385,4,"stack"],[413,11,385,9],[413,12,385,10,"pop"],[413,15,385,13],[413,16,385,14],[413,17,385,15],[414,6,386,4,"currentElement"],[414,20,386,18],[414,23,386,21,"stack"],[414,28,386,26],[414,29,386,27,"stack"],[414,34,386,32],[414,35,386,33,"length"],[414,41,386,39],[414,44,386,42],[414,45,386,43],[414,46,386,44],[415,6,387,4],[415,10,387,8,"currentElement"],[415,24,387,22],[415,26,387,24],[416,8,388,6],[416,9,388,7],[417,10,389,8,"children"],[418,8,390,6],[418,9,390,7],[418,12,390,10,"currentElement"],[418,26,390,24],[419,6,391,4],[420,6,392,4],[420,13,392,11,"neutral"],[420,20,392,18],[421,4,393,2],[422,4,394,2],[422,13,394,11,"getName"],[422,20,394,18,"getName"],[422,21,394,18],[422,23,394,21],[423,6,395,4],[423,10,395,8,"name"],[423,14,395,12],[423,17,395,15],[423,19,395,17],[424,6,396,4],[424,10,396,8,"char"],[424,14,396,12],[425,6,397,4],[425,13,397,11,"i"],[425,14,397,12],[425,17,397,15,"length"],[425,23,397,21],[425,27,397,25,"validNameCharacters"],[425,46,397,44],[425,47,397,45,"test"],[425,51,397,49],[425,52,397,50,"char"],[425,56,397,54],[425,59,397,57,"source"],[425,65,397,63],[425,66,397,64,"i"],[425,67,397,65],[425,68,397,66],[425,69,397,67],[425,71,397,69],[426,8,398,6,"name"],[426,12,398,10],[426,16,398,14,"char"],[426,20,398,18],[427,8,399,6,"i"],[427,9,399,7],[427,13,399,11],[427,14,399,12],[428,6,400,4],[429,6,401,4],[429,13,401,11,"name"],[429,17,401,15],[430,4,402,2],[431,4,403,2],[431,13,403,11,"getAttributes"],[431,26,403,24,"getAttributes"],[431,27,403,25,"props"],[431,32,403,30],[431,34,403,32],[432,6,404,4],[432,13,404,11,"i"],[432,14,404,12],[432,17,404,15,"length"],[432,23,404,21],[432,25,404,23],[433,8,405,6],[433,12,405,10],[433,13,405,11,"whitespace"],[433,23,405,21],[433,24,405,22,"test"],[433,28,405,26],[433,29,405,27,"source"],[433,35,405,33],[433,36,405,34,"i"],[433,37,405,35],[433,38,405,36],[433,39,405,37],[433,41,405,39],[434,10,406,8],[435,8,407,6],[436,8,408,6,"allowSpaces"],[436,19,408,17],[436,20,408,18],[436,21,408,19],[437,8,409,6],[437,14,409,12,"name"],[437,18,409,16],[437,21,409,19,"getName"],[437,28,409,26],[437,29,409,27],[437,30,409,28],[438,8,410,6],[438,12,410,10],[438,13,410,11,"name"],[438,17,410,15],[438,19,410,17],[439,10,411,8],[440,8,412,6],[441,8,413,6],[441,12,413,10,"value"],[441,17,413,15],[441,20,413,18],[441,24,413,22],[442,8,414,6,"allowSpaces"],[442,19,414,17],[442,20,414,18],[442,21,414,19],[443,8,415,6],[443,12,415,10,"source"],[443,18,415,16],[443,19,415,17,"i"],[443,20,415,18],[443,21,415,19],[443,26,415,24],[443,29,415,27],[443,31,415,29],[444,10,416,8,"i"],[444,11,416,9],[444,15,416,13],[444,16,416,14],[445,10,417,8,"allowSpaces"],[445,21,417,19],[445,22,417,20],[445,23,417,21],[446,10,418,8,"value"],[446,15,418,13],[446,18,418,16,"getAttributeValue"],[446,35,418,33],[446,36,418,34],[446,37,418,35],[447,10,419,8],[447,14,419,12,"name"],[447,18,419,16],[447,23,419,21],[447,27,419,25],[447,31,419,29],[447,32,419,30,"isNaN"],[447,37,419,35],[447,38,419,36],[447,39,419,37,"value"],[447,44,419,42],[447,45,419,43],[447,49,419,47,"value"],[447,54,419,52],[447,55,419,53,"trim"],[447,59,419,57],[447,60,419,58],[447,61,419,59],[447,66,419,64],[447,68,419,66],[447,70,419,68],[448,12,420,10,"value"],[448,17,420,15],[448,20,420,18],[448,21,420,19,"value"],[448,26,420,24],[449,10,421,8],[450,8,422,6],[451,8,423,6,"props"],[451,13,423,11],[451,14,423,12,"camelCase"],[451,23,423,21],[451,24,423,22,"name"],[451,28,423,26],[451,29,423,27],[451,30,423,28],[451,33,423,31,"value"],[451,38,423,36],[452,6,424,4],[453,4,425,2],[454,4,426,2],[454,13,426,11,"getAttributeValue"],[454,30,426,28,"getAttributeValue"],[454,31,426,28],[454,33,426,31],[455,6,427,4],[455,13,427,11,"quotemarks"],[455,23,427,21],[455,24,427,22,"test"],[455,28,427,26],[455,29,427,27,"source"],[455,35,427,33],[455,36,427,34,"i"],[455,37,427,35],[455,38,427,36],[455,39,427,37],[455,42,427,40,"getQuotedAttributeValue"],[455,65,427,63],[455,66,427,64],[455,67,427,65],[455,70,427,68,"getUnquotedAttributeValue"],[455,95,427,93],[455,96,427,94],[455,97,427,95],[456,4,428,2],[457,4,429,2],[457,13,429,11,"getUnquotedAttributeValue"],[457,38,429,36,"getUnquotedAttributeValue"],[457,39,429,36],[457,41,429,39],[458,6,430,4],[458,10,430,8,"value"],[458,15,430,13],[458,18,430,16],[458,20,430,18],[459,6,431,4],[459,9,431,7],[460,8,432,6],[460,14,432,12,"char"],[460,18,432,16],[460,21,432,19,"source"],[460,27,432,25],[460,28,432,26,"i"],[460,29,432,27],[460,30,432,28],[461,8,433,6],[461,12,433,10,"char"],[461,16,433,14],[461,21,433,19],[461,24,433,22],[461,28,433,26,"char"],[461,32,433,30],[461,37,433,35],[461,40,433,38],[461,44,433,42,"char"],[461,48,433,46],[461,53,433,51],[461,56,433,54],[461,58,433,56],[462,10,434,8],[462,17,434,15,"value"],[462,22,434,20],[463,8,435,6],[464,8,436,6,"value"],[464,13,436,11],[464,17,436,15,"char"],[464,21,436,19],[465,8,437,6,"i"],[465,9,437,7],[465,13,437,11],[465,14,437,12],[466,6,438,4],[466,7,438,5],[466,15,438,13,"i"],[466,16,438,14],[466,19,438,17,"length"],[466,25,438,23],[467,6,439,4],[467,13,439,11,"value"],[467,18,439,16],[468,4,440,2],[469,4,441,2],[469,13,441,11,"getQuotedAttributeValue"],[469,36,441,34,"getQuotedAttributeValue"],[469,37,441,34],[469,39,441,37],[470,6,442,4],[470,12,442,10,"quotemark"],[470,21,442,19],[470,24,442,22,"source"],[470,30,442,28],[470,31,442,29,"i"],[470,32,442,30],[470,34,442,32],[470,35,442,33],[471,6,443,4],[471,10,443,8,"value"],[471,15,443,13],[471,18,443,16],[471,20,443,18],[472,6,444,4],[472,10,444,8,"escaped"],[472,17,444,15],[472,20,444,18],[472,25,444,23],[473,6,445,4],[473,13,445,11,"i"],[473,14,445,12],[473,17,445,15,"length"],[473,23,445,21],[473,25,445,23],[474,8,446,6],[474,14,446,12,"char"],[474,18,446,16],[474,21,446,19,"source"],[474,27,446,25],[474,28,446,26,"i"],[474,29,446,27],[474,31,446,29],[474,32,446,30],[475,8,447,6],[475,12,447,10,"char"],[475,16,447,14],[475,21,447,19,"quotemark"],[475,30,447,28],[475,34,447,32],[475,35,447,33,"escaped"],[475,42,447,40],[475,44,447,42],[476,10,448,8],[476,17,448,15,"value"],[476,22,448,20],[477,8,449,6],[478,8,450,6],[478,12,450,10,"char"],[478,16,450,14],[478,21,450,19],[478,25,450,23],[478,29,450,27],[478,30,450,28,"escaped"],[478,37,450,35],[478,39,450,37],[479,10,451,8,"escaped"],[479,17,451,15],[479,20,451,18],[479,24,451,22],[480,8,452,6],[481,8,453,6,"value"],[481,13,453,11],[481,17,453,15,"escaped"],[481,24,453,22],[481,27,453,25],[481,32,453,30,"char"],[481,36,453,34],[481,38,453,36],[481,41,453,39,"char"],[481,45,453,43],[482,8,454,6,"escaped"],[482,15,454,13],[482,18,454,16],[482,23,454,21],[483,6,455,4],[484,6,456,4],[484,13,456,11,"value"],[484,18,456,16],[485,4,457,2],[486,4,458,2],[486,13,458,11,"allowSpaces"],[486,24,458,22,"allowSpaces"],[486,25,458,22],[486,27,458,25],[487,6,459,4],[487,13,459,11,"i"],[487,14,459,12],[487,17,459,15,"length"],[487,23,459,21],[487,27,459,25,"whitespace"],[487,37,459,35],[487,38,459,36,"test"],[487,42,459,40],[487,43,459,41,"source"],[487,49,459,47],[487,50,459,48,"i"],[487,51,459,49],[487,52,459,50],[487,53,459,51],[487,55,459,53],[488,8,460,6,"i"],[488,9,460,7],[488,13,460,11],[488,14,460,12],[489,6,461,4],[490,4,462,2],[491,4,463,2],[491,8,463,6,"i"],[491,9,463,7],[491,12,463,10],[491,13,463,11],[492,4,464,2],[492,11,464,9,"i"],[492,12,464,10],[492,15,464,13,"length"],[492,21,464,19],[492,23,464,21],[493,6,465,4],[493,10,465,8],[493,11,465,9,"state"],[493,16,465,14],[493,18,465,16],[494,8,466,6,"error"],[494,13,466,11],[494,14,466,12],[494,36,466,34],[494,37,466,35],[495,6,467,4],[496,6,468,4,"state"],[496,11,468,9],[496,14,468,12,"state"],[496,19,468,17],[496,20,468,18],[496,21,468,19],[497,6,469,4,"i"],[497,7,469,5],[497,11,469,9],[497,12,469,10],[498,4,470,2],[499,4,471,2],[499,8,471,6,"state"],[499,13,471,11],[499,18,471,16,"neutral"],[499,25,471,23],[499,27,471,25],[500,6,472,4,"error"],[500,11,472,9],[500,12,472,10],[500,37,472,35],[500,38,472,36],[501,4,473,2],[502,4,474,2],[502,8,474,6,"root"],[502,12,474,10],[502,14,474,12],[503,6,475,4],[503,12,475,10,"xml"],[503,15,475,13],[503,18,475,16],[503,19,475,17,"middleware"],[503,29,475,27],[503,32,475,30,"middleware"],[503,42,475,40],[503,43,475,41,"root"],[503,47,475,45],[503,48,475,46],[503,51,475,49,"root"],[503,55,475,53],[503,60,475,58,"root"],[503,64,475,62],[504,6,476,4],[504,12,476,10,"ast"],[504,15,476,13],[504,18,476,16,"xml"],[504,21,476,19],[504,22,476,20,"children"],[504,30,476,28],[504,31,476,29,"map"],[504,34,476,32],[504,35,476,33,"astToReact"],[504,45,476,43],[504,46,476,44],[505,6,477,4],[505,12,477,10,"jsx"],[505,15,477,13],[505,18,477,16,"xml"],[505,21,477,19],[506,6,478,4,"jsx"],[506,9,478,7],[506,10,478,8,"children"],[506,18,478,16],[506,21,478,19,"ast"],[506,24,478,22],[507,6,479,4],[507,13,479,11,"jsx"],[507,16,479,14],[508,4,480,2],[509,4,481,2],[509,11,481,9],[509,15,481,13],[510,2,482,0],[511,0,482,1],[511,3]],"functionMap":{"names":["<global>","Object.defineProperty$argument_2.get","_interopRequireWildcard","_extends","<anonymous>","missingTag","SvgAst","SvgXml","SvgUri","then$argument_0","then._catch$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","string.split.filter$argument_0","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA;OCe;GDE;AEM,smBF;AGC,+EC,iKD,oCH;AKC;CLE;AMC;CNa;AOE;oCHQ,sCG;CPS;AQC;wBJS;8CKC;KLI,QM;KNG;GIE;CRS;AWI;ECI;GDE;EEC;GFO;EGC;GHe;EIC;GJW;CXC;AgBE;ECI;GDE;EEC;GFO;EGC;GHQ;EIC;GJY;ChBC;kBqBE,wCrB;kBsBC,mDtB;AuBE;gDCE,aD;CvBc;AyBC;CzBgB;A0BI;C1BM;iB2BC,iC3B;A4BC;C5B4B;A6BK;ECO;GDO;EEC;GFK;EGC;GHc;EIC;GJ4D;EKC;GLO;EMC;GNQ;EOC;GPoB;EQC;GRQ;ESC;GTsB;EUC;GVE;EWC;GXW;EYC;GZgB;EaC;GbI;C7BoB"},"hasCjsExports":true},"type":"js/module"}]}