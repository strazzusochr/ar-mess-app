{"dependencies":[{"name":"expo-asset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"ZXJFWHziJpBZf3W7vl00wXf6fd8=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":45,"index":81}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./AV.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":82},"end":{"line":3,"column":53,"index":135}}],"key":"hjl8R0CKmLATYOl9LR8jZWvlf8g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS\", {\n    enumerable: true,\n    get: function () {\n      return _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n    }\n  });\n  Object.defineProperty(exports, \"_DEFAULT_INITIAL_PLAYBACK_STATUS\", {\n    enumerable: true,\n    get: function () {\n      return _DEFAULT_INITIAL_PLAYBACK_STATUS;\n    }\n  });\n  exports.getNativeSourceFromSource = getNativeSourceFromSource;\n  exports.assertStatusValuesInBounds = assertStatusValuesInBounds;\n  exports.getNativeSourceAndFullInitialStatusForLoadAsync = getNativeSourceAndFullInitialStatusForLoadAsync;\n  exports.getUnloadedStatus = getUnloadedStatus;\n  Object.defineProperty(exports, \"PlaybackMixin\", {\n    enumerable: true,\n    get: function () {\n      return PlaybackMixin;\n    }\n  });\n  var _expoAsset = require(_dependencyMap[0], \"expo-asset\");\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _AVTypes = require(_dependencyMap[2], \"./AV.types\");\n  Object.keys(_AVTypes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _AVTypes[k];\n        }\n      });\n    }\n  });\n  // TODO add:\n  //  disableFocusOnAndroid\n  //  audio routes (at least did become noisy on android)\n  //  pan\n  //  pitch\n  //  API to explicitly request audio focus / session\n  //  API to select stream type on Android\n  //  subtitles API\n  /**\n   * @hidden\n   */\n  const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\n  // @needsAudit\n  /**\n   * The default initial `AVPlaybackStatusToSet` of all `Audio.Sound` objects and `Video` components is as follows:\n   *\n   * ```javascript\n   * {\n   *   progressUpdateIntervalMillis: 500,\n   *   positionMillis: 0,\n   *   shouldPlay: false,\n   *   rate: 1.0,\n   *   shouldCorrectPitch: false,\n   *   volume: 1.0,\n   *   isMuted: false,\n   *   isLooping: false,\n   * }\n   * ```\n   *\n   * This default initial status can be overwritten by setting the optional `initialStatus` in `loadAsync()` or `Audio.Sound.createAsync()`.\n   */\n  const _DEFAULT_INITIAL_PLAYBACK_STATUS = {\n    positionMillis: 0,\n    progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n    shouldPlay: false,\n    rate: 1.0,\n    shouldCorrectPitch: false,\n    volume: 1.0,\n    audioPan: 0,\n    isMuted: false,\n    isLooping: false\n  };\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function getNativeSourceFromSource(source) {\n    let uri = null;\n    let overridingExtension = null;\n    let headers;\n    if (typeof source === 'string' && _expoModulesCore.Platform.OS === 'web') {\n      return {\n        uri: source,\n        overridingExtension,\n        headers\n      };\n    }\n    const asset = _getAssetFromPlaybackSource(source);\n    if (asset != null) {\n      uri = asset.localUri || asset.uri;\n    } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n      uri = source.uri;\n    }\n    if (uri == null) {\n      return null;\n    }\n    if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n      overridingExtension = source.overrideFileExtensionAndroid;\n    }\n    if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n      headers = source.headers;\n    }\n    return {\n      uri,\n      overridingExtension,\n      headers\n    };\n  }\n  function _getAssetFromPlaybackSource(source) {\n    if (source == null) {\n      return null;\n    }\n    let asset = null;\n    if (typeof source === 'number') {\n      asset = _expoAsset.Asset.fromModule(source);\n    } else if (source instanceof _expoAsset.Asset) {\n      asset = source;\n    }\n    return asset;\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function assertStatusValuesInBounds(status) {\n    if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n      throw new RangeError('Rate value must be between 0.0 and 32.0');\n    }\n    if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n      throw new RangeError('Volume value must be between 0.0 and 1.0');\n    }\n    if (typeof status.audioPan === 'number' && (status.audioPan < -1 || status.audioPan > 1)) {\n      throw new RangeError('Pan value must be between -1.0 and 1.0');\n    }\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  async function getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst) {\n    // Get the full initial status\n    const fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : Object.assign({}, _DEFAULT_INITIAL_PLAYBACK_STATUS, initialStatus);\n    assertStatusValuesInBounds(fullInitialStatus);\n    if (typeof source === 'string' && _expoModulesCore.Platform.OS === 'web') {\n      return {\n        nativeSource: {\n          uri: source,\n          overridingExtension: null\n        },\n        fullInitialStatus\n      };\n    }\n    // Download first if necessary.\n    const asset = _getAssetFromPlaybackSource(source);\n    if (downloadFirst && asset) {\n      // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n      await asset.downloadAsync();\n    }\n    // Get the native source\n    const nativeSource = getNativeSourceFromSource(source);\n    if (nativeSource === null) {\n      throw new Error(`Cannot load an AV asset from a null playback source`);\n    }\n    // If asset has been downloaded use the localUri\n    if (asset && asset.localUri) {\n      nativeSource.uri = asset.localUri;\n    }\n    return {\n      nativeSource,\n      fullInitialStatus\n    };\n  }\n  // @needsAudit\n  /**\n   * @hidden\n   */\n  function getUnloadedStatus(error = null) {\n    return Object.assign({\n      isLoaded: false\n    }, error ? {\n      error\n    } : null);\n  }\n  /**\n   * @hidden\n   * A mixin that defines common playback methods for A/V classes, so they implement the `Playback`\n   * interface.\n   */\n  const PlaybackMixin = {\n    async playAsync() {\n      return this.setStatusAsync({\n        shouldPlay: true\n      });\n    },\n    async playFromPositionAsync(positionMillis, tolerances = {}) {\n      return this.setStatusAsync({\n        positionMillis,\n        shouldPlay: true,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    },\n    async pauseAsync() {\n      return this.setStatusAsync({\n        shouldPlay: false\n      });\n    },\n    async stopAsync() {\n      return this.setStatusAsync({\n        positionMillis: 0,\n        shouldPlay: false\n      });\n    },\n    async setPositionAsync(positionMillis, tolerances = {}) {\n      return this.setStatusAsync({\n        positionMillis,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    },\n    async setRateAsync(rate, shouldCorrectPitch = false, pitchCorrectionQuality = _AVTypes.PitchCorrectionQuality.Medium) {\n      return this.setStatusAsync({\n        rate,\n        shouldCorrectPitch,\n        pitchCorrectionQuality\n      });\n    },\n    async setVolumeAsync(volume, audioPan) {\n      return this.setStatusAsync({\n        volume,\n        audioPan\n      });\n    },\n    async setIsMutedAsync(isMuted) {\n      return this.setStatusAsync({\n        isMuted\n      });\n    },\n    async setIsLoopingAsync(isLooping) {\n      return this.setStatusAsync({\n        isLooping\n      });\n    },\n    async setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n      return this.setStatusAsync({\n        progressUpdateIntervalMillis\n      });\n    }\n  };\n});","lineCount":261,"map":[[7,2,15,0,"Object"],[7,8,15,0],[7,9,15,0,"defineProperty"],[7,23,15,0],[7,24,15,0,"exports"],[7,31,15,0],[8,4,15,0,"enumerable"],[8,14,15,0],[9,4,15,0,"get"],[9,7,15,0],[9,18,15,0,"get"],[9,19,15,0],[10,6,15,0],[10,13,15,0,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[10,53,15,0],[11,4,15,0],[12,2,15,0],[13,2,35,0,"Object"],[13,8,35,0],[13,9,35,0,"defineProperty"],[13,23,35,0],[13,24,35,0,"exports"],[13,31,35,0],[14,4,35,0,"enumerable"],[14,14,35,0],[15,4,35,0,"get"],[15,7,35,0],[15,18,35,0,"get"],[15,19,35,0],[16,6,35,0],[16,13,35,0,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[16,45,35,0],[17,4,35,0],[18,2,35,0],[19,2,50,0,"exports"],[19,9,50,0],[19,10,50,0,"getNativeSourceFromSource"],[19,35,50,0],[19,38,50,0,"getNativeSourceFromSource"],[19,63,50,0],[20,2,105,0,"exports"],[20,9,105,0],[20,10,105,0,"assertStatusValuesInBounds"],[20,36,105,0],[20,39,105,0,"assertStatusValuesInBounds"],[20,65,105,0],[21,2,120,0,"exports"],[21,9,120,0],[21,10,120,0,"getNativeSourceAndFullInitialStatusForLoadAsync"],[21,57,120,0],[21,60,120,0,"getNativeSourceAndFullInitialStatusForLoadAsync"],[21,107,120,0],[22,2,159,0,"exports"],[22,9,159,0],[22,10,159,0,"getUnloadedStatus"],[22,27,159,0],[22,30,159,0,"getUnloadedStatus"],[22,47,159,0],[23,2,170,0,"Object"],[23,8,170,0],[23,9,170,0,"defineProperty"],[23,23,170,0],[23,24,170,0,"exports"],[23,31,170,0],[24,4,170,0,"enumerable"],[24,14,170,0],[25,4,170,0,"get"],[25,7,170,0],[25,18,170,0,"get"],[25,19,170,0],[26,6,170,0],[26,13,170,0,"PlaybackMixin"],[26,26,170,0],[27,4,170,0],[28,2,170,0],[29,2,1,0],[29,6,1,0,"_expoAsset"],[29,16,1,0],[29,19,1,0,"require"],[29,26,1,0],[29,27,1,0,"_dependencyMap"],[29,41,1,0],[30,2,2,0],[30,6,2,0,"_expoModulesCore"],[30,22,2,0],[30,25,2,0,"require"],[30,32,2,0],[30,33,2,0,"_dependencyMap"],[30,47,2,0],[31,2,3,0],[31,6,3,0,"_AVTypes"],[31,14,3,0],[31,17,3,0,"require"],[31,24,3,0],[31,25,3,0,"_dependencyMap"],[31,39,3,0],[32,2,215,0,"Object"],[32,8,215,0],[32,9,215,0,"keys"],[32,13,215,0],[32,14,215,0,"_AVTypes"],[32,22,215,0],[32,24,215,0,"forEach"],[32,31,215,0],[32,42,215,0,"k"],[32,43,215,0],[33,4,215,0],[33,8,215,0,"k"],[33,9,215,0],[33,28,215,0,"Object"],[33,34,215,0],[33,35,215,0,"prototype"],[33,44,215,0],[33,45,215,0,"hasOwnProperty"],[33,59,215,0],[33,60,215,0,"call"],[33,64,215,0],[33,65,215,0,"exports"],[33,72,215,0],[33,74,215,0,"k"],[33,75,215,0],[34,6,215,0,"Object"],[34,12,215,0],[34,13,215,0,"defineProperty"],[34,27,215,0],[34,28,215,0,"exports"],[34,35,215,0],[34,37,215,0,"k"],[34,38,215,0],[35,8,215,0,"enumerable"],[35,18,215,0],[36,8,215,0,"get"],[36,11,215,0],[36,22,215,0,"get"],[36,23,215,0],[37,10,215,0],[37,17,215,0,"_AVTypes"],[37,25,215,0],[37,26,215,0,"k"],[37,27,215,0],[38,8,215,0],[39,6,215,0],[40,4,215,0],[41,2,215,0],[42,2,4,0],[43,2,5,0],[44,2,6,0],[45,2,7,0],[46,2,8,0],[47,2,9,0],[48,2,10,0],[49,2,11,0],[50,2,12,0],[51,0,13,0],[52,0,14,0],[53,2,15,7],[53,8,15,13,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[53,48,15,53],[53,51,15,56],[53,54,15,59],[54,2,16,0],[55,2,17,0],[56,0,18,0],[57,0,19,0],[58,0,20,0],[59,0,21,0],[60,0,22,0],[61,0,23,0],[62,0,24,0],[63,0,25,0],[64,0,26,0],[65,0,27,0],[66,0,28,0],[67,0,29,0],[68,0,30,0],[69,0,31,0],[70,0,32,0],[71,0,33,0],[72,0,34,0],[73,2,35,7],[73,8,35,13,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[73,40,35,45],[73,43,35,48],[74,4,36,4,"positionMillis"],[74,18,36,18],[74,20,36,20],[74,21,36,21],[75,4,37,4,"progressUpdateIntervalMillis"],[75,32,37,32],[75,34,37,34,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[75,74,37,74],[76,4,38,4,"shouldPlay"],[76,14,38,14],[76,16,38,16],[76,21,38,21],[77,4,39,4,"rate"],[77,8,39,8],[77,10,39,10],[77,13,39,13],[78,4,40,4,"shouldCorrectPitch"],[78,22,40,22],[78,24,40,24],[78,29,40,29],[79,4,41,4,"volume"],[79,10,41,10],[79,12,41,12],[79,15,41,15],[80,4,42,4,"audioPan"],[80,12,42,12],[80,14,42,14],[80,15,42,15],[81,4,43,4,"isMuted"],[81,11,43,11],[81,13,43,13],[81,18,43,18],[82,4,44,4,"isLooping"],[82,13,44,13],[82,15,44,15],[83,2,45,0],[83,3,45,1],[84,2,46,0],[85,2,47,0],[86,0,48,0],[87,0,49,0],[88,2,50,7],[88,11,50,16,"getNativeSourceFromSource"],[88,36,50,41,"getNativeSourceFromSource"],[88,37,50,42,"source"],[88,43,50,48],[88,45,50,50],[89,4,51,4],[89,8,51,8,"uri"],[89,11,51,11],[89,14,51,14],[89,18,51,18],[90,4,52,4],[90,8,52,8,"overridingExtension"],[90,27,52,27],[90,30,52,30],[90,34,52,34],[91,4,53,4],[91,8,53,8,"headers"],[91,15,53,15],[92,4,54,4],[92,8,54,8],[92,15,54,15,"source"],[92,21,54,21],[92,26,54,26],[92,34,54,34],[92,38,54,38,"Platform"],[92,54,54,46],[92,55,54,46,"Platform"],[92,63,54,46],[92,64,54,47,"OS"],[92,66,54,49],[92,71,54,54],[92,76,54,59],[92,78,54,61],[93,6,55,8],[93,13,55,15],[94,8,56,12,"uri"],[94,11,56,15],[94,13,56,17,"source"],[94,19,56,23],[95,8,57,12,"overridingExtension"],[95,27,57,31],[96,8,58,12,"headers"],[97,6,59,8],[97,7,59,9],[98,4,60,4],[99,4,61,4],[99,10,61,10,"asset"],[99,15,61,15],[99,18,61,18,"_getAssetFromPlaybackSource"],[99,45,61,45],[99,46,61,46,"source"],[99,52,61,52],[99,53,61,53],[100,4,62,4],[100,8,62,8,"asset"],[100,13,62,13],[100,17,62,17],[100,21,62,21],[100,23,62,23],[101,6,63,8,"uri"],[101,9,63,11],[101,12,63,14,"asset"],[101,17,63,19],[101,18,63,20,"localUri"],[101,26,63,28],[101,30,63,32,"asset"],[101,35,63,37],[101,36,63,38,"uri"],[101,39,63,41],[102,4,64,4],[102,5,64,5],[102,11,65,9],[102,15,65,13,"source"],[102,21,65,19],[102,25,65,23],[102,29,65,27],[102,33,66,8],[102,40,66,15,"source"],[102,46,66,21],[102,51,66,26],[102,59,66,34],[102,63,67,8],[102,68,67,13],[102,72,67,17,"source"],[102,78,67,23],[102,82,68,8],[102,89,68,15,"source"],[102,95,68,21],[102,96,68,22,"uri"],[102,99,68,25],[102,104,68,30],[102,112,68,38],[102,114,68,40],[103,6,69,8,"uri"],[103,9,69,11],[103,12,69,14,"source"],[103,18,69,20],[103,19,69,21,"uri"],[103,22,69,24],[104,4,70,4],[105,4,71,4],[105,8,71,8,"uri"],[105,11,71,11],[105,15,71,15],[105,19,71,19],[105,21,71,21],[106,6,72,8],[106,13,72,15],[106,17,72,19],[107,4,73,4],[108,4,74,4],[108,8,74,8,"source"],[108,14,74,14],[108,18,74,18],[108,22,74,22],[108,26,75,8],[108,33,75,15,"source"],[108,39,75,21],[108,44,75,26],[108,52,75,34],[108,56,76,8],[108,86,76,38],[108,90,76,42,"source"],[108,96,76,48],[108,100,77,8],[108,107,77,15,"source"],[108,113,77,21],[108,114,77,22,"overrideFileExtensionAndroid"],[108,142,77,50],[108,147,77,55],[108,155,77,63],[108,157,77,65],[109,6,78,8,"overridingExtension"],[109,25,78,27],[109,28,78,30,"source"],[109,34,78,36],[109,35,78,37,"overrideFileExtensionAndroid"],[109,63,78,65],[110,4,79,4],[111,4,80,4],[111,8,80,8,"source"],[111,14,80,14],[111,18,80,18],[111,22,80,22],[111,26,81,8],[111,33,81,15,"source"],[111,39,81,21],[111,44,81,26],[111,52,81,34],[111,56,82,8],[111,65,82,17],[111,69,82,21,"source"],[111,75,82,27],[111,79,83,8],[111,86,83,15,"source"],[111,92,83,21],[111,93,83,22,"headers"],[111,100,83,29],[111,105,83,34],[111,113,83,42],[111,115,83,44],[112,6,84,8,"headers"],[112,13,84,15],[112,16,84,18,"source"],[112,22,84,24],[112,23,84,25,"headers"],[112,30,84,32],[113,4,85,4],[114,4,86,4],[114,11,86,11],[115,6,86,13,"uri"],[115,9,86,16],[116,6,86,18,"overridingExtension"],[116,25,86,37],[117,6,86,39,"headers"],[118,4,86,47],[118,5,86,48],[119,2,87,0],[120,2,88,0],[120,11,88,9,"_getAssetFromPlaybackSource"],[120,38,88,36,"_getAssetFromPlaybackSource"],[120,39,88,37,"source"],[120,45,88,43],[120,47,88,45],[121,4,89,4],[121,8,89,8,"source"],[121,14,89,14],[121,18,89,18],[121,22,89,22],[121,24,89,24],[122,6,90,8],[122,13,90,15],[122,17,90,19],[123,4,91,4],[124,4,92,4],[124,8,92,8,"asset"],[124,13,92,13],[124,16,92,16],[124,20,92,20],[125,4,93,4],[125,8,93,8],[125,15,93,15,"source"],[125,21,93,21],[125,26,93,26],[125,34,93,34],[125,36,93,36],[126,6,94,8,"asset"],[126,11,94,13],[126,14,94,16,"Asset"],[126,24,94,21],[126,25,94,21,"Asset"],[126,30,94,21],[126,31,94,22,"fromModule"],[126,41,94,32],[126,42,94,33,"source"],[126,48,94,39],[126,49,94,40],[127,4,95,4],[127,5,95,5],[127,11,96,9],[127,15,96,13,"source"],[127,21,96,19],[127,33,96,31,"Asset"],[127,43,96,36],[127,44,96,36,"Asset"],[127,49,96,36],[127,51,96,38],[128,6,97,8,"asset"],[128,11,97,13],[128,14,97,16,"source"],[128,20,97,22],[129,4,98,4],[130,4,99,4],[130,11,99,11,"asset"],[130,16,99,16],[131,2,100,0],[132,2,101,0],[133,2,102,0],[134,0,103,0],[135,0,104,0],[136,2,105,7],[136,11,105,16,"assertStatusValuesInBounds"],[136,37,105,42,"assertStatusValuesInBounds"],[136,38,105,43,"status"],[136,44,105,49],[136,46,105,51],[137,4,106,4],[137,8,106,8],[137,15,106,15,"status"],[137,21,106,21],[137,22,106,22,"rate"],[137,26,106,26],[137,31,106,31],[137,39,106,39],[137,44,106,44,"status"],[137,50,106,50],[137,51,106,51,"rate"],[137,55,106,55],[137,58,106,58],[137,59,106,59],[137,63,106,63,"status"],[137,69,106,69],[137,70,106,70,"rate"],[137,74,106,74],[137,77,106,77],[137,79,106,79],[137,80,106,80],[137,82,106,82],[138,6,107,8],[138,12,107,14],[138,16,107,18,"RangeError"],[138,26,107,28],[138,27,107,29],[138,68,107,70],[138,69,107,71],[139,4,108,4],[140,4,109,4],[140,8,109,8],[140,15,109,15,"status"],[140,21,109,21],[140,22,109,22,"volume"],[140,28,109,28],[140,33,109,33],[140,41,109,41],[140,46,109,46,"status"],[140,52,109,52],[140,53,109,53,"volume"],[140,59,109,59],[140,62,109,62],[140,63,109,63],[140,67,109,67,"status"],[140,73,109,73],[140,74,109,74,"volume"],[140,80,109,80],[140,83,109,83],[140,84,109,84],[140,85,109,85],[140,87,109,87],[141,6,110,8],[141,12,110,14],[141,16,110,18,"RangeError"],[141,26,110,28],[141,27,110,29],[141,69,110,71],[141,70,110,72],[142,4,111,4],[143,4,112,4],[143,8,112,8],[143,15,112,15,"status"],[143,21,112,21],[143,22,112,22,"audioPan"],[143,30,112,30],[143,35,112,35],[143,43,112,43],[143,48,112,48,"status"],[143,54,112,54],[143,55,112,55,"audioPan"],[143,63,112,63],[143,66,112,66],[143,67,112,67],[143,68,112,68],[143,72,112,72,"status"],[143,78,112,78],[143,79,112,79,"audioPan"],[143,87,112,87],[143,90,112,90],[143,91,112,91],[143,92,112,92],[143,94,112,94],[144,6,113,8],[144,12,113,14],[144,16,113,18,"RangeError"],[144,26,113,28],[144,27,113,29],[144,67,113,69],[144,68,113,70],[145,4,114,4],[146,2,115,0],[147,2,116,0],[148,2,117,0],[149,0,118,0],[150,0,119,0],[151,2,120,7],[151,17,120,22,"getNativeSourceAndFullInitialStatusForLoadAsync"],[151,64,120,69,"getNativeSourceAndFullInitialStatusForLoadAsync"],[151,65,120,70,"source"],[151,71,120,76],[151,73,120,78,"initialStatus"],[151,86,120,91],[151,88,120,93,"downloadFirst"],[151,101,120,106],[151,103,120,108],[152,4,121,4],[153,4,122,4],[153,10,122,10,"fullInitialStatus"],[153,27,122,27],[153,30,122,30,"initialStatus"],[153,43,122,43],[153,47,122,47],[153,51,122,51],[153,54,123,10,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[153,86,123,42],[153,89,123,42,"Object"],[153,95,123,42],[153,96,123,42,"assign"],[153,102,123,42],[153,107,125,15,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[153,139,125,47],[153,141,126,15,"initialStatus"],[153,154,126,28],[153,155,127,9],[154,4,128,4,"assertStatusValuesInBounds"],[154,30,128,30],[154,31,128,31,"fullInitialStatus"],[154,48,128,48],[154,49,128,49],[155,4,129,4],[155,8,129,8],[155,15,129,15,"source"],[155,21,129,21],[155,26,129,26],[155,34,129,34],[155,38,129,38,"Platform"],[155,54,129,46],[155,55,129,46,"Platform"],[155,63,129,46],[155,64,129,47,"OS"],[155,66,129,49],[155,71,129,54],[155,76,129,59],[155,78,129,61],[156,6,130,8],[156,13,130,15],[157,8,131,12,"nativeSource"],[157,20,131,24],[157,22,131,26],[158,10,132,16,"uri"],[158,13,132,19],[158,15,132,21,"source"],[158,21,132,27],[159,10,133,16,"overridingExtension"],[159,29,133,35],[159,31,133,37],[160,8,134,12],[160,9,134,13],[161,8,135,12,"fullInitialStatus"],[162,6,136,8],[162,7,136,9],[163,4,137,4],[164,4,138,4],[165,4,139,4],[165,10,139,10,"asset"],[165,15,139,15],[165,18,139,18,"_getAssetFromPlaybackSource"],[165,45,139,45],[165,46,139,46,"source"],[165,52,139,52],[165,53,139,53],[166,4,140,4],[166,8,140,8,"downloadFirst"],[166,21,140,21],[166,25,140,25,"asset"],[166,30,140,30],[166,32,140,32],[167,6,141,8],[168,6,142,8],[168,12,142,14,"asset"],[168,17,142,19],[168,18,142,20,"downloadAsync"],[168,31,142,33],[168,32,142,34],[168,33,142,35],[169,4,143,4],[170,4,144,4],[171,4,145,4],[171,10,145,10,"nativeSource"],[171,22,145,22],[171,25,145,25,"getNativeSourceFromSource"],[171,50,145,50],[171,51,145,51,"source"],[171,57,145,57],[171,58,145,58],[172,4,146,4],[172,8,146,8,"nativeSource"],[172,20,146,20],[172,25,146,25],[172,29,146,29],[172,31,146,31],[173,6,147,8],[173,12,147,14],[173,16,147,18,"Error"],[173,21,147,23],[173,22,147,24],[173,75,147,77],[173,76,147,78],[174,4,148,4],[175,4,149,4],[176,4,150,4],[176,8,150,8,"asset"],[176,13,150,13],[176,17,150,17,"asset"],[176,22,150,22],[176,23,150,23,"localUri"],[176,31,150,31],[176,33,150,33],[177,6,151,8,"nativeSource"],[177,18,151,20],[177,19,151,21,"uri"],[177,22,151,24],[177,25,151,27,"asset"],[177,30,151,32],[177,31,151,33,"localUri"],[177,39,151,41],[178,4,152,4],[179,4,153,4],[179,11,153,11],[180,6,153,13,"nativeSource"],[180,18,153,25],[181,6,153,27,"fullInitialStatus"],[182,4,153,45],[182,5,153,46],[183,2,154,0],[184,2,155,0],[185,2,156,0],[186,0,157,0],[187,0,158,0],[188,2,159,7],[188,11,159,16,"getUnloadedStatus"],[188,28,159,33,"getUnloadedStatus"],[188,29,159,34,"error"],[188,34,159,39],[188,37,159,42],[188,41,159,46],[188,43,159,48],[189,4,160,4],[189,11,160,4,"Object"],[189,17,160,4],[189,18,160,4,"assign"],[189,24,160,4],[190,6,161,8,"isLoaded"],[190,14,161,16],[190,16,161,18],[191,4,161,23],[191,7,162,12,"error"],[191,12,162,17],[191,15,162,20],[192,6,162,22,"error"],[193,4,162,28],[193,5,162,29],[193,8,162,32],[193,12,162,36],[194,2,164,0],[195,2,165,0],[196,0,166,0],[197,0,167,0],[198,0,168,0],[199,0,169,0],[200,2,170,7],[200,8,170,13,"PlaybackMixin"],[200,21,170,26],[200,24,170,29],[201,4,171,4],[201,10,171,10,"playAsync"],[201,19,171,19,"playAsync"],[201,20,171,19],[201,22,171,22],[202,6,172,8],[202,13,172,15],[202,17,172,19],[202,18,172,20,"setStatusAsync"],[202,32,172,34],[202,33,172,35],[203,8,172,37,"shouldPlay"],[203,18,172,47],[203,20,172,49],[204,6,172,54],[204,7,172,55],[204,8,172,56],[205,4,173,4],[205,5,173,5],[206,4,174,4],[206,10,174,10,"playFromPositionAsync"],[206,31,174,31,"playFromPositionAsync"],[206,32,174,32,"positionMillis"],[206,46,174,46],[206,48,174,48,"tolerances"],[206,58,174,58],[206,61,174,61],[206,62,174,62],[206,63,174,63],[206,65,174,65],[207,6,175,8],[207,13,175,15],[207,17,175,19],[207,18,175,20,"setStatusAsync"],[207,32,175,34],[207,33,175,35],[208,8,176,12,"positionMillis"],[208,22,176,26],[209,8,177,12,"shouldPlay"],[209,18,177,22],[209,20,177,24],[209,24,177,28],[210,8,178,12,"seekMillisToleranceAfter"],[210,32,178,36],[210,34,178,38,"tolerances"],[210,44,178,48],[210,45,178,49,"toleranceMillisAfter"],[210,65,178,69],[211,8,179,12,"seekMillisToleranceBefore"],[211,33,179,37],[211,35,179,39,"tolerances"],[211,45,179,49],[211,46,179,50,"toleranceMillisBefore"],[212,6,180,8],[212,7,180,9],[212,8,180,10],[213,4,181,4],[213,5,181,5],[214,4,182,4],[214,10,182,10,"pauseAsync"],[214,20,182,20,"pauseAsync"],[214,21,182,20],[214,23,182,23],[215,6,183,8],[215,13,183,15],[215,17,183,19],[215,18,183,20,"setStatusAsync"],[215,32,183,34],[215,33,183,35],[216,8,183,37,"shouldPlay"],[216,18,183,47],[216,20,183,49],[217,6,183,55],[217,7,183,56],[217,8,183,57],[218,4,184,4],[218,5,184,5],[219,4,185,4],[219,10,185,10,"stopAsync"],[219,19,185,19,"stopAsync"],[219,20,185,19],[219,22,185,22],[220,6,186,8],[220,13,186,15],[220,17,186,19],[220,18,186,20,"setStatusAsync"],[220,32,186,34],[220,33,186,35],[221,8,186,37,"positionMillis"],[221,22,186,51],[221,24,186,53],[221,25,186,54],[222,8,186,56,"shouldPlay"],[222,18,186,66],[222,20,186,68],[223,6,186,74],[223,7,186,75],[223,8,186,76],[224,4,187,4],[224,5,187,5],[225,4,188,4],[225,10,188,10,"setPositionAsync"],[225,26,188,26,"setPositionAsync"],[225,27,188,27,"positionMillis"],[225,41,188,41],[225,43,188,43,"tolerances"],[225,53,188,53],[225,56,188,56],[225,57,188,57],[225,58,188,58],[225,60,188,60],[226,6,189,8],[226,13,189,15],[226,17,189,19],[226,18,189,20,"setStatusAsync"],[226,32,189,34],[226,33,189,35],[227,8,190,12,"positionMillis"],[227,22,190,26],[228,8,191,12,"seekMillisToleranceAfter"],[228,32,191,36],[228,34,191,38,"tolerances"],[228,44,191,48],[228,45,191,49,"toleranceMillisAfter"],[228,65,191,69],[229,8,192,12,"seekMillisToleranceBefore"],[229,33,192,37],[229,35,192,39,"tolerances"],[229,45,192,49],[229,46,192,50,"toleranceMillisBefore"],[230,6,193,8],[230,7,193,9],[230,8,193,10],[231,4,194,4],[231,5,194,5],[232,4,195,4],[232,10,195,10,"setRateAsync"],[232,22,195,22,"setRateAsync"],[232,23,195,23,"rate"],[232,27,195,27],[232,29,195,29,"shouldCorrectPitch"],[232,47,195,47],[232,50,195,50],[232,55,195,55],[232,57,195,57,"pitchCorrectionQuality"],[232,79,195,79],[232,82,195,82,"PitchCorrectionQuality"],[232,90,195,104],[232,91,195,104,"PitchCorrectionQuality"],[232,113,195,104],[232,114,195,105,"Medium"],[232,120,195,111],[232,122,195,113],[233,6,196,8],[233,13,196,15],[233,17,196,19],[233,18,196,20,"setStatusAsync"],[233,32,196,34],[233,33,196,35],[234,8,197,12,"rate"],[234,12,197,16],[235,8,198,12,"shouldCorrectPitch"],[235,26,198,30],[236,8,199,12,"pitchCorrectionQuality"],[237,6,200,8],[237,7,200,9],[237,8,200,10],[238,4,201,4],[238,5,201,5],[239,4,202,4],[239,10,202,10,"setVolumeAsync"],[239,24,202,24,"setVolumeAsync"],[239,25,202,25,"volume"],[239,31,202,31],[239,33,202,33,"audioPan"],[239,41,202,41],[239,43,202,43],[240,6,203,8],[240,13,203,15],[240,17,203,19],[240,18,203,20,"setStatusAsync"],[240,32,203,34],[240,33,203,35],[241,8,203,37,"volume"],[241,14,203,43],[242,8,203,45,"audioPan"],[243,6,203,54],[243,7,203,55],[243,8,203,56],[244,4,204,4],[244,5,204,5],[245,4,205,4],[245,10,205,10,"setIsMutedAsync"],[245,25,205,25,"setIsMutedAsync"],[245,26,205,26,"isMuted"],[245,33,205,33],[245,35,205,35],[246,6,206,8],[246,13,206,15],[246,17,206,19],[246,18,206,20,"setStatusAsync"],[246,32,206,34],[246,33,206,35],[247,8,206,37,"isMuted"],[248,6,206,45],[248,7,206,46],[248,8,206,47],[249,4,207,4],[249,5,207,5],[250,4,208,4],[250,10,208,10,"setIsLoopingAsync"],[250,27,208,27,"setIsLoopingAsync"],[250,28,208,28,"isLooping"],[250,37,208,37],[250,39,208,39],[251,6,209,8],[251,13,209,15],[251,17,209,19],[251,18,209,20,"setStatusAsync"],[251,32,209,34],[251,33,209,35],[252,8,209,37,"isLooping"],[253,6,209,47],[253,7,209,48],[253,8,209,49],[254,4,210,4],[254,5,210,5],[255,4,211,4],[255,10,211,10,"setProgressUpdateIntervalAsync"],[255,40,211,40,"setProgressUpdateIntervalAsync"],[255,41,211,41,"progressUpdateIntervalMillis"],[255,69,211,69],[255,71,211,71],[256,6,212,8],[256,13,212,15],[256,17,212,19],[256,18,212,20,"setStatusAsync"],[256,32,212,34],[256,33,212,35],[257,8,212,37,"progressUpdateIntervalMillis"],[258,6,212,66],[258,7,212,67],[258,8,212,68],[259,4,213,4],[260,2,214,0],[260,3,214,1],[261,0,214,2],[261,3]],"functionMap":{"names":["<global>","getNativeSourceFromSource","_getAssetFromPlaybackSource","assertStatusValuesInBounds","getNativeSourceAndFullInitialStatusForLoadAsync","getUnloadedStatus","PlaybackMixin.playAsync","PlaybackMixin.playFromPositionAsync","PlaybackMixin.pauseAsync","PlaybackMixin.stopAsync","PlaybackMixin.setPositionAsync","PlaybackMixin.setRateAsync","PlaybackMixin.setVolumeAsync","PlaybackMixin.setIsMutedAsync","PlaybackMixin.setIsLoopingAsync","PlaybackMixin.setProgressUpdateIntervalAsync"],"mappings":"AAA;OCiD;CDqC;AEC;CFY;OGK;CHU;OIK;CJkC;OKK;CLK;IMO;KNE;IOC;KPO;IQC;KRE;ISC;KTE;IUC;KVM;IWC;KXM;IYC;KZE;IaC;KbE;IcC;KdE;IeC;KfE"},"hasCjsExports":false},"type":"js/module"}]}