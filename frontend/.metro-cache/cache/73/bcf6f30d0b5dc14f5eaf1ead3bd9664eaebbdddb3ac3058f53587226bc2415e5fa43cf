{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":25},"end":{"line":2,"column":34,"index":59}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"./WebCapabilityUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":60},"end":{"line":3,"column":56,"index":116}}],"key":"QbGAcPe6ps2J4vvOHxE4NHI5sfY=","exportNames":["*"],"imports":1}},{"name":"./WebConstants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":117},"end":{"line":4,"column":93,"index":210}}],"key":"VYBjMDeNhUYVRZIl4m+mFrGQcXE=","exportNames":["*"],"imports":1}},{"name":"./WebUserMediaManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":211},"end":{"line":5,"column":62,"index":273}}],"key":"3rDgd/gjl+fuboOhAcsvaqlX7vw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getImageSize = getImageSize;\n  exports.toDataURL = toDataURL;\n  exports.hasValidConstraints = hasValidConstraints;\n  exports.captureImageData = captureImageData;\n  exports.captureImageContext = captureImageContext;\n  exports.captureImage = captureImage;\n  exports.getIdealConstraints = getIdealConstraints;\n  exports.getPreferredStreamDevice = getPreferredStreamDevice;\n  exports.getStreamDevice = getStreamDevice;\n  exports.isWebKit = isWebKit;\n  exports.compareStreams = compareStreams;\n  exports.capture = capture;\n  exports.syncTrackCapabilities = syncTrackCapabilities;\n  exports.stopMediaStream = stopMediaStream;\n  exports.setVideoSource = setVideoSource;\n  exports.isCapabilityAvailable = isCapabilityAvailable;\n  var _invariant = require(_dependencyMap[0], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _WebCapabilityUtils = require(_dependencyMap[1], \"./WebCapabilityUtils\");\n  var CapabilityUtils = _interopNamespace(_WebCapabilityUtils);\n  var _WebConstants = require(_dependencyMap[2], \"./WebConstants\");\n  var _WebUserMediaManager = require(_dependencyMap[3], \"./WebUserMediaManager\");\n  /* eslint-env browser */\n\n  function getImageSize(videoWidth, videoHeight, scale) {\n    const width = videoWidth * scale;\n    const ratio = videoWidth / width;\n    const height = videoHeight / ratio;\n    return {\n      width,\n      height\n    };\n  }\n  function toDataURL(canvas, imageType, quality) {\n    const types = ['png', 'jpg'];\n    (0, invariant.default)(types.includes(imageType), `expo-camera: ${imageType} is not a valid ImageType. Expected a string from: ${types.join(', ')}`);\n    const format = _WebConstants.ImageTypeFormat[imageType];\n    if (imageType === 'jpg') {\n      (0, invariant.default)(quality <= 1 && quality >= 0, `expo-camera: ${quality} is not a valid image quality. Expected a number from 0...1`);\n      return canvas.toDataURL(format, quality);\n    } else {\n      return canvas.toDataURL(format);\n    }\n  }\n  function hasValidConstraints(preferredCameraType, width, height) {\n    return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n  }\n  function ensureCameraPictureOptions(config) {\n    const captureOptions = {\n      scale: 1,\n      imageType: 'png',\n      isImageMirror: false\n    };\n    for (const key in config) {\n      const prop = key;\n      if (prop in config && config[prop] !== undefined && prop in captureOptions) {\n        captureOptions[prop] = config[prop];\n      }\n    }\n    return captureOptions;\n  }\n  const DEFAULT_QUALITY = 0.92;\n  function captureImageData(video, pictureOptions = {}) {\n    if (!video || video.readyState !== video.HAVE_ENOUGH_DATA) {\n      return null;\n    }\n    const canvas = captureImageContext(video, pictureOptions);\n    const context = canvas.getContext('2d', {\n      alpha: false\n    });\n    if (!context || !canvas.width || !canvas.height) {\n      return null;\n    }\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    return imageData;\n  }\n  function captureImageContext(video, {\n    scale = 1,\n    isImageMirror = false\n  }) {\n    const {\n      videoWidth,\n      videoHeight\n    } = video;\n    const {\n      width,\n      height\n    } = getImageSize(videoWidth, videoHeight, scale);\n    // Build the canvas size and draw the camera image to the context from video\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d', {\n      alpha: false\n    });\n    if (!context) {\n      // Should never be called\n      throw new Error('Context is not defined');\n    }\n    // sharp image details\n    // context.imageSmoothingEnabled = false;\n    // Flip horizontally (as css transform: rotateY(180deg))\n    if (isImageMirror) {\n      context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n    }\n    context.drawImage(video, 0, 0, width, height);\n    return canvas;\n  }\n  function captureImage(video, pictureOptions) {\n    const config = ensureCameraPictureOptions(pictureOptions);\n    const canvas = captureImageContext(video, config);\n    const {\n      imageType,\n      quality = DEFAULT_QUALITY\n    } = config;\n    return toDataURL(canvas, imageType, quality);\n  }\n  function getSupportedConstraints() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n      return navigator.mediaDevices.getSupportedConstraints();\n    }\n    return null;\n  }\n  function getIdealConstraints(preferredCameraType, width, height) {\n    const preferredConstraints = {\n      audio: false,\n      video: {}\n    };\n    if (hasValidConstraints(preferredCameraType, width, height)) {\n      return _WebConstants.MinimumConstraints;\n    }\n    const supports = getSupportedConstraints();\n    // TODO(Bacon): Test this\n    if (!supports || !supports.facingMode || !supports.width || !supports.height) {\n      return _WebConstants.MinimumConstraints;\n    }\n    const types = ['front', 'back'];\n    if (preferredCameraType && types.includes(preferredCameraType)) {\n      const facingMode = _WebConstants.CameraTypeToFacingMode[preferredCameraType];\n      if (isWebKit()) {\n        const key = facingMode === 'user' ? 'exact' : 'ideal';\n        preferredConstraints.video.facingMode = {\n          [key]: facingMode\n        };\n      } else {\n        preferredConstraints.video.facingMode = {\n          ideal: _WebConstants.CameraTypeToFacingMode[preferredCameraType]\n        };\n      }\n    }\n    if (isMediaTrackConstraints(preferredConstraints.video)) {\n      preferredConstraints.video.width = width;\n      preferredConstraints.video.height = height;\n    }\n    return preferredConstraints;\n  }\n  function isMediaTrackConstraints(input) {\n    return input && typeof input.video !== 'boolean';\n  }\n  /**\n   * Invoke getStreamDevice a second time with the opposing camera type if the preferred type cannot be retrieved.\n   *\n   * @param preferredCameraType\n   * @param preferredWidth\n   * @param preferredHeight\n   */\n  async function getPreferredStreamDevice(preferredCameraType, preferredWidth, preferredHeight) {\n    try {\n      return await getStreamDevice(preferredCameraType, preferredWidth, preferredHeight);\n    } catch (error) {\n      // A hack on desktop browsers to ensure any camera is used.\n      // eslint-disable-next-line no-undef\n      if (error instanceof OverconstrainedError && error.constraint === 'facingMode') {\n        const nextCameraType = preferredCameraType === 'back' ? 'front' : 'back';\n        return await getStreamDevice(nextCameraType, preferredWidth, preferredHeight);\n      }\n      throw error;\n    }\n  }\n  async function getStreamDevice(preferredCameraType, preferredWidth, preferredHeight) {\n    const constraints = getIdealConstraints(preferredCameraType, preferredWidth, preferredHeight);\n    const stream = await (0, _WebUserMediaManager.requestUserMediaAsync)(constraints);\n    return stream;\n  }\n  function isWebKit() {\n    return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n  }\n  function compareStreams(a, b) {\n    if (!a || !b) {\n      return false;\n    }\n    const settingsA = a.getTracks()[0].getSettings();\n    const settingsB = b.getTracks()[0].getSettings();\n    return settingsA.deviceId === settingsB.deviceId;\n  }\n  function capture(video, settings, config) {\n    const base64 = captureImage(video, config);\n    const capturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0,\n      format: config.imageType ?? 'jpg'\n    };\n    if (settings) {\n      const {\n        width = 0,\n        height = 0\n      } = settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      capturedPicture.exif = settings;\n    }\n    if (config.onPictureSaved) {\n      config.onPictureSaved(capturedPicture);\n    }\n    return capturedPicture;\n  }\n  async function syncTrackCapabilities(cameraType, stream, settings = {}) {\n    if (stream?.getVideoTracks) {\n      await Promise.all(stream.getVideoTracks().map(track => onCapabilitiesReady(cameraType, track, settings)));\n    }\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\n  async function onCapabilitiesReady(cameraType, track, settings = {}) {\n    if (typeof track.getCapabilities !== 'function') {\n      return;\n    }\n    const capabilities = track.getCapabilities();\n    // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n    const constraints = {};\n    // TODO(Bacon): Add `pointsOfInterest` support\n    const clampedValues = ['exposureCompensation', 'colorTemperature', 'iso', 'brightness', 'contrast', 'saturation', 'sharpness', 'focusDistance', 'zoom'];\n    for (const property of clampedValues) {\n      if (capabilities[property]) {\n        constraints[property] = convertNormalizedSetting(capabilities[property], settings[property]);\n      }\n    }\n    function validatedInternalConstrainedValue(constraintKey, settingsKey, converter) {\n      const convertedSetting = converter(settings[settingsKey]);\n      return validatedConstrainedValue({\n        constraintKey,\n        settingsKey,\n        convertedSetting,\n        capabilities,\n        settings,\n        cameraType\n      });\n    }\n    if (capabilities.focusMode && settings.autoFocus !== undefined) {\n      constraints.focusMode = validatedInternalConstrainedValue('focusMode', 'autoFocus', CapabilityUtils.convertAutoFocusJSONToNative);\n    }\n    if (capabilities.torch && settings.flashMode !== undefined) {\n      constraints.torch = validatedInternalConstrainedValue('torch', 'flashMode', CapabilityUtils.convertFlashModeJSONToNative);\n    }\n    if (capabilities.whiteBalanceMode && settings.whiteBalance !== undefined) {\n      constraints.whiteBalanceMode = validatedInternalConstrainedValue('whiteBalanceMode', 'whiteBalance', CapabilityUtils.convertWhiteBalanceJSONToNative);\n    }\n    try {\n      await track.applyConstraints({\n        advanced: [constraints]\n      });\n    } catch (error) {\n      if (__DEV__) console.warn('Failed to apply constraints', error);\n    }\n  }\n  function stopMediaStream(stream) {\n    if (!stream) {\n      return;\n    }\n    if (stream.getAudioTracks) {\n      stream.getAudioTracks().forEach(track => track.stop());\n    }\n    if (stream.getVideoTracks) {\n      stream.getVideoTracks().forEach(track => track.stop());\n    }\n    if (isMediaStreamTrack(stream)) {\n      stream.stop();\n    }\n  }\n  function setVideoSource(video, stream) {\n    const createObjectURL = window.URL.createObjectURL ?? window.webkitURL.createObjectURL;\n    if (typeof video.srcObject !== 'undefined') {\n      video.srcObject = stream;\n    } else if (typeof video.mozSrcObject !== 'undefined') {\n      video.mozSrcObject = stream;\n    } else if (stream && createObjectURL) {\n      video.src = createObjectURL(stream);\n    }\n    if (!stream) {\n      const revokeObjectURL = window.URL.revokeObjectURL ?? window.webkitURL.revokeObjectURL;\n      const source = video.src ?? video.srcObject ?? video.mozSrcObject;\n      if (revokeObjectURL && typeof source === 'string') {\n        revokeObjectURL(source);\n      }\n    }\n  }\n  function isCapabilityAvailable(video, keyName) {\n    const stream = video.srcObject;\n    if (stream instanceof MediaStream) {\n      const videoTrack = stream.getVideoTracks()[0];\n      return !!videoTrack.getCapabilities?.()?.[keyName];\n    }\n    return false;\n  }\n  function isMediaStreamTrack(input) {\n    return typeof input.stop === 'function';\n  }\n  function convertNormalizedSetting(range, value) {\n    if (!value) {\n      return;\n    }\n    // TODO(@kitten): Handle undefined values / normalize explicitly\n    // convert the normalized incoming setting to the native camera zoom range\n    const converted = convertRange(value, [range.min, range.max]);\n    // clamp value so we don't get an error\n    return Math.min(range.max, Math.max(range.min, converted));\n  }\n  function convertRange(value, r2, r1 = [0, 1]) {\n    return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n  }\n  function validatedConstrainedValue(props) {\n    const {\n      constraintKey,\n      settingsKey,\n      convertedSetting,\n      capabilities,\n      settings,\n      cameraType\n    } = props;\n    const setting = settings[settingsKey];\n    if (Array.isArray(capabilities[constraintKey]) && convertedSetting && !capabilities[constraintKey].includes(convertedSetting)) {\n      if (__DEV__) {\n        // Only warn in dev mode.\n        console.warn(` { ${settingsKey}: \"${setting}\" } (converted to \"${convertedSetting}\" in the browser) is not supported for camera type \"${cameraType}\" in your browser. Using the default value instead.`);\n      }\n      return undefined;\n    }\n    return convertedSetting;\n  }\n});","lineCount":367,"map":[[27,2,6,0,"exports"],[27,9,6,0],[27,10,6,0,"getImageSize"],[27,22,6,0],[27,25,6,0,"getImageSize"],[27,37,6,0],[28,2,15,0,"exports"],[28,9,15,0],[28,10,15,0,"toDataURL"],[28,19,15,0],[28,22,15,0,"toDataURL"],[28,31,15,0],[29,2,27,0,"exports"],[29,9,27,0],[29,10,27,0,"hasValidConstraints"],[29,29,27,0],[29,32,27,0,"hasValidConstraints"],[29,51,27,0],[30,2,45,0,"exports"],[30,9,45,0],[30,10,45,0,"captureImageData"],[30,26,45,0],[30,29,45,0,"captureImageData"],[30,45,45,0],[31,2,57,0,"exports"],[31,9,57,0],[31,10,57,0,"captureImageContext"],[31,29,57,0],[31,32,57,0,"captureImageContext"],[31,51,57,0],[32,2,78,0,"exports"],[32,9,78,0],[32,10,78,0,"captureImage"],[32,22,78,0],[32,25,78,0,"captureImage"],[32,37,78,0],[33,2,90,0,"exports"],[33,9,90,0],[33,10,90,0,"getIdealConstraints"],[33,29,90,0],[33,32,90,0,"getIdealConstraints"],[33,51,90,0],[34,2,134,0,"exports"],[34,9,134,0],[34,10,134,0,"getPreferredStreamDevice"],[34,34,134,0],[34,37,134,0,"getPreferredStreamDevice"],[34,61,134,0],[35,2,148,0,"exports"],[35,9,148,0],[35,10,148,0,"getStreamDevice"],[35,25,148,0],[35,28,148,0,"getStreamDevice"],[35,43,148,0],[36,2,153,0,"exports"],[36,9,153,0],[36,10,153,0,"isWebKit"],[36,18,153,0],[36,21,153,0,"isWebKit"],[36,29,153,0],[37,2,156,0,"exports"],[37,9,156,0],[37,10,156,0,"compareStreams"],[37,24,156,0],[37,27,156,0,"compareStreams"],[37,41,156,0],[38,2,164,0,"exports"],[38,9,164,0],[38,10,164,0,"capture"],[38,17,164,0],[38,20,164,0,"capture"],[38,27,164,0],[39,2,184,0,"exports"],[39,9,184,0],[39,10,184,0,"syncTrackCapabilities"],[39,31,184,0],[39,34,184,0,"syncTrackCapabilities"],[39,55,184,0],[40,2,242,0,"exports"],[40,9,242,0],[40,10,242,0,"stopMediaStream"],[40,25,242,0],[40,28,242,0,"stopMediaStream"],[40,43,242,0],[41,2,256,0,"exports"],[41,9,256,0],[41,10,256,0,"setVideoSource"],[41,24,256,0],[41,27,256,0,"setVideoSource"],[41,41,256,0],[42,2,275,0,"exports"],[42,9,275,0],[42,10,275,0,"isCapabilityAvailable"],[42,31,275,0],[42,34,275,0,"isCapabilityAvailable"],[42,55,275,0],[43,2,2,0],[43,6,2,0,"_invariant"],[43,16,2,0],[43,19,2,0,"require"],[43,26,2,0],[43,27,2,0,"_dependencyMap"],[43,41,2,0],[44,2,2,0],[44,6,2,0,"invariant"],[44,15,2,0],[44,18,2,0,"_interopDefault"],[44,33,2,0],[44,34,2,0,"_invariant"],[44,44,2,0],[45,2,3,0],[45,6,3,0,"_WebCapabilityUtils"],[45,25,3,0],[45,28,3,0,"require"],[45,35,3,0],[45,36,3,0,"_dependencyMap"],[45,50,3,0],[46,2,3,0],[46,6,3,0,"CapabilityUtils"],[46,21,3,0],[46,24,3,0,"_interopNamespace"],[46,41,3,0],[46,42,3,0,"_WebCapabilityUtils"],[46,61,3,0],[47,2,4,0],[47,6,4,0,"_WebConstants"],[47,19,4,0],[47,22,4,0,"require"],[47,29,4,0],[47,30,4,0,"_dependencyMap"],[47,44,4,0],[48,2,5,0],[48,6,5,0,"_WebUserMediaManager"],[48,26,5,0],[48,29,5,0,"require"],[48,36,5,0],[48,37,5,0,"_dependencyMap"],[48,51,5,0],[49,2,1,0],[51,2,6,7],[51,11,6,16,"getImageSize"],[51,23,6,28,"getImageSize"],[51,24,6,29,"videoWidth"],[51,34,6,39],[51,36,6,41,"videoHeight"],[51,47,6,52],[51,49,6,54,"scale"],[51,54,6,59],[51,56,6,61],[52,4,7,4],[52,10,7,10,"width"],[52,15,7,15],[52,18,7,18,"videoWidth"],[52,28,7,28],[52,31,7,31,"scale"],[52,36,7,36],[53,4,8,4],[53,10,8,10,"ratio"],[53,15,8,15],[53,18,8,18,"videoWidth"],[53,28,8,28],[53,31,8,31,"width"],[53,36,8,36],[54,4,9,4],[54,10,9,10,"height"],[54,16,9,16],[54,19,9,19,"videoHeight"],[54,30,9,30],[54,33,9,33,"ratio"],[54,38,9,38],[55,4,10,4],[55,11,10,11],[56,6,11,8,"width"],[56,11,11,13],[57,6,12,8,"height"],[58,4,13,4],[58,5,13,5],[59,2,14,0],[60,2,15,7],[60,11,15,16,"toDataURL"],[60,20,15,25,"toDataURL"],[60,21,15,26,"canvas"],[60,27,15,32],[60,29,15,34,"imageType"],[60,38,15,43],[60,40,15,45,"quality"],[60,47,15,52],[60,49,15,54],[61,4,16,4],[61,10,16,10,"types"],[61,15,16,15],[61,18,16,18],[61,19,16,19],[61,24,16,24],[61,26,16,26],[61,31,16,31],[61,32,16,32],[62,4,17,4],[62,8,17,4,"invariant"],[62,17,17,13],[62,18,17,13,"default"],[62,25,17,13],[62,27,17,14,"types"],[62,32,17,19],[62,33,17,20,"includes"],[62,41,17,28],[62,42,17,29,"imageType"],[62,51,17,38],[62,52,17,39],[62,54,17,41],[62,70,17,57,"imageType"],[62,79,17,66],[62,133,17,120,"types"],[62,138,17,125],[62,139,17,126,"join"],[62,143,17,130],[62,144,17,131],[62,148,17,135],[62,149,17,136],[62,151,17,138],[62,152,17,139],[63,4,18,4],[63,10,18,10,"format"],[63,16,18,16],[63,19,18,19,"ImageTypeFormat"],[63,32,18,34],[63,33,18,34,"ImageTypeFormat"],[63,48,18,34],[63,49,18,35,"imageType"],[63,58,18,44],[63,59,18,45],[64,4,19,4],[64,8,19,8,"imageType"],[64,17,19,17],[64,22,19,22],[64,27,19,27],[64,29,19,29],[65,6,20,8],[65,10,20,8,"invariant"],[65,19,20,17],[65,20,20,17,"default"],[65,27,20,17],[65,29,20,18,"quality"],[65,36,20,25],[65,40,20,29],[65,41,20,30],[65,45,20,34,"quality"],[65,52,20,41],[65,56,20,45],[65,57,20,46],[65,59,20,48],[65,75,20,64,"quality"],[65,82,20,71],[65,143,20,132],[65,144,20,133],[66,6,21,8],[66,13,21,15,"canvas"],[66,19,21,21],[66,20,21,22,"toDataURL"],[66,29,21,31],[66,30,21,32,"format"],[66,36,21,38],[66,38,21,40,"quality"],[66,45,21,47],[66,46,21,48],[67,4,22,4],[67,5,22,5],[67,11,23,9],[68,6,24,8],[68,13,24,15,"canvas"],[68,19,24,21],[68,20,24,22,"toDataURL"],[68,29,24,31],[68,30,24,32,"format"],[68,36,24,38],[68,37,24,39],[69,4,25,4],[70,2,26,0],[71,2,27,7],[71,11,27,16,"hasValidConstraints"],[71,30,27,35,"hasValidConstraints"],[71,31,27,36,"preferredCameraType"],[71,50,27,55],[71,52,27,57,"width"],[71,57,27,62],[71,59,27,64,"height"],[71,65,27,70],[71,67,27,72],[72,4,28,4],[72,11,28,11,"preferredCameraType"],[72,30,28,30],[72,35,28,35,"undefined"],[72,44,28,44],[72,48,28,48,"width"],[72,53,28,53],[72,58,28,58,"undefined"],[72,67,28,67],[72,71,28,71,"height"],[72,77,28,77],[72,82,28,82,"undefined"],[72,91,28,91],[73,2,29,0],[74,2,30,0],[74,11,30,9,"ensureCameraPictureOptions"],[74,37,30,35,"ensureCameraPictureOptions"],[74,38,30,36,"config"],[74,44,30,42],[74,46,30,44],[75,4,31,4],[75,10,31,10,"captureOptions"],[75,24,31,24],[75,27,31,27],[76,6,32,8,"scale"],[76,11,32,13],[76,13,32,15],[76,14,32,16],[77,6,33,8,"imageType"],[77,15,33,17],[77,17,33,19],[77,22,33,24],[78,6,34,8,"isImageMirror"],[78,19,34,21],[78,21,34,23],[79,4,35,4],[79,5,35,5],[80,4,36,4],[80,9,36,9],[80,15,36,15,"key"],[80,18,36,18],[80,22,36,22,"config"],[80,28,36,28],[80,30,36,30],[81,6,37,8],[81,12,37,14,"prop"],[81,16,37,18],[81,19,37,21,"key"],[81,22,37,24],[82,6,38,8],[82,10,38,12,"prop"],[82,14,38,16],[82,18,38,20,"config"],[82,24,38,26],[82,28,38,30,"config"],[82,34,38,36],[82,35,38,37,"prop"],[82,39,38,41],[82,40,38,42],[82,45,38,47,"undefined"],[82,54,38,56],[82,58,38,60,"prop"],[82,62,38,64],[82,66,38,68,"captureOptions"],[82,80,38,82],[82,82,38,84],[83,8,39,12,"captureOptions"],[83,22,39,26],[83,23,39,27,"prop"],[83,27,39,31],[83,28,39,32],[83,31,39,35,"config"],[83,37,39,41],[83,38,39,42,"prop"],[83,42,39,46],[83,43,39,47],[84,6,40,8],[85,4,41,4],[86,4,42,4],[86,11,42,11,"captureOptions"],[86,25,42,25],[87,2,43,0],[88,2,44,0],[88,8,44,6,"DEFAULT_QUALITY"],[88,23,44,21],[88,26,44,24],[88,30,44,28],[89,2,45,7],[89,11,45,16,"captureImageData"],[89,27,45,32,"captureImageData"],[89,28,45,33,"video"],[89,33,45,38],[89,35,45,40,"pictureOptions"],[89,49,45,54],[89,52,45,57],[89,53,45,58],[89,54,45,59],[89,56,45,61],[90,4,46,4],[90,8,46,8],[90,9,46,9,"video"],[90,14,46,14],[90,18,46,18,"video"],[90,23,46,23],[90,24,46,24,"readyState"],[90,34,46,34],[90,39,46,39,"video"],[90,44,46,44],[90,45,46,45,"HAVE_ENOUGH_DATA"],[90,61,46,61],[90,63,46,63],[91,6,47,8],[91,13,47,15],[91,17,47,19],[92,4,48,4],[93,4,49,4],[93,10,49,10,"canvas"],[93,16,49,16],[93,19,49,19,"captureImageContext"],[93,38,49,38],[93,39,49,39,"video"],[93,44,49,44],[93,46,49,46,"pictureOptions"],[93,60,49,60],[93,61,49,61],[94,4,50,4],[94,10,50,10,"context"],[94,17,50,17],[94,20,50,20,"canvas"],[94,26,50,26],[94,27,50,27,"getContext"],[94,37,50,37],[94,38,50,38],[94,42,50,42],[94,44,50,44],[95,6,50,46,"alpha"],[95,11,50,51],[95,13,50,53],[96,4,50,59],[96,5,50,60],[96,6,50,61],[97,4,51,4],[97,8,51,8],[97,9,51,9,"context"],[97,16,51,16],[97,20,51,20],[97,21,51,21,"canvas"],[97,27,51,27],[97,28,51,28,"width"],[97,33,51,33],[97,37,51,37],[97,38,51,38,"canvas"],[97,44,51,44],[97,45,51,45,"height"],[97,51,51,51],[97,53,51,53],[98,6,52,8],[98,13,52,15],[98,17,52,19],[99,4,53,4],[100,4,54,4],[100,10,54,10,"imageData"],[100,19,54,19],[100,22,54,22,"context"],[100,29,54,29],[100,30,54,30,"getImageData"],[100,42,54,42],[100,43,54,43],[100,44,54,44],[100,46,54,46],[100,47,54,47],[100,49,54,49,"canvas"],[100,55,54,55],[100,56,54,56,"width"],[100,61,54,61],[100,63,54,63,"canvas"],[100,69,54,69],[100,70,54,70,"height"],[100,76,54,76],[100,77,54,77],[101,4,55,4],[101,11,55,11,"imageData"],[101,20,55,20],[102,2,56,0],[103,2,57,7],[103,11,57,16,"captureImageContext"],[103,30,57,35,"captureImageContext"],[103,31,57,36,"video"],[103,36,57,41],[103,38,57,43],[104,4,57,45,"scale"],[104,9,57,50],[104,12,57,53],[104,13,57,54],[105,4,57,56,"isImageMirror"],[105,17,57,69],[105,20,57,72],[106,2,57,78],[106,3,57,79],[106,5,57,81],[107,4,58,4],[107,10,58,10],[108,6,58,12,"videoWidth"],[108,16,58,22],[109,6,58,24,"videoHeight"],[110,4,58,36],[110,5,58,37],[110,8,58,40,"video"],[110,13,58,45],[111,4,59,4],[111,10,59,10],[112,6,59,12,"width"],[112,11,59,17],[113,6,59,19,"height"],[114,4,59,26],[114,5,59,27],[114,8,59,30,"getImageSize"],[114,20,59,42],[114,21,59,43,"videoWidth"],[114,31,59,53],[114,33,59,55,"videoHeight"],[114,44,59,66],[114,46,59,68,"scale"],[114,51,59,73],[114,52,59,74],[115,4,60,4],[116,4,61,4],[116,10,61,10,"canvas"],[116,16,61,16],[116,19,61,19,"document"],[116,27,61,27],[116,28,61,28,"createElement"],[116,41,61,41],[116,42,61,42],[116,50,61,50],[116,51,61,51],[117,4,62,4,"canvas"],[117,10,62,10],[117,11,62,11,"width"],[117,16,62,16],[117,19,62,19,"width"],[117,24,62,24],[118,4,63,4,"canvas"],[118,10,63,10],[118,11,63,11,"height"],[118,17,63,17],[118,20,63,20,"height"],[118,26,63,26],[119,4,64,4],[119,10,64,10,"context"],[119,17,64,17],[119,20,64,20,"canvas"],[119,26,64,26],[119,27,64,27,"getContext"],[119,37,64,37],[119,38,64,38],[119,42,64,42],[119,44,64,44],[120,6,64,46,"alpha"],[120,11,64,51],[120,13,64,53],[121,4,64,59],[121,5,64,60],[121,6,64,61],[122,4,65,4],[122,8,65,8],[122,9,65,9,"context"],[122,16,65,16],[122,18,65,18],[123,6,66,8],[124,6,67,8],[124,12,67,14],[124,16,67,18,"Error"],[124,21,67,23],[124,22,67,24],[124,46,67,48],[124,47,67,49],[125,4,68,4],[126,4,69,4],[127,4,70,4],[128,4,71,4],[129,4,72,4],[129,8,72,8,"isImageMirror"],[129,21,72,21],[129,23,72,23],[130,6,73,8,"context"],[130,13,73,15],[130,14,73,16,"setTransform"],[130,26,73,28],[130,27,73,29],[130,28,73,30],[130,29,73,31],[130,31,73,33],[130,32,73,34],[130,34,73,36],[130,35,73,37],[130,37,73,39],[130,38,73,40],[130,40,73,42,"canvas"],[130,46,73,48],[130,47,73,49,"width"],[130,52,73,54],[130,54,73,56],[130,55,73,57],[130,56,73,58],[131,4,74,4],[132,4,75,4,"context"],[132,11,75,11],[132,12,75,12,"drawImage"],[132,21,75,21],[132,22,75,22,"video"],[132,27,75,27],[132,29,75,29],[132,30,75,30],[132,32,75,32],[132,33,75,33],[132,35,75,35,"width"],[132,40,75,40],[132,42,75,42,"height"],[132,48,75,48],[132,49,75,49],[133,4,76,4],[133,11,76,11,"canvas"],[133,17,76,17],[134,2,77,0],[135,2,78,7],[135,11,78,16,"captureImage"],[135,23,78,28,"captureImage"],[135,24,78,29,"video"],[135,29,78,34],[135,31,78,36,"pictureOptions"],[135,45,78,50],[135,47,78,52],[136,4,79,4],[136,10,79,10,"config"],[136,16,79,16],[136,19,79,19,"ensureCameraPictureOptions"],[136,45,79,45],[136,46,79,46,"pictureOptions"],[136,60,79,60],[136,61,79,61],[137,4,80,4],[137,10,80,10,"canvas"],[137,16,80,16],[137,19,80,19,"captureImageContext"],[137,38,80,38],[137,39,80,39,"video"],[137,44,80,44],[137,46,80,46,"config"],[137,52,80,52],[137,53,80,53],[138,4,81,4],[138,10,81,10],[139,6,81,12,"imageType"],[139,15,81,21],[140,6,81,23,"quality"],[140,13,81,30],[140,16,81,33,"DEFAULT_QUALITY"],[141,4,81,49],[141,5,81,50],[141,8,81,53,"config"],[141,14,81,59],[142,4,82,4],[142,11,82,11,"toDataURL"],[142,20,82,20],[142,21,82,21,"canvas"],[142,27,82,27],[142,29,82,29,"imageType"],[142,38,82,38],[142,40,82,40,"quality"],[142,47,82,47],[142,48,82,48],[143,2,83,0],[144,2,84,0],[144,11,84,9,"getSupportedConstraints"],[144,34,84,32,"getSupportedConstraints"],[144,35,84,32],[144,37,84,35],[145,4,85,4],[145,8,85,8,"navigator"],[145,17,85,17],[145,18,85,18,"mediaDevices"],[145,30,85,30],[145,34,85,34,"navigator"],[145,43,85,43],[145,44,85,44,"mediaDevices"],[145,56,85,56],[145,57,85,57,"getSupportedConstraints"],[145,80,85,80],[145,82,85,82],[146,6,86,8],[146,13,86,15,"navigator"],[146,22,86,24],[146,23,86,25,"mediaDevices"],[146,35,86,37],[146,36,86,38,"getSupportedConstraints"],[146,59,86,61],[146,60,86,62],[146,61,86,63],[147,4,87,4],[148,4,88,4],[148,11,88,11],[148,15,88,15],[149,2,89,0],[150,2,90,7],[150,11,90,16,"getIdealConstraints"],[150,30,90,35,"getIdealConstraints"],[150,31,90,36,"preferredCameraType"],[150,50,90,55],[150,52,90,57,"width"],[150,57,90,62],[150,59,90,64,"height"],[150,65,90,70],[150,67,90,72],[151,4,91,4],[151,10,91,10,"preferredConstraints"],[151,30,91,30],[151,33,91,33],[152,6,92,8,"audio"],[152,11,92,13],[152,13,92,15],[152,18,92,20],[153,6,93,8,"video"],[153,11,93,13],[153,13,93,15],[153,14,93,16],[154,4,94,4],[154,5,94,5],[155,4,95,4],[155,8,95,8,"hasValidConstraints"],[155,27,95,27],[155,28,95,28,"preferredCameraType"],[155,47,95,47],[155,49,95,49,"width"],[155,54,95,54],[155,56,95,56,"height"],[155,62,95,62],[155,63,95,63],[155,65,95,65],[156,6,96,8],[156,13,96,15,"MinimumConstraints"],[156,26,96,33],[156,27,96,33,"MinimumConstraints"],[156,45,96,33],[157,4,97,4],[158,4,98,4],[158,10,98,10,"supports"],[158,18,98,18],[158,21,98,21,"getSupportedConstraints"],[158,44,98,44],[158,45,98,45],[158,46,98,46],[159,4,99,4],[160,4,100,4],[160,8,100,8],[160,9,100,9,"supports"],[160,17,100,17],[160,21,100,21],[160,22,100,22,"supports"],[160,30,100,30],[160,31,100,31,"facingMode"],[160,41,100,41],[160,45,100,45],[160,46,100,46,"supports"],[160,54,100,54],[160,55,100,55,"width"],[160,60,100,60],[160,64,100,64],[160,65,100,65,"supports"],[160,73,100,73],[160,74,100,74,"height"],[160,80,100,80],[160,82,100,82],[161,6,101,8],[161,13,101,15,"MinimumConstraints"],[161,26,101,33],[161,27,101,33,"MinimumConstraints"],[161,45,101,33],[162,4,102,4],[163,4,103,4],[163,10,103,10,"types"],[163,15,103,15],[163,18,103,18],[163,19,103,19],[163,26,103,26],[163,28,103,28],[163,34,103,34],[163,35,103,35],[164,4,104,4],[164,8,104,8,"preferredCameraType"],[164,27,104,27],[164,31,104,31,"types"],[164,36,104,36],[164,37,104,37,"includes"],[164,45,104,45],[164,46,104,46,"preferredCameraType"],[164,65,104,65],[164,66,104,66],[164,68,104,68],[165,6,105,8],[165,12,105,14,"facingMode"],[165,22,105,24],[165,25,105,27,"CameraTypeToFacingMode"],[165,38,105,49],[165,39,105,49,"CameraTypeToFacingMode"],[165,61,105,49],[165,62,105,50,"preferredCameraType"],[165,81,105,69],[165,82,105,70],[166,6,106,8],[166,10,106,12,"isWebKit"],[166,18,106,20],[166,19,106,21],[166,20,106,22],[166,22,106,24],[167,8,107,12],[167,14,107,18,"key"],[167,17,107,21],[167,20,107,24,"facingMode"],[167,30,107,34],[167,35,107,39],[167,41,107,45],[167,44,107,48],[167,51,107,55],[167,54,107,58],[167,61,107,65],[168,8,108,12,"preferredConstraints"],[168,28,108,32],[168,29,108,33,"video"],[168,34,108,38],[168,35,108,39,"facingMode"],[168,45,108,49],[168,48,108,52],[169,10,109,16],[169,11,109,17,"key"],[169,14,109,20],[169,17,109,23,"facingMode"],[170,8,110,12],[170,9,110,13],[171,6,111,8],[171,7,111,9],[171,13,112,13],[172,8,113,12,"preferredConstraints"],[172,28,113,32],[172,29,113,33,"video"],[172,34,113,38],[172,35,113,39,"facingMode"],[172,45,113,49],[172,48,113,52],[173,10,114,16,"ideal"],[173,15,114,21],[173,17,114,23,"CameraTypeToFacingMode"],[173,30,114,45],[173,31,114,45,"CameraTypeToFacingMode"],[173,53,114,45],[173,54,114,46,"preferredCameraType"],[173,73,114,65],[174,8,115,12],[174,9,115,13],[175,6,116,8],[176,4,117,4],[177,4,118,4],[177,8,118,8,"isMediaTrackConstraints"],[177,31,118,31],[177,32,118,32,"preferredConstraints"],[177,52,118,52],[177,53,118,53,"video"],[177,58,118,58],[177,59,118,59],[177,61,118,61],[178,6,119,8,"preferredConstraints"],[178,26,119,28],[178,27,119,29,"video"],[178,32,119,34],[178,33,119,35,"width"],[178,38,119,40],[178,41,119,43,"width"],[178,46,119,48],[179,6,120,8,"preferredConstraints"],[179,26,120,28],[179,27,120,29,"video"],[179,32,120,34],[179,33,120,35,"height"],[179,39,120,41],[179,42,120,44,"height"],[179,48,120,50],[180,4,121,4],[181,4,122,4],[181,11,122,11,"preferredConstraints"],[181,31,122,31],[182,2,123,0],[183,2,124,0],[183,11,124,9,"isMediaTrackConstraints"],[183,34,124,32,"isMediaTrackConstraints"],[183,35,124,33,"input"],[183,40,124,38],[183,42,124,40],[184,4,125,4],[184,11,125,11,"input"],[184,16,125,16],[184,20,125,20],[184,27,125,27,"input"],[184,32,125,32],[184,33,125,33,"video"],[184,38,125,38],[184,43,125,43],[184,52,125,52],[185,2,126,0],[186,2,127,0],[187,0,128,0],[188,0,129,0],[189,0,130,0],[190,0,131,0],[191,0,132,0],[192,0,133,0],[193,2,134,7],[193,17,134,22,"getPreferredStreamDevice"],[193,41,134,46,"getPreferredStreamDevice"],[193,42,134,47,"preferredCameraType"],[193,61,134,66],[193,63,134,68,"preferredWidth"],[193,77,134,82],[193,79,134,84,"preferredHeight"],[193,94,134,99],[193,96,134,101],[194,4,135,4],[194,8,135,8],[195,6,136,8],[195,13,136,15],[195,19,136,21,"getStreamDevice"],[195,34,136,36],[195,35,136,37,"preferredCameraType"],[195,54,136,56],[195,56,136,58,"preferredWidth"],[195,70,136,72],[195,72,136,74,"preferredHeight"],[195,87,136,89],[195,88,136,90],[196,4,137,4],[196,5,137,5],[196,6,138,4],[196,13,138,11,"error"],[196,18,138,16],[196,20,138,18],[197,6,139,8],[198,6,140,8],[199,6,141,8],[199,10,141,12,"error"],[199,15,141,17],[199,27,141,29,"OverconstrainedError"],[199,47,141,49],[199,51,141,53,"error"],[199,56,141,58],[199,57,141,59,"constraint"],[199,67,141,69],[199,72,141,74],[199,84,141,86],[199,86,141,88],[200,8,142,12],[200,14,142,18,"nextCameraType"],[200,28,142,32],[200,31,142,35,"preferredCameraType"],[200,50,142,54],[200,55,142,59],[200,61,142,65],[200,64,142,68],[200,71,142,75],[200,74,142,78],[200,80,142,84],[201,8,143,12],[201,15,143,19],[201,21,143,25,"getStreamDevice"],[201,36,143,40],[201,37,143,41,"nextCameraType"],[201,51,143,55],[201,53,143,57,"preferredWidth"],[201,67,143,71],[201,69,143,73,"preferredHeight"],[201,84,143,88],[201,85,143,89],[202,6,144,8],[203,6,145,8],[203,12,145,14,"error"],[203,17,145,19],[204,4,146,4],[205,2,147,0],[206,2,148,7],[206,17,148,22,"getStreamDevice"],[206,32,148,37,"getStreamDevice"],[206,33,148,38,"preferredCameraType"],[206,52,148,57],[206,54,148,59,"preferredWidth"],[206,68,148,73],[206,70,148,75,"preferredHeight"],[206,85,148,90],[206,87,148,92],[207,4,149,4],[207,10,149,10,"constraints"],[207,21,149,21],[207,24,149,24,"getIdealConstraints"],[207,43,149,43],[207,44,149,44,"preferredCameraType"],[207,63,149,63],[207,65,149,65,"preferredWidth"],[207,79,149,79],[207,81,149,81,"preferredHeight"],[207,96,149,96],[207,97,149,97],[208,4,150,4],[208,10,150,10,"stream"],[208,16,150,16],[208,19,150,19],[208,25,150,25],[208,29,150,25,"requestUserMediaAsync"],[208,49,150,46],[208,50,150,46,"requestUserMediaAsync"],[208,71,150,46],[208,73,150,47,"constraints"],[208,84,150,58],[208,85,150,59],[209,4,151,4],[209,11,151,11,"stream"],[209,17,151,17],[210,2,152,0],[211,2,153,7],[211,11,153,16,"isWebKit"],[211,19,153,24,"isWebKit"],[211,20,153,24],[211,22,153,27],[212,4,154,4],[212,11,154,11],[212,19,154,19],[212,20,154,20,"test"],[212,24,154,24],[212,25,154,25,"navigator"],[212,34,154,34],[212,35,154,35,"userAgent"],[212,44,154,44],[212,45,154,45],[212,49,154,49],[212,50,154,50],[212,55,154,55],[212,56,154,56,"test"],[212,60,154,60],[212,61,154,61,"navigator"],[212,70,154,70],[212,71,154,71,"userAgent"],[212,80,154,80],[212,81,154,81],[213,2,155,0],[214,2,156,7],[214,11,156,16,"compareStreams"],[214,25,156,30,"compareStreams"],[214,26,156,31,"a"],[214,27,156,32],[214,29,156,34,"b"],[214,30,156,35],[214,32,156,37],[215,4,157,4],[215,8,157,8],[215,9,157,9,"a"],[215,10,157,10],[215,14,157,14],[215,15,157,15,"b"],[215,16,157,16],[215,18,157,18],[216,6,158,8],[216,13,158,15],[216,18,158,20],[217,4,159,4],[218,4,160,4],[218,10,160,10,"settingsA"],[218,19,160,19],[218,22,160,22,"a"],[218,23,160,23],[218,24,160,24,"getTracks"],[218,33,160,33],[218,34,160,34],[218,35,160,35],[218,36,160,36],[218,37,160,37],[218,38,160,38],[218,39,160,39,"getSettings"],[218,50,160,50],[218,51,160,51],[218,52,160,52],[219,4,161,4],[219,10,161,10,"settingsB"],[219,19,161,19],[219,22,161,22,"b"],[219,23,161,23],[219,24,161,24,"getTracks"],[219,33,161,33],[219,34,161,34],[219,35,161,35],[219,36,161,36],[219,37,161,37],[219,38,161,38],[219,39,161,39,"getSettings"],[219,50,161,50],[219,51,161,51],[219,52,161,52],[220,4,162,4],[220,11,162,11,"settingsA"],[220,20,162,20],[220,21,162,21,"deviceId"],[220,29,162,29],[220,34,162,34,"settingsB"],[220,43,162,43],[220,44,162,44,"deviceId"],[220,52,162,52],[221,2,163,0],[222,2,164,7],[222,11,164,16,"capture"],[222,18,164,23,"capture"],[222,19,164,24,"video"],[222,24,164,29],[222,26,164,31,"settings"],[222,34,164,39],[222,36,164,41,"config"],[222,42,164,47],[222,44,164,49],[223,4,165,4],[223,10,165,10,"base64"],[223,16,165,16],[223,19,165,19,"captureImage"],[223,31,165,31],[223,32,165,32,"video"],[223,37,165,37],[223,39,165,39,"config"],[223,45,165,45],[223,46,165,46],[224,4,166,4],[224,10,166,10,"capturedPicture"],[224,25,166,25],[224,28,166,28],[225,6,167,8,"uri"],[225,9,167,11],[225,11,167,13,"base64"],[225,17,167,19],[226,6,168,8,"base64"],[226,12,168,14],[227,6,169,8,"width"],[227,11,169,13],[227,13,169,15],[227,14,169,16],[228,6,170,8,"height"],[228,12,170,14],[228,14,170,16],[228,15,170,17],[229,6,171,8,"format"],[229,12,171,14],[229,14,171,16,"config"],[229,20,171,22],[229,21,171,23,"imageType"],[229,30,171,32],[229,34,171,36],[230,4,172,4],[230,5,172,5],[231,4,173,4],[231,8,173,8,"settings"],[231,16,173,16],[231,18,173,18],[232,6,174,8],[232,12,174,14],[233,8,174,16,"width"],[233,13,174,21],[233,16,174,24],[233,17,174,25],[234,8,174,27,"height"],[234,14,174,33],[234,17,174,36],[235,6,174,38],[235,7,174,39],[235,10,174,42,"settings"],[235,18,174,50],[236,6,175,8,"capturedPicture"],[236,21,175,23],[236,22,175,24,"width"],[236,27,175,29],[236,30,175,32,"width"],[236,35,175,37],[237,6,176,8,"capturedPicture"],[237,21,176,23],[237,22,176,24,"height"],[237,28,176,30],[237,31,176,33,"height"],[237,37,176,39],[238,6,177,8,"capturedPicture"],[238,21,177,23],[238,22,177,24,"exif"],[238,26,177,28],[238,29,177,31,"settings"],[238,37,177,39],[239,4,178,4],[240,4,179,4],[240,8,179,8,"config"],[240,14,179,14],[240,15,179,15,"onPictureSaved"],[240,29,179,29],[240,31,179,31],[241,6,180,8,"config"],[241,12,180,14],[241,13,180,15,"onPictureSaved"],[241,27,180,29],[241,28,180,30,"capturedPicture"],[241,43,180,45],[241,44,180,46],[242,4,181,4],[243,4,182,4],[243,11,182,11,"capturedPicture"],[243,26,182,26],[244,2,183,0],[245,2,184,7],[245,17,184,22,"syncTrackCapabilities"],[245,38,184,43,"syncTrackCapabilities"],[245,39,184,44,"cameraType"],[245,49,184,54],[245,51,184,56,"stream"],[245,57,184,62],[245,59,184,64,"settings"],[245,67,184,72],[245,70,184,75],[245,71,184,76],[245,72,184,77],[245,74,184,79],[246,4,185,4],[246,8,185,8,"stream"],[246,14,185,14],[246,16,185,16,"getVideoTracks"],[246,30,185,30],[246,32,185,32],[247,6,186,8],[247,12,186,14,"Promise"],[247,19,186,21],[247,20,186,22,"all"],[247,23,186,25],[247,24,186,26,"stream"],[247,30,186,32],[247,31,186,33,"getVideoTracks"],[247,45,186,47],[247,46,186,48],[247,47,186,49],[247,48,186,50,"map"],[247,51,186,53],[247,52,186,55,"track"],[247,57,186,60],[247,61,186,65,"onCapabilitiesReady"],[247,80,186,84],[247,81,186,85,"cameraType"],[247,91,186,95],[247,93,186,97,"track"],[247,98,186,102],[247,100,186,104,"settings"],[247,108,186,112],[247,109,186,113],[247,110,186,114],[247,111,186,115],[248,4,187,4],[249,2,188,0],[250,2,189,0],[251,2,190,0],[251,17,190,15,"onCapabilitiesReady"],[251,36,190,34,"onCapabilitiesReady"],[251,37,190,35,"cameraType"],[251,47,190,45],[251,49,190,47,"track"],[251,54,190,52],[251,56,190,54,"settings"],[251,64,190,62],[251,67,190,65],[251,68,190,66],[251,69,190,67],[251,71,190,69],[252,4,191,4],[252,8,191,8],[252,15,191,15,"track"],[252,20,191,20],[252,21,191,21,"getCapabilities"],[252,36,191,36],[252,41,191,41],[252,51,191,51],[252,53,191,53],[253,6,192,8],[254,4,193,4],[255,4,194,4],[255,10,194,10,"capabilities"],[255,22,194,22],[255,25,194,25,"track"],[255,30,194,30],[255,31,194,31,"getCapabilities"],[255,46,194,46],[255,47,194,47],[255,48,194,48],[256,4,195,4],[257,4,196,4],[257,10,196,10,"constraints"],[257,21,196,21],[257,24,196,24],[257,25,196,25],[257,26,196,26],[258,4,197,4],[259,4,198,4],[259,10,198,10,"clampedValues"],[259,23,198,23],[259,26,198,26],[259,27,199,8],[259,49,199,30],[259,51,200,8],[259,69,200,26],[259,71,201,8],[259,76,201,13],[259,78,202,8],[259,90,202,20],[259,92,203,8],[259,102,203,18],[259,104,204,8],[259,116,204,20],[259,118,205,8],[259,129,205,19],[259,131,206,8],[259,146,206,23],[259,148,207,8],[259,154,207,14],[259,155,208,5],[260,4,209,4],[260,9,209,9],[260,15,209,15,"property"],[260,23,209,23],[260,27,209,27,"clampedValues"],[260,40,209,40],[260,42,209,42],[261,6,210,8],[261,10,210,12,"capabilities"],[261,22,210,24],[261,23,210,25,"property"],[261,31,210,33],[261,32,210,34],[261,34,210,36],[262,8,211,12,"constraints"],[262,19,211,23],[262,20,211,24,"property"],[262,28,211,32],[262,29,211,33],[262,32,211,36,"convertNormalizedSetting"],[262,56,211,60],[262,57,211,61,"capabilities"],[262,69,211,73],[262,70,211,74,"property"],[262,78,211,82],[262,79,211,83],[262,81,211,85,"settings"],[262,89,211,93],[262,90,211,94,"property"],[262,98,211,102],[262,99,211,103],[262,100,211,104],[263,6,212,8],[264,4,213,4],[265,4,214,4],[265,13,214,13,"validatedInternalConstrainedValue"],[265,46,214,46,"validatedInternalConstrainedValue"],[265,47,214,47,"constraintKey"],[265,60,214,60],[265,62,214,62,"settingsKey"],[265,73,214,73],[265,75,214,75,"converter"],[265,84,214,84],[265,86,214,86],[266,6,215,8],[266,12,215,14,"convertedSetting"],[266,28,215,30],[266,31,215,33,"converter"],[266,40,215,42],[266,41,215,43,"settings"],[266,49,215,51],[266,50,215,52,"settingsKey"],[266,61,215,63],[266,62,215,64],[266,63,215,65],[267,6,216,8],[267,13,216,15,"validatedConstrainedValue"],[267,38,216,40],[267,39,216,41],[268,8,217,12,"constraintKey"],[268,21,217,25],[269,8,218,12,"settingsKey"],[269,19,218,23],[270,8,219,12,"convertedSetting"],[270,24,219,28],[271,8,220,12,"capabilities"],[271,20,220,24],[272,8,221,12,"settings"],[272,16,221,20],[273,8,222,12,"cameraType"],[274,6,223,8],[274,7,223,9],[274,8,223,10],[275,4,224,4],[276,4,225,4],[276,8,225,8,"capabilities"],[276,20,225,20],[276,21,225,21,"focusMode"],[276,30,225,30],[276,34,225,34,"settings"],[276,42,225,42],[276,43,225,43,"autoFocus"],[276,52,225,52],[276,57,225,57,"undefined"],[276,66,225,66],[276,68,225,68],[277,6,226,8,"constraints"],[277,17,226,19],[277,18,226,20,"focusMode"],[277,27,226,29],[277,30,226,32,"validatedInternalConstrainedValue"],[277,63,226,65],[277,64,226,66],[277,75,226,77],[277,77,226,79],[277,88,226,90],[277,90,226,92,"CapabilityUtils"],[277,105,226,107],[277,106,226,108,"convertAutoFocusJSONToNative"],[277,134,226,136],[277,135,226,137],[278,4,227,4],[279,4,228,4],[279,8,228,8,"capabilities"],[279,20,228,20],[279,21,228,21,"torch"],[279,26,228,26],[279,30,228,30,"settings"],[279,38,228,38],[279,39,228,39,"flashMode"],[279,48,228,48],[279,53,228,53,"undefined"],[279,62,228,62],[279,64,228,64],[280,6,229,8,"constraints"],[280,17,229,19],[280,18,229,20,"torch"],[280,23,229,25],[280,26,229,28,"validatedInternalConstrainedValue"],[280,59,229,61],[280,60,229,62],[280,67,229,69],[280,69,229,71],[280,80,229,82],[280,82,229,84,"CapabilityUtils"],[280,97,229,99],[280,98,229,100,"convertFlashModeJSONToNative"],[280,126,229,128],[280,127,229,129],[281,4,230,4],[282,4,231,4],[282,8,231,8,"capabilities"],[282,20,231,20],[282,21,231,21,"whiteBalanceMode"],[282,37,231,37],[282,41,231,41,"settings"],[282,49,231,49],[282,50,231,50,"whiteBalance"],[282,62,231,62],[282,67,231,67,"undefined"],[282,76,231,76],[282,78,231,78],[283,6,232,8,"constraints"],[283,17,232,19],[283,18,232,20,"whiteBalanceMode"],[283,34,232,36],[283,37,232,39,"validatedInternalConstrainedValue"],[283,70,232,72],[283,71,232,73],[283,89,232,91],[283,91,232,93],[283,105,232,107],[283,107,232,109,"CapabilityUtils"],[283,122,232,124],[283,123,232,125,"convertWhiteBalanceJSONToNative"],[283,154,232,156],[283,155,232,157],[284,4,233,4],[285,4,234,4],[285,8,234,8],[286,6,235,8],[286,12,235,14,"track"],[286,17,235,19],[286,18,235,20,"applyConstraints"],[286,34,235,36],[286,35,235,37],[287,8,235,39,"advanced"],[287,16,235,47],[287,18,235,49],[287,19,235,50,"constraints"],[287,30,235,61],[288,6,235,63],[288,7,235,64],[288,8,235,65],[289,4,236,4],[289,5,236,5],[289,6,237,4],[289,13,237,11,"error"],[289,18,237,16],[289,20,237,18],[290,6,238,8],[290,10,238,12,"__DEV__"],[290,17,238,19],[290,19,239,12,"console"],[290,26,239,19],[290,27,239,20,"warn"],[290,31,239,24],[290,32,239,25],[290,61,239,54],[290,63,239,56,"error"],[290,68,239,61],[290,69,239,62],[291,4,240,4],[292,2,241,0],[293,2,242,7],[293,11,242,16,"stopMediaStream"],[293,26,242,31,"stopMediaStream"],[293,27,242,32,"stream"],[293,33,242,38],[293,35,242,40],[294,4,243,4],[294,8,243,8],[294,9,243,9,"stream"],[294,15,243,15],[294,17,243,17],[295,6,244,8],[296,4,245,4],[297,4,246,4],[297,8,246,8,"stream"],[297,14,246,14],[297,15,246,15,"getAudioTracks"],[297,29,246,29],[297,31,246,31],[298,6,247,8,"stream"],[298,12,247,14],[298,13,247,15,"getAudioTracks"],[298,27,247,29],[298,28,247,30],[298,29,247,31],[298,30,247,32,"forEach"],[298,37,247,39],[298,38,247,41,"track"],[298,43,247,46],[298,47,247,51,"track"],[298,52,247,56],[298,53,247,57,"stop"],[298,57,247,61],[298,58,247,62],[298,59,247,63],[298,60,247,64],[299,4,248,4],[300,4,249,4],[300,8,249,8,"stream"],[300,14,249,14],[300,15,249,15,"getVideoTracks"],[300,29,249,29],[300,31,249,31],[301,6,250,8,"stream"],[301,12,250,14],[301,13,250,15,"getVideoTracks"],[301,27,250,29],[301,28,250,30],[301,29,250,31],[301,30,250,32,"forEach"],[301,37,250,39],[301,38,250,41,"track"],[301,43,250,46],[301,47,250,51,"track"],[301,52,250,56],[301,53,250,57,"stop"],[301,57,250,61],[301,58,250,62],[301,59,250,63],[301,60,250,64],[302,4,251,4],[303,4,252,4],[303,8,252,8,"isMediaStreamTrack"],[303,26,252,26],[303,27,252,27,"stream"],[303,33,252,33],[303,34,252,34],[303,36,252,36],[304,6,253,8,"stream"],[304,12,253,14],[304,13,253,15,"stop"],[304,17,253,19],[304,18,253,20],[304,19,253,21],[305,4,254,4],[306,2,255,0],[307,2,256,7],[307,11,256,16,"setVideoSource"],[307,25,256,30,"setVideoSource"],[307,26,256,31,"video"],[307,31,256,36],[307,33,256,38,"stream"],[307,39,256,44],[307,41,256,46],[308,4,257,4],[308,10,257,10,"createObjectURL"],[308,25,257,25],[308,28,257,28,"window"],[308,34,257,34],[308,35,257,35,"URL"],[308,38,257,38],[308,39,257,39,"createObjectURL"],[308,54,257,54],[308,58,257,58,"window"],[308,64,257,64],[308,65,257,65,"webkitURL"],[308,74,257,74],[308,75,257,75,"createObjectURL"],[308,90,257,90],[309,4,258,4],[309,8,258,8],[309,15,258,15,"video"],[309,20,258,20],[309,21,258,21,"srcObject"],[309,30,258,30],[309,35,258,35],[309,46,258,46],[309,48,258,48],[310,6,259,8,"video"],[310,11,259,13],[310,12,259,14,"srcObject"],[310,21,259,23],[310,24,259,26,"stream"],[310,30,259,32],[311,4,260,4],[311,5,260,5],[311,11,261,9],[311,15,261,13],[311,22,261,20,"video"],[311,27,261,25],[311,28,261,26,"mozSrcObject"],[311,40,261,38],[311,45,261,43],[311,56,261,54],[311,58,261,56],[312,6,262,8,"video"],[312,11,262,13],[312,12,262,14,"mozSrcObject"],[312,24,262,26],[312,27,262,29,"stream"],[312,33,262,35],[313,4,263,4],[313,5,263,5],[313,11,264,9],[313,15,264,13,"stream"],[313,21,264,19],[313,25,264,23,"createObjectURL"],[313,40,264,38],[313,42,264,40],[314,6,265,8,"video"],[314,11,265,13],[314,12,265,14,"src"],[314,15,265,17],[314,18,265,20,"createObjectURL"],[314,33,265,35],[314,34,265,36,"stream"],[314,40,265,42],[314,41,265,43],[315,4,266,4],[316,4,267,4],[316,8,267,8],[316,9,267,9,"stream"],[316,15,267,15],[316,17,267,17],[317,6,268,8],[317,12,268,14,"revokeObjectURL"],[317,27,268,29],[317,30,268,32,"window"],[317,36,268,38],[317,37,268,39,"URL"],[317,40,268,42],[317,41,268,43,"revokeObjectURL"],[317,56,268,58],[317,60,268,62,"window"],[317,66,268,68],[317,67,268,69,"webkitURL"],[317,76,268,78],[317,77,268,79,"revokeObjectURL"],[317,92,268,94],[318,6,269,8],[318,12,269,14,"source"],[318,18,269,20],[318,21,269,23,"video"],[318,26,269,28],[318,27,269,29,"src"],[318,30,269,32],[318,34,269,36,"video"],[318,39,269,41],[318,40,269,42,"srcObject"],[318,49,269,51],[318,53,269,55,"video"],[318,58,269,60],[318,59,269,61,"mozSrcObject"],[318,71,269,73],[319,6,270,8],[319,10,270,12,"revokeObjectURL"],[319,25,270,27],[319,29,270,31],[319,36,270,38,"source"],[319,42,270,44],[319,47,270,49],[319,55,270,57],[319,57,270,59],[320,8,271,12,"revokeObjectURL"],[320,23,271,27],[320,24,271,28,"source"],[320,30,271,34],[320,31,271,35],[321,6,272,8],[322,4,273,4],[323,2,274,0],[324,2,275,7],[324,11,275,16,"isCapabilityAvailable"],[324,32,275,37,"isCapabilityAvailable"],[324,33,275,38,"video"],[324,38,275,43],[324,40,275,45,"keyName"],[324,47,275,52],[324,49,275,54],[325,4,276,4],[325,10,276,10,"stream"],[325,16,276,16],[325,19,276,19,"video"],[325,24,276,24],[325,25,276,25,"srcObject"],[325,34,276,34],[326,4,277,4],[326,8,277,8,"stream"],[326,14,277,14],[326,26,277,26,"MediaStream"],[326,37,277,37],[326,39,277,39],[327,6,278,8],[327,12,278,14,"videoTrack"],[327,22,278,24],[327,25,278,27,"stream"],[327,31,278,33],[327,32,278,34,"getVideoTracks"],[327,46,278,48],[327,47,278,49],[327,48,278,50],[327,49,278,51],[327,50,278,52],[327,51,278,53],[328,6,279,8],[328,13,279,15],[328,14,279,16],[328,15,279,17,"videoTrack"],[328,25,279,27],[328,26,279,28,"getCapabilities"],[328,41,279,43],[328,44,279,46],[328,45,279,47],[328,48,279,50,"keyName"],[328,55,279,57],[328,56,279,58],[329,4,280,4],[330,4,281,4],[330,11,281,11],[330,16,281,16],[331,2,282,0],[332,2,283,0],[332,11,283,9,"isMediaStreamTrack"],[332,29,283,27,"isMediaStreamTrack"],[332,30,283,28,"input"],[332,35,283,33],[332,37,283,35],[333,4,284,4],[333,11,284,11],[333,18,284,18,"input"],[333,23,284,23],[333,24,284,24,"stop"],[333,28,284,28],[333,33,284,33],[333,43,284,43],[334,2,285,0],[335,2,286,0],[335,11,286,9,"convertNormalizedSetting"],[335,35,286,33,"convertNormalizedSetting"],[335,36,286,34,"range"],[335,41,286,39],[335,43,286,41,"value"],[335,48,286,46],[335,50,286,48],[336,4,287,4],[336,8,287,8],[336,9,287,9,"value"],[336,14,287,14],[336,16,287,16],[337,6,288,8],[338,4,289,4],[339,4,290,4],[340,4,291,4],[341,4,292,4],[341,10,292,10,"converted"],[341,19,292,19],[341,22,292,22,"convertRange"],[341,34,292,34],[341,35,292,35,"value"],[341,40,292,40],[341,42,292,42],[341,43,292,43,"range"],[341,48,292,48],[341,49,292,49,"min"],[341,52,292,52],[341,54,292,54,"range"],[341,59,292,59],[341,60,292,60,"max"],[341,63,292,63],[341,64,292,64],[341,65,292,65],[342,4,293,4],[343,4,294,4],[343,11,294,11,"Math"],[343,15,294,15],[343,16,294,16,"min"],[343,19,294,19],[343,20,294,20,"range"],[343,25,294,25],[343,26,294,26,"max"],[343,29,294,29],[343,31,294,31,"Math"],[343,35,294,35],[343,36,294,36,"max"],[343,39,294,39],[343,40,294,40,"range"],[343,45,294,45],[343,46,294,46,"min"],[343,49,294,49],[343,51,294,51,"converted"],[343,60,294,60],[343,61,294,61],[343,62,294,62],[344,2,295,0],[345,2,296,0],[345,11,296,9,"convertRange"],[345,23,296,21,"convertRange"],[345,24,296,22,"value"],[345,29,296,27],[345,31,296,29,"r2"],[345,33,296,31],[345,35,296,33,"r1"],[345,37,296,35],[345,40,296,38],[345,41,296,39],[345,42,296,40],[345,44,296,42],[345,45,296,43],[345,46,296,44],[345,48,296,46],[346,4,297,4],[346,11,297,12],[346,12,297,13,"value"],[346,17,297,18],[346,20,297,21,"r1"],[346,22,297,23],[346,23,297,24],[346,24,297,25],[346,25,297,26],[346,30,297,31,"r2"],[346,32,297,33],[346,33,297,34],[346,34,297,35],[346,35,297,36],[346,38,297,39,"r2"],[346,40,297,41],[346,41,297,42],[346,42,297,43],[346,43,297,44],[346,44,297,45],[346,48,297,50,"r1"],[346,50,297,52],[346,51,297,53],[346,52,297,54],[346,53,297,55],[346,56,297,58,"r1"],[346,58,297,60],[346,59,297,61],[346,60,297,62],[346,61,297,63],[346,62,297,64],[346,65,297,67,"r2"],[346,67,297,69],[346,68,297,70],[346,69,297,71],[346,70,297,72],[347,2,298,0],[348,2,299,0],[348,11,299,9,"validatedConstrainedValue"],[348,36,299,34,"validatedConstrainedValue"],[348,37,299,35,"props"],[348,42,299,40],[348,44,299,42],[349,4,300,4],[349,10,300,10],[350,6,300,12,"constraintKey"],[350,19,300,25],[351,6,300,27,"settingsKey"],[351,17,300,38],[352,6,300,40,"convertedSetting"],[352,22,300,56],[353,6,300,58,"capabilities"],[353,18,300,70],[354,6,300,72,"settings"],[354,14,300,80],[355,6,300,82,"cameraType"],[356,4,300,93],[356,5,300,94],[356,8,300,97,"props"],[356,13,300,102],[357,4,301,4],[357,10,301,10,"setting"],[357,17,301,17],[357,20,301,20,"settings"],[357,28,301,28],[357,29,301,29,"settingsKey"],[357,40,301,40],[357,41,301,41],[358,4,302,4],[358,8,302,8,"Array"],[358,13,302,13],[358,14,302,14,"isArray"],[358,21,302,21],[358,22,302,22,"capabilities"],[358,34,302,34],[358,35,302,35,"constraintKey"],[358,48,302,48],[358,49,302,49],[358,50,302,50],[358,54,303,8,"convertedSetting"],[358,70,303,24],[358,74,304,8],[358,75,304,9,"capabilities"],[358,87,304,21],[358,88,304,22,"constraintKey"],[358,101,304,35],[358,102,304,36],[358,103,304,37,"includes"],[358,111,304,45],[358,112,304,46,"convertedSetting"],[358,128,304,62],[358,129,304,63],[358,131,304,65],[359,6,305,8],[359,10,305,12,"__DEV__"],[359,17,305,19],[359,19,305,21],[360,8,306,12],[361,8,307,12,"console"],[361,15,307,19],[361,16,307,20,"warn"],[361,20,307,24],[361,21,307,25],[361,27,307,31,"settingsKey"],[361,38,307,42],[361,44,307,48,"setting"],[361,51,307,55],[361,73,307,77,"convertedSetting"],[361,89,307,93],[361,144,307,148,"cameraType"],[361,154,307,158],[361,207,307,211],[361,208,307,212],[362,6,308,8],[363,6,309,8],[363,13,309,15,"undefined"],[363,22,309,24],[364,4,310,4],[365,4,311,4],[365,11,311,11,"convertedSetting"],[365,27,311,27],[366,2,312,0],[367,0,312,1],[367,3]],"functionMap":{"names":["<global>","getImageSize","toDataURL","hasValidConstraints","ensureCameraPictureOptions","captureImageData","captureImageContext","captureImage","getSupportedConstraints","getIdealConstraints","isMediaTrackConstraints","getPreferredStreamDevice","getStreamDevice","isWebKit","compareStreams","capture","syncTrackCapabilities","stream.getVideoTracks.map$argument_0","onCapabilitiesReady","validatedInternalConstrainedValue","stopMediaStream","stream.getAudioTracks.forEach$argument_0","stream.getVideoTracks.forEach$argument_0","setVideoSource","isCapabilityAvailable","isMediaStreamTrack","convertNormalizedSetting","convertRange","validatedConstrainedValue"],"mappings":"AAA;OCK;CDQ;OEC;CFW;OGC;CHE;AIC;CJa;OKE;CLW;OMC;CNoB;OOC;CPK;AQC;CRK;OSC;CTiC;AUC;CVE;OWQ;CXa;OYC;CZI;OaC;CbE;OcC;CdO;OeC;CfmB;OgBC;sDCE,2DD;ChBE;AkBE;ICwB;KDU;ClBiB;OoBC;wCCK,uBD;wCEG,uBF;CpBK;OuBC;CvBkB;OwBC;CxBO;AyBC;CzBE;A0BC;C1BS;A2BC;C3BE;A4BC;C5Ba"},"hasCjsExports":false},"type":"js/module"}]}