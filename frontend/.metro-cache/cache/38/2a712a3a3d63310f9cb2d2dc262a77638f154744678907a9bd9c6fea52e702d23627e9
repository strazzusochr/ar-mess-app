{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":31,"index":74}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":109},"end":{"line":4,"column":44,"index":153}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./extractOpacity","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":155},"end":{"line":6,"column":46,"index":201}}],"key":"jjgYCrYDewRsVLpQaklu9NyKLaY=","exportNames":["*"],"imports":1}},{"name":"./extractTransform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":202},"end":{"line":7,"column":50,"index":252}}],"key":"/eFg4kip4DvH5s9LoYzzDzsUESE=","exportNames":["*"],"imports":1}},{"name":"../units","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":300},"end":{"line":9,"column":29,"index":329}}],"key":"w7B29dYAP+shhz/m1xxZkm//QSw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return extractGradient;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _extractOpacity = require(_dependencyMap[2], \"./extractOpacity\");\n  var extractOpacity = _interopDefault(_extractOpacity);\n  var _extractTransform = require(_dependencyMap[3], \"./extractTransform\");\n  var extractTransform = _interopDefault(_extractTransform);\n  var _units = require(_dependencyMap[4], \"../units\");\n  var units = _interopDefault(_units);\n  var percentReg = /^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)(%?)$/;\n  function percentToFloat(percent) {\n    if (typeof percent === 'number') {\n      return percent;\n    }\n    if (typeof percent === 'object' && typeof percent.__getAnimatedValue === 'function') {\n      return percent.__getAnimatedValue();\n    }\n    var matched = typeof percent === 'string' && percent.match(percentReg);\n    if (!matched) {\n      console.warn(`\"${percent}\" is not a valid number or percentage string.`);\n      return 0;\n    }\n    return matched[2] ? +matched[1] / 100 : +matched[1];\n  }\n  var offsetComparator = (object, other) => object[0] - other[0];\n  function extractGradient(props, parent) {\n    var id = props.id,\n      children = props.children,\n      gradientTransform = props.gradientTransform,\n      transform = props.transform,\n      gradientUnits = props.gradientUnits;\n    if (!id) {\n      return null;\n    }\n    var stops = [];\n    var childArray = children ? _react.Children.map(children, child => /*#__PURE__*/React.cloneElement(child, {\n      parent\n    })) : [];\n    var l = childArray.length;\n    for (var i = 0; i < l; i++) {\n      var _childArray$i$props = childArray[i].props,\n        style = _childArray$i$props.style,\n        _childArray$i$props$o = _childArray$i$props.offset,\n        offset = _childArray$i$props$o === void 0 ? style && style.offset : _childArray$i$props$o,\n        _childArray$i$props$s = _childArray$i$props.stopColor,\n        stopColor = _childArray$i$props$s === void 0 ? style && style.stopColor || '#000' : _childArray$i$props$s,\n        _childArray$i$props$s2 = _childArray$i$props.stopOpacity,\n        stopOpacity = _childArray$i$props$s2 === void 0 ? style && style.stopOpacity : _childArray$i$props$s2;\n      var offsetNumber = percentToFloat(offset || 0);\n      var color = stopColor && (0, _reactNative.processColor)(stopColor);\n      if (typeof color !== 'number' || isNaN(offsetNumber)) {\n        console.warn(`\"${stopColor}\" is not a valid color or \"${offset}\" is not a valid offset`);\n        continue;\n      }\n      var alpha = Math.round((0, extractOpacity.default)(stopOpacity) * 255);\n      stops.push([offsetNumber, color & 0x00ffffff | alpha << 24]);\n    }\n    stops.sort(offsetComparator);\n    var gradient = [];\n    var k = stops.length;\n    for (var j = 0; j < k; j++) {\n      var s = stops[j];\n      gradient.push(s[0], s[1]);\n    }\n    return {\n      name: id,\n      gradient,\n      children: childArray,\n      gradientUnits: gradientUnits && units.default[gradientUnits] || 0,\n      gradientTransform: (0, extractTransform.default)(gradientTransform || transform || props)\n    };\n  }\n});","lineCount":105,"map":[[27,2,42,15,"Object"],[27,8,42,15],[27,9,42,15,"defineProperty"],[27,23,42,15],[27,24,42,15,"exports"],[27,31,42,15],[28,4,42,15,"enumerable"],[28,14,42,15],[29,4,42,15,"get"],[29,7,42,15],[29,18,42,15,"get"],[29,19,42,15],[30,6,42,15],[30,13,42,15,"extractGradient"],[30,28,42,15],[31,4,42,15],[32,2,42,15],[33,2,2,0],[33,6,2,0,"_react"],[33,12,2,0],[33,15,2,0,"require"],[33,22,2,0],[33,23,2,0,"_dependencyMap"],[33,37,2,0],[34,2,2,0],[34,6,2,0,"React"],[34,11,2,0],[34,14,2,0,"_interopNamespace"],[34,31,2,0],[34,32,2,0,"_react"],[34,38,2,0],[35,2,4,0],[35,6,4,0,"_reactNative"],[35,18,4,0],[35,21,4,0,"require"],[35,28,4,0],[35,29,4,0,"_dependencyMap"],[35,43,4,0],[36,2,6,0],[36,6,6,0,"_extractOpacity"],[36,21,6,0],[36,24,6,0,"require"],[36,31,6,0],[36,32,6,0,"_dependencyMap"],[36,46,6,0],[37,2,6,0],[37,6,6,0,"extractOpacity"],[37,20,6,0],[37,23,6,0,"_interopDefault"],[37,38,6,0],[37,39,6,0,"_extractOpacity"],[37,54,6,0],[38,2,7,0],[38,6,7,0,"_extractTransform"],[38,23,7,0],[38,26,7,0,"require"],[38,33,7,0],[38,34,7,0,"_dependencyMap"],[38,48,7,0],[39,2,7,0],[39,6,7,0,"extractTransform"],[39,22,7,0],[39,25,7,0,"_interopDefault"],[39,40,7,0],[39,41,7,0,"_extractTransform"],[39,58,7,0],[40,2,9,0],[40,6,9,0,"_units"],[40,12,9,0],[40,15,9,0,"require"],[40,22,9,0],[40,23,9,0,"_dependencyMap"],[40,37,9,0],[41,2,9,0],[41,6,9,0,"units"],[41,11,9,0],[41,14,9,0,"_interopDefault"],[41,29,9,0],[41,30,9,0,"_units"],[41,36,9,0],[42,2,11,0],[42,6,11,6,"percentReg"],[42,16,11,16],[42,19,11,19],[42,64,11,64],[43,2,13,0],[43,11,13,9,"percentToFloat"],[43,25,13,23,"percentToFloat"],[43,26,14,2,"percent"],[43,33,19,7],[43,35,20,10],[44,4,21,2],[44,8,21,6],[44,15,21,13,"percent"],[44,22,21,20],[44,27,21,25],[44,35,21,33],[44,37,21,35],[45,6,22,4],[45,13,22,11,"percent"],[45,20,22,18],[46,4,23,2],[47,4,24,2],[47,8,25,4],[47,15,25,11,"percent"],[47,22,25,18],[47,27,25,23],[47,35,25,31],[47,39,26,4],[47,46,26,11,"percent"],[47,53,26,18],[47,54,26,19,"__getAnimatedValue"],[47,72,26,37],[47,77,26,42],[47,87,26,52],[47,89,27,4],[48,6,28,4],[48,13,28,11,"percent"],[48,20,28,18],[48,21,28,19,"__getAnimatedValue"],[48,39,28,37],[48,40,28,38],[48,41,28,39],[49,4,29,2],[50,4,30,2],[50,8,30,8,"matched"],[50,15,30,15],[50,18,30,18],[50,25,30,25,"percent"],[50,32,30,32],[50,37,30,37],[50,45,30,45],[50,49,30,49,"percent"],[50,56,30,56],[50,57,30,57,"match"],[50,62,30,62],[50,63,30,63,"percentReg"],[50,73,30,73],[50,74,30,74],[51,4,31,2],[51,8,31,6],[51,9,31,7,"matched"],[51,16,31,14],[51,18,31,16],[52,6,32,4,"console"],[52,13,32,11],[52,14,32,12,"warn"],[52,18,32,16],[52,19,32,17],[52,23,32,21,"percent"],[52,30,32,28],[52,77,32,75],[52,78,32,76],[53,6,33,4],[53,13,33,11],[53,14,33,12],[54,4,34,2],[55,4,36,2],[55,11,36,9,"matched"],[55,18,36,16],[55,19,36,17],[55,20,36,18],[55,21,36,19],[55,24,36,22],[55,25,36,23,"matched"],[55,32,36,30],[55,33,36,31],[55,34,36,32],[55,35,36,33],[55,38,36,36],[55,41,36,39],[55,44,36,42],[55,45,36,43,"matched"],[55,52,36,50],[55,53,36,51],[55,54,36,52],[55,55,36,53],[56,2,37,0],[57,2,39,0],[57,6,39,6,"offsetComparator"],[57,22,39,22],[57,25,39,25,"offsetComparator"],[57,26,39,26,"object"],[57,32,39,42],[57,34,39,44,"other"],[57,39,39,59],[57,44,40,2,"object"],[57,50,40,8],[57,51,40,9],[57,52,40,10],[57,53,40,11],[57,56,40,14,"other"],[57,61,40,19],[57,62,40,20],[57,63,40,21],[57,64,40,22],[58,2,42,15],[58,11,42,24,"extractGradient"],[58,26,42,39,"extractGradient"],[58,27,43,2,"props"],[58,32,49,20],[58,34,50,2,"parent"],[58,40,50,17],[58,42,51,2],[59,4,52,2],[59,8,52,10,"id"],[59,10,52,12],[59,13,52,72,"props"],[59,18,52,77],[59,19,52,10,"id"],[59,21,52,12],[60,6,52,14,"children"],[60,14,52,22],[60,17,52,72,"props"],[60,22,52,77],[60,23,52,14,"children"],[60,31,52,22],[61,6,52,24,"gradientTransform"],[61,23,52,41],[61,26,52,72,"props"],[61,31,52,77],[61,32,52,24,"gradientTransform"],[61,49,52,41],[62,6,52,43,"transform"],[62,15,52,52],[62,18,52,72,"props"],[62,23,52,77],[62,24,52,43,"transform"],[62,33,52,52],[63,6,52,54,"gradientUnits"],[63,19,52,67],[63,22,52,72,"props"],[63,27,52,77],[63,28,52,54,"gradientUnits"],[63,41,52,67],[64,4,53,2],[64,8,53,6],[64,9,53,7,"id"],[64,11,53,9],[64,13,53,11],[65,6,54,4],[65,13,54,11],[65,17,54,15],[66,4,55,2],[67,4,57,2],[67,8,57,8,"stops"],[67,13,57,13],[67,16,57,16],[67,18,57,18],[68,4,58,2],[68,8,58,8,"childArray"],[68,18,58,18],[68,21,58,21,"children"],[68,29,58,29],[68,32,59,6,"Children"],[68,38,59,14],[68,39,59,14,"Children"],[68,47,59,14],[68,48,59,15,"map"],[68,51,59,18],[68,52,59,19,"children"],[68,60,59,27],[68,62,59,30,"child"],[68,67,59,35],[68,84,60,8,"React"],[68,89,60,13],[68,90,60,14,"cloneElement"],[68,102,60,26],[68,103,60,27,"child"],[68,108,60,32],[68,110,60,34],[69,6,61,10,"parent"],[70,4,62,8],[70,5,62,9],[70,6,63,6],[70,7,63,7],[70,10,64,6],[70,12,64,8],[71,4,65,2],[71,8,65,8,"l"],[71,9,65,9],[71,12,65,12,"childArray"],[71,22,65,22],[71,23,65,23,"length"],[71,29,65,29],[72,4,66,2],[72,9,66,7],[72,13,66,11,"i"],[72,14,66,12],[72,17,66,15],[72,18,66,16],[72,20,66,18,"i"],[72,21,66,19],[72,24,66,22,"l"],[72,25,66,23],[72,27,66,25,"i"],[72,28,66,26],[72,30,66,28],[72,32,66,30],[73,6,67,4],[73,10,67,4,"_childArray$i$props"],[73,29,67,4],[73,32,74,8,"childArray"],[73,42,74,18],[73,43,74,19,"i"],[73,44,74,20],[73,45,74,21],[73,46,68,6,"props"],[73,51,68,11],[74,8,69,8,"style"],[74,13,69,13],[74,16,69,13,"_childArray$i$props"],[74,35,69,13],[74,36,69,8,"style"],[74,41,69,13],[75,8,69,13,"_childArray$i$props$o"],[75,29,69,13],[75,32,69,13,"_childArray$i$props"],[75,51,69,13],[75,52,70,8,"offset"],[75,58,70,14],[76,8,70,8,"offset"],[76,14,70,14],[76,17,70,14,"_childArray$i$props$o"],[76,38,70,14],[76,52,70,17,"style"],[76,57,70,22],[76,61,70,26,"style"],[76,66,70,31],[76,67,70,32,"offset"],[76,73,70,38],[76,76,70,38,"_childArray$i$props$o"],[76,97,70,38],[77,8,70,38,"_childArray$i$props$s"],[77,29,70,38],[77,32,70,38,"_childArray$i$props"],[77,51,70,38],[77,52,71,8,"stopColor"],[77,61,71,17],[78,8,71,8,"stopColor"],[78,17,71,17],[78,20,71,17,"_childArray$i$props$s"],[78,41,71,17],[78,55,71,21,"style"],[78,60,71,26],[78,64,71,30,"style"],[78,69,71,35],[78,70,71,36,"stopColor"],[78,79,71,45],[78,83,71,50],[78,89,71,56],[78,92,71,56,"_childArray$i$props$s"],[78,113,71,56],[79,8,71,56,"_childArray$i$props$s2"],[79,30,71,56],[79,33,71,56,"_childArray$i$props"],[79,52,71,56],[79,53,72,8,"stopOpacity"],[79,64,72,19],[80,8,72,8,"stopOpacity"],[80,19,72,19],[80,22,72,19,"_childArray$i$props$s2"],[80,44,72,19],[80,58,72,22,"style"],[80,63,72,27],[80,67,72,31,"style"],[80,72,72,36],[80,73,72,37,"stopOpacity"],[80,84,72,48],[80,87,72,48,"_childArray$i$props$s2"],[80,109,72,48],[81,6,75,4],[81,10,75,10,"offsetNumber"],[81,22,75,22],[81,25,75,25,"percentToFloat"],[81,39,75,39],[81,40,75,40,"offset"],[81,46,75,46],[81,50,75,50],[81,51,75,51],[81,52,75,52],[82,6,76,4],[82,10,76,10,"color"],[82,15,76,15],[82,18,76,18,"stopColor"],[82,27,76,27],[82,31,76,31],[82,35,76,31,"processColor"],[82,47,76,43],[82,48,76,43,"processColor"],[82,60,76,43],[82,62,76,44,"stopColor"],[82,71,76,53],[82,72,76,54],[83,6,77,4],[83,10,77,8],[83,17,77,15,"color"],[83,22,77,20],[83,27,77,25],[83,35,77,33],[83,39,77,37,"isNaN"],[83,44,77,42],[83,45,77,43,"offsetNumber"],[83,57,77,55],[83,58,77,56],[83,60,77,58],[84,8,78,6,"console"],[84,15,78,13],[84,16,78,14,"warn"],[84,20,78,18],[84,21,79,8],[84,25,79,12,"stopColor"],[84,34,79,21],[84,64,79,51,"offset"],[84,70,79,57],[84,95,80,6],[84,96,80,7],[85,8,81,6],[86,6,82,4],[87,6,83,4],[87,10,83,10,"alpha"],[87,15,83,15],[87,18,83,18,"Math"],[87,22,83,22],[87,23,83,23,"round"],[87,28,83,28],[87,29,83,29],[87,33,83,29,"extractOpacity"],[87,47,83,43],[87,48,83,43,"default"],[87,55,83,43],[87,57,83,44,"stopOpacity"],[87,68,83,55],[87,69,83,56],[87,72,83,59],[87,75,83,62],[87,76,83,63],[88,6,84,4,"stops"],[88,11,84,9],[88,12,84,10,"push"],[88,16,84,14],[88,17,84,15],[88,18,84,16,"offsetNumber"],[88,30,84,28],[88,32,84,31,"color"],[88,37,84,36],[88,40,84,39],[88,50,84,49],[88,53,84,54,"alpha"],[88,58,84,59],[88,62,84,63],[88,64,84,66],[88,65,84,67],[88,66,84,68],[89,4,85,2],[90,4,86,2,"stops"],[90,9,86,7],[90,10,86,8,"sort"],[90,14,86,12],[90,15,86,13,"offsetComparator"],[90,31,86,29],[90,32,86,30],[91,4,88,2],[91,8,88,8,"gradient"],[91,16,88,16],[91,19,88,19],[91,21,88,21],[92,4,89,2],[92,8,89,8,"k"],[92,9,89,9],[92,12,89,12,"stops"],[92,17,89,17],[92,18,89,18,"length"],[92,24,89,24],[93,4,90,2],[93,9,90,7],[93,13,90,11,"j"],[93,14,90,12],[93,17,90,15],[93,18,90,16],[93,20,90,18,"j"],[93,21,90,19],[93,24,90,22,"k"],[93,25,90,23],[93,27,90,25,"j"],[93,28,90,26],[93,30,90,28],[93,32,90,30],[94,6,91,4],[94,10,91,10,"s"],[94,11,91,11],[94,14,91,14,"stops"],[94,19,91,19],[94,20,91,20,"j"],[94,21,91,21],[94,22,91,22],[95,6,92,4,"gradient"],[95,14,92,12],[95,15,92,13,"push"],[95,19,92,17],[95,20,92,18,"s"],[95,21,92,19],[95,22,92,20],[95,23,92,21],[95,24,92,22],[95,26,92,24,"s"],[95,27,92,25],[95,28,92,26],[95,29,92,27],[95,30,92,28],[95,31,92,29],[96,4,93,2],[97,4,95,2],[97,11,95,9],[98,6,96,4,"name"],[98,10,96,8],[98,12,96,10,"id"],[98,14,96,12],[99,6,97,4,"gradient"],[99,14,97,12],[100,6,98,4,"children"],[100,14,98,12],[100,16,98,14,"childArray"],[100,26,98,24],[101,6,99,4,"gradientUnits"],[101,19,99,17],[101,21,99,20,"gradientUnits"],[101,34,99,33],[101,38,99,37,"units"],[101,43,99,42],[101,44,99,42,"default"],[101,51,99,42],[101,52,99,43,"gradientUnits"],[101,65,99,56],[101,66,99,57],[101,70,99,62],[101,71,99,63],[102,6,100,4,"gradientTransform"],[102,23,100,21],[102,25,100,23],[102,29,100,23,"extractTransform"],[102,45,100,39],[102,46,100,39,"default"],[102,53,100,39],[102,55,101,6,"gradientTransform"],[102,72,101,23],[102,76,101,27,"transform"],[102,85,101,36],[102,89,101,40,"props"],[102,94,102,4],[103,4,103,2],[103,5,103,3],[104,2,104,0],[105,0,104,1],[105,3]],"functionMap":{"names":["<global>","percentToFloat","offsetComparator","extractGradient","Children.map$argument_1"],"mappings":"AAA;ACY;CDwB;yBEE;sBFC;eGE;6BCiB;UDG;CH0C"},"hasCjsExports":false},"type":"js/module"}]}