{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.camelCaseToDashed = void 0;\n  exports.encodeSvg = encodeSvg;\n  exports.getBoundingClientRect = void 0;\n  exports.remeasure = remeasure;\n  const camelCaseToDashed = camelCase => {\n    return camelCase.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n  };\n  exports.camelCaseToDashed = camelCaseToDashed;\n  const getBoundingClientRect = node => {\n    if (node) {\n      const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n      if (isElement && typeof node.getBoundingClientRect === 'function') {\n        return node.getBoundingClientRect();\n      }\n    }\n    throw new Error('Can not get boundingClientRect of ' + node || 'undefined');\n  };\n  exports.getBoundingClientRect = getBoundingClientRect;\n  const measureLayout = (node, callback) => {\n    const relativeNode = node === null || node === void 0 ? void 0 : node.parentNode;\n    if (relativeNode) {\n      setTimeout(() => {\n        // @ts-expect-error TODO: handle it better\n        const relativeRect = getBoundingClientRect(relativeNode);\n        const {\n          height,\n          left,\n          top,\n          width\n        } = getBoundingClientRect(node);\n        const x = left - relativeRect.left;\n        const y = top - relativeRect.top;\n        callback(x, y, width, height, left, top);\n      }, 0);\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function remeasure() {\n    const tag = this.state.touchable.responderID;\n    if (tag === null) {\n      return;\n    }\n    measureLayout(tag, this._handleQueryLayout);\n  }\n\n  /* Taken from here: https://gist.github.com/jennyknuth/222825e315d45a738ed9d6e04c7a88d0 */\n  function encodeSvg(svgString) {\n    return svgString.replace('<svg', ~svgString.indexOf('xmlns') ? '<svg' : '<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g, \"'\").replace(/%/g, '%25').replace(/#/g, '%23').replace(/{/g, '%7B').replace(/}/g, '%7D').replace(/</g, '%3C').replace(/>/g, '%3E').replace(/\\s+/g, ' ');\n  }\n});","lineCount":57,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"camelCaseToDashed"],[7,27,6,25],[7,30,6,28],[7,35,6,33],[7,36,6,34],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"encodeSvg"],[8,19,7,17],[8,22,7,20,"encodeSvg"],[8,31,7,29],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"getBoundingClientRect"],[9,31,8,29],[9,34,8,32],[9,39,8,37],[9,40,8,38],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"remeasure"],[10,19,9,17],[10,22,9,20,"remeasure"],[10,31,9,29],[11,2,10,0],[11,8,10,6,"camelCaseToDashed"],[11,25,10,23],[11,28,10,26,"camelCase"],[11,37,10,35],[11,41,10,39],[12,4,11,2],[12,11,11,9,"camelCase"],[12,20,11,18],[12,21,11,19,"replace"],[12,28,11,26],[12,29,11,27],[12,37,11,35],[12,39,11,37,"m"],[12,40,11,38],[12,44,11,42],[12,47,11,45],[12,50,11,48,"m"],[12,51,11,49],[12,52,11,50,"toLowerCase"],[12,63,11,61],[12,64,11,62],[12,65,11,63],[12,66,11,64],[13,2,12,0],[13,3,12,1],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"camelCaseToDashed"],[14,27,13,25],[14,30,13,28,"camelCaseToDashed"],[14,47,13,45],[15,2,14,0],[15,8,14,6,"getBoundingClientRect"],[15,29,14,27],[15,32,14,30,"node"],[15,36,14,34],[15,40,14,38],[16,4,15,2],[16,8,15,6,"node"],[16,12,15,10],[16,14,15,12],[17,6,16,4],[17,12,16,10,"isElement"],[17,21,16,19],[17,24,16,22,"node"],[17,28,16,26],[17,29,16,27,"nodeType"],[17,37,16,35],[17,42,16,40],[17,43,16,41],[17,44,16,42],[17,45,16,43],[18,6,17,4],[18,10,17,8,"isElement"],[18,19,17,17],[18,23,17,21],[18,30,17,28,"node"],[18,34,17,32],[18,35,17,33,"getBoundingClientRect"],[18,56,17,54],[18,61,17,59],[18,71,17,69],[18,73,17,71],[19,8,18,6],[19,15,18,13,"node"],[19,19,18,17],[19,20,18,18,"getBoundingClientRect"],[19,41,18,39],[19,42,18,40],[19,43,18,41],[20,6,19,4],[21,4,20,2],[22,4,21,2],[22,10,21,8],[22,14,21,12,"Error"],[22,19,21,17],[22,20,21,18],[22,56,21,54],[22,59,21,57,"node"],[22,63,21,61],[22,67,21,65],[22,78,21,76],[22,79,21,77],[23,2,22,0],[23,3,22,1],[24,2,23,0,"exports"],[24,9,23,7],[24,10,23,8,"getBoundingClientRect"],[24,31,23,29],[24,34,23,32,"getBoundingClientRect"],[24,55,23,53],[25,2,24,0],[25,8,24,6,"measureLayout"],[25,21,24,19],[25,24,24,22,"measureLayout"],[25,25,24,23,"node"],[25,29,24,27],[25,31,24,29,"callback"],[25,39,24,37],[25,44,24,42],[26,4,25,2],[26,10,25,8,"relativeNode"],[26,22,25,20],[26,25,25,23,"node"],[26,29,25,27],[26,34,25,32],[26,38,25,36],[26,42,25,40,"node"],[26,46,25,44],[26,51,25,49],[26,56,25,54],[26,57,25,55],[26,60,25,58],[26,65,25,63],[26,66,25,64],[26,69,25,67,"node"],[26,73,25,71],[26,74,25,72,"parentNode"],[26,84,25,82],[27,4,26,2],[27,8,26,6,"relativeNode"],[27,20,26,18],[27,22,26,20],[28,6,27,4,"setTimeout"],[28,16,27,14],[28,17,27,15],[28,23,27,21],[29,8,28,6],[30,8,29,6],[30,14,29,12,"relativeRect"],[30,26,29,24],[30,29,29,27,"getBoundingClientRect"],[30,50,29,48],[30,51,29,49,"relativeNode"],[30,63,29,61],[30,64,29,62],[31,8,30,6],[31,14,30,12],[32,10,31,8,"height"],[32,16,31,14],[33,10,32,8,"left"],[33,14,32,12],[34,10,33,8,"top"],[34,13,33,11],[35,10,34,8,"width"],[36,8,35,6],[36,9,35,7],[36,12,35,10,"getBoundingClientRect"],[36,33,35,31],[36,34,35,32,"node"],[36,38,35,36],[36,39,35,37],[37,8,36,6],[37,14,36,12,"x"],[37,15,36,13],[37,18,36,16,"left"],[37,22,36,20],[37,25,36,23,"relativeRect"],[37,37,36,35],[37,38,36,36,"left"],[37,42,36,40],[38,8,37,6],[38,14,37,12,"y"],[38,15,37,13],[38,18,37,16,"top"],[38,21,37,19],[38,24,37,22,"relativeRect"],[38,36,37,34],[38,37,37,35,"top"],[38,40,37,38],[39,8,38,6,"callback"],[39,16,38,14],[39,17,38,15,"x"],[39,18,38,16],[39,20,38,18,"y"],[39,21,38,19],[39,23,38,21,"width"],[39,28,38,26],[39,30,38,28,"height"],[39,36,38,34],[39,38,38,36,"left"],[39,42,38,40],[39,44,38,42,"top"],[39,47,38,45],[39,48,38,46],[40,6,39,4],[40,7,39,5],[40,9,39,7],[40,10,39,8],[40,11,39,9],[41,4,40,2],[42,2,41,0],[42,3,41,1],[44,2,43,0],[45,2,44,0],[45,11,44,9,"remeasure"],[45,20,44,18,"remeasure"],[45,21,44,18],[45,23,44,21],[46,4,45,2],[46,10,45,8,"tag"],[46,13,45,11],[46,16,45,14],[46,20,45,18],[46,21,45,19,"state"],[46,26,45,24],[46,27,45,25,"touchable"],[46,36,45,34],[46,37,45,35,"responderID"],[46,48,45,46],[47,4,46,2],[47,8,46,6,"tag"],[47,11,46,9],[47,16,46,14],[47,20,46,18],[47,22,46,20],[48,6,47,4],[49,4,48,2],[50,4,49,2,"measureLayout"],[50,17,49,15],[50,18,49,16,"tag"],[50,21,49,19],[50,23,49,21],[50,27,49,25],[50,28,49,26,"_handleQueryLayout"],[50,46,49,44],[50,47,49,45],[51,2,50,0],[53,2,52,0],[54,2,53,0],[54,11,53,9,"encodeSvg"],[54,20,53,18,"encodeSvg"],[54,21,53,19,"svgString"],[54,30,53,28],[54,32,53,30],[55,4,54,2],[55,11,54,9,"svgString"],[55,20,54,18],[55,21,54,19,"replace"],[55,28,54,26],[55,29,54,27],[55,35,54,33],[55,37,54,35],[55,38,54,36,"svgString"],[55,47,54,45],[55,48,54,46,"indexOf"],[55,55,54,53],[55,56,54,54],[55,63,54,61],[55,64,54,62],[55,67,54,65],[55,73,54,71],[55,76,54,74],[55,117,54,115],[55,118,54,116],[55,119,54,117,"replace"],[55,126,54,124],[55,127,54,125],[55,131,54,129],[55,133,54,131],[55,136,54,134],[55,137,54,135],[55,138,54,136,"replace"],[55,145,54,143],[55,146,54,144],[55,150,54,148],[55,152,54,150],[55,157,54,155],[55,158,54,156],[55,159,54,157,"replace"],[55,166,54,164],[55,167,54,165],[55,171,54,169],[55,173,54,171],[55,178,54,176],[55,179,54,177],[55,180,54,178,"replace"],[55,187,54,185],[55,188,54,186],[55,192,54,190],[55,194,54,192],[55,199,54,197],[55,200,54,198],[55,201,54,199,"replace"],[55,208,54,206],[55,209,54,207],[55,213,54,211],[55,215,54,213],[55,220,54,218],[55,221,54,219],[55,222,54,220,"replace"],[55,229,54,227],[55,230,54,228],[55,234,54,232],[55,236,54,234],[55,241,54,239],[55,242,54,240],[55,243,54,241,"replace"],[55,250,54,248],[55,251,54,249],[55,255,54,253],[55,257,54,255],[55,262,54,260],[55,263,54,261],[55,264,54,262,"replace"],[55,271,54,269],[55,272,54,270],[55,278,54,276],[55,280,54,278],[55,283,54,281],[55,284,54,282],[56,2,55,0],[57,0,55,1],[57,3]],"functionMap":{"names":["<global>","camelCaseToDashed","camelCase.replace$argument_1","getBoundingClientRect","measureLayout","setTimeout$argument_0","remeasure","encodeSvg"],"mappings":"AAA;0BCS;qCCC,0BD;CDC;8BGE;CHQ;sBIE;eCG;KDY;CJE;AMG;CNM;AOG;CPE"},"hasCjsExports":true},"type":"js/module"}]}