{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/findNodeHandle","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"2RP7Dp//wHy/IL2D3/pkDbKjgUI=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Image","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"h9Yjx6LR7umCdPP226caWyLdUPo=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./AV","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":161,"index":275}}],"key":"GoKzZodUJxWkmrwumcAIgx4EAoU=","exportNames":["*"],"imports":1}},{"name":"./ExpoVideoManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":276},"end":{"line":4,"column":50,"index":326}}],"key":"Kl3zJqRLkeLgzAdlDqM/EHiqMwY=","exportNames":["*"],"imports":1}},{"name":"./ExponentAV","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":327},"end":{"line":5,"column":38,"index":365}}],"key":"xs+SHqvQNFNb4NS5yBmWpK0Qt1c=","exportNames":["*"],"imports":1}},{"name":"./ExponentVideo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":366},"end":{"line":6,"column":44,"index":410}}],"key":"qDwhmU89y3VrLOTZvxHw0SVpEaI=","exportNames":["*"],"imports":1}},{"name":"./Video.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":411},"end":{"line":7,"column":44,"index":455}}],"key":"if3BFzGQEcStGi9c65SHLZzC/Ec=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/node_modules/expo-av/build/Video.js\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsFindNodeHandle = require(_dependencyMap[1], \"react-native-web/dist/exports/findNodeHandle\");\n  var findNodeHandle = _interopDefault(_reactNativeWebDistExportsFindNodeHandle);\n  var _reactNativeWebDistExportsImage = require(_dependencyMap[2], \"react-native-web/dist/exports/Image\");\n  var Image = _interopDefault(_reactNativeWebDistExportsImage);\n  var _reactNativeWebDistExportsStyleSheet = require(_dependencyMap[3], \"react-native-web/dist/exports/StyleSheet\");\n  var StyleSheet = _interopDefault(_reactNativeWebDistExportsStyleSheet);\n  var _reactNativeWebDistExportsView = require(_dependencyMap[4], \"react-native-web/dist/exports/View\");\n  var View = _interopDefault(_reactNativeWebDistExportsView);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[5], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _AV = require(_dependencyMap[6], \"./AV\");\n  var _ExpoVideoManager = require(_dependencyMap[7], \"./ExpoVideoManager\");\n  var ExpoVideoManager = _interopDefault(_ExpoVideoManager);\n  var _ExponentAV = require(_dependencyMap[8], \"./ExponentAV\");\n  var ExponentAV = _interopDefault(_ExponentAV);\n  var _ExponentVideo = require(_dependencyMap[9], \"./ExponentVideo\");\n  var ExponentVideo = _interopDefault(_ExponentVideo);\n  var _VideoTypes = require(_dependencyMap[10], \"./Video.types\");\n  var _reactJsxDevRuntime = require(_dependencyMap[11], \"react/jsx-dev-runtime\");\n  const _STYLES = StyleSheet.default.create({\n    base: {\n      overflow: 'hidden',\n      pointerEvents: 'box-none'\n    },\n    poster: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      resizeMode: 'contain'\n    },\n    video: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    }\n  });\n  let didWarnAboutVideoDeprecation = false;\n  // On a real device UIManager should be present, however when running offline tests with jest-expo\n  // we have to use the provided native module mock to access constants\n  const ExpoVideoManagerConstants = ExpoVideoManager.default;\n  const ExpoVideoViewManager = ExpoVideoManager.default;\n  class Video extends React.Component {\n    _nativeRef = /*#__PURE__*/React.createRef();\n    _onPlaybackStatusUpdate = null;\n    constructor(props) {\n      super(props);\n      this.state = {\n        showPoster: !!props.usePoster\n      };\n    }\n    /**\n     * @hidden\n     */\n    setNativeProps(nativeProps) {\n      const nativeVideo = this._nativeRef.current;\n      if (!nativeVideo) throw new Error(`native video reference is not defined.`);\n      nativeVideo.setNativeProps(nativeProps);\n    }\n    // Internal methods\n    _handleNewStatus = status => {\n      if (this.state.showPoster && status.isLoaded && (status.isPlaying || status.positionMillis !== 0)) {\n        this.setState({\n          showPoster: false\n        });\n      }\n      if (this.props.onPlaybackStatusUpdate) {\n        this.props.onPlaybackStatusUpdate(status);\n      }\n      if (this._onPlaybackStatusUpdate) {\n        this._onPlaybackStatusUpdate(status);\n      }\n    };\n    _performOperationAndHandleStatusAsync = async operation => {\n      const video = this._nativeRef.current;\n      if (!video) {\n        throw new Error(`Cannot complete operation because the Video component has not yet loaded`);\n      }\n      let handle = null;\n      if (Platform.default.OS === 'web' && 'getVideoElement' in this._nativeRef.current) {\n        handle = this._nativeRef.current.getVideoElement();\n      }\n      if (Platform.default.OS !== 'web') {\n        handle = (0, findNodeHandle.default)(this._nativeRef.current);\n      }\n      if (!handle) {\n        throw new Error('failed to find node handle');\n      }\n      const status = await operation(handle);\n      this._handleNewStatus(status);\n      return status;\n    };\n    // Fullscreening API\n    _setFullscreen = async value => {\n      return this._performOperationAndHandleStatusAsync(tag => ExpoVideoViewManager.setFullscreen(tag, value));\n    };\n    /**\n     * This presents a fullscreen view of your video component on top of your app's UI. Note that even if `useNativeControls` is set to `false`,\n     * native controls will be visible in fullscreen mode.\n     * @return A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished presenting,\n     * or rejects if there was an error, or if this was called on an Android device.\n     */\n    presentFullscreenPlayer = async () => {\n      return this._setFullscreen(true);\n    };\n    /**\n     * This dismisses the fullscreen video view.\n     * @return A `Promise` that is fulfilled with the `AVPlaybackStatus` of the video once the fullscreen player has finished dismissing,\n     * or rejects if there was an error, or if this was called on an Android device.\n     */\n    dismissFullscreenPlayer = async () => {\n      return this._setFullscreen(false);\n    };\n    // ### Unified playback API ### (consistent with Audio.js)\n    // All calls automatically call onPlaybackStatusUpdate as a side effect.\n    /**\n     * @hidden\n     */\n    getStatusAsync = async () => {\n      return this._performOperationAndHandleStatusAsync(tag => ExponentAV.default.getStatusForVideo(tag));\n    };\n    /**\n     * @hidden\n     */\n    loadAsync = async (source, initialStatus = {}, downloadFirst = true) => {\n      const {\n        nativeSource,\n        fullInitialStatus\n      } = await (0, _AV.getNativeSourceAndFullInitialStatusForLoadAsync)(source, initialStatus, downloadFirst);\n      return this._performOperationAndHandleStatusAsync(tag => ExponentAV.default.loadForVideo(tag, nativeSource, fullInitialStatus));\n    };\n    /**\n     * Equivalent to setting URI to `null`.\n     * @hidden\n     */\n    unloadAsync = async () => {\n      return this._performOperationAndHandleStatusAsync(tag => ExponentAV.default.unloadForVideo(tag));\n    };\n    componentWillUnmount() {\n      // Auto unload video to perform necessary cleanup safely\n      this.unloadAsync().catch(() => {\n        // Ignored rejection. Sometimes the unloadAsync code is executed when video is already unloaded.\n        // In such cases, it throws:\n        // \"[Unhandled promise rejection: Error: Invalid view returned from registry,\n        //  expecting EXVideo, got: (null)]\"\n      });\n    }\n    /**\n     * Set status API, only available while `isLoaded = true`.\n     * @hidden\n     */\n    setStatusAsync = async status => {\n      (0, _AV.assertStatusValuesInBounds)(status);\n      return this._performOperationAndHandleStatusAsync(tag => ExponentAV.default.setStatusForVideo(tag, status));\n    };\n    /**\n     * @hidden\n     */\n    replayAsync = async (status = {}) => {\n      if (status.positionMillis && status.positionMillis !== 0) {\n        throw new Error('Requested position after replay has to be 0.');\n      }\n      return this._performOperationAndHandleStatusAsync(tag => ExponentAV.default.replayVideo(tag, Object.assign({}, status, {\n        positionMillis: 0,\n        shouldPlay: true\n      })));\n    };\n    /**\n     * Sets a function to be called regularly with the `AVPlaybackStatus` of the playback object.\n     *\n     * `onPlaybackStatusUpdate` will be called whenever a call to the API for this playback object completes\n     * (such as `setStatusAsync()`, `getStatusAsync()`, or `unloadAsync()`), nd will also be called at regular intervals\n     * while the media is in the loaded state.\n     *\n     * Set `progressUpdateIntervalMillis` via `setStatusAsync()` or `setProgressUpdateIntervalAsync()` to modify\n     * the interval with which `onPlaybackStatusUpdate` is called while loaded.\n     *\n     * @param onPlaybackStatusUpdate A function taking a single parameter `AVPlaybackStatus`.\n     */\n    setOnPlaybackStatusUpdate(onPlaybackStatusUpdate) {\n      this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n      this.getStatusAsync();\n    }\n    // Methods of the Playback interface that are set via PlaybackMixin\n\n    // Callback wrappers\n    _nativeOnPlaybackStatusUpdate = event => {\n      this._handleNewStatus(event.nativeEvent);\n    };\n    // TODO make sure we are passing the right stuff\n    _nativeOnLoadStart = () => {\n      if (this.props.onLoadStart) {\n        this.props.onLoadStart();\n      }\n    };\n    _nativeOnLoad = event => {\n      if (this.props.onLoad) {\n        this.props.onLoad(event.nativeEvent);\n      }\n      this._handleNewStatus(event.nativeEvent);\n    };\n    _nativeOnError = event => {\n      const error = event.nativeEvent.error;\n      if (this.props.onError) {\n        this.props.onError(error);\n      }\n      this._handleNewStatus((0, _AV.getUnloadedStatus)(error));\n    };\n    _nativeOnReadyForDisplay = event => {\n      if (this.props.onReadyForDisplay) {\n        this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n    _nativeOnFullscreenUpdate = event => {\n      if (this.props.onFullscreenUpdate) {\n        this.props.onFullscreenUpdate(event.nativeEvent);\n      }\n    };\n    _renderPoster = () => {\n      const PosterComponent = this.props.PosterComponent ?? Image.default;\n      return this.props.usePoster && this.state.showPoster ? /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(PosterComponent, {\n        style: [_STYLES.poster, this.props.posterStyle],\n        source: this.props.posterSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 65\n      }, this) : null;\n    };\n    render() {\n      maybeWarnAboutVideoDeprecation();\n      const source = (0, _AV.getNativeSourceFromSource)(this.props.source) || undefined;\n      let nativeResizeMode = ExpoVideoManagerConstants.ScaleNone;\n      if (this.props.resizeMode) {\n        const resizeMode = this.props.resizeMode;\n        if (resizeMode === _VideoTypes.ResizeMode.STRETCH) {\n          nativeResizeMode = ExpoVideoManagerConstants.ScaleToFill;\n        } else if (resizeMode === _VideoTypes.ResizeMode.CONTAIN) {\n          nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFit;\n        } else if (resizeMode === _VideoTypes.ResizeMode.COVER) {\n          nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFill;\n        }\n      }\n      // Set status via individual props\n      const status = Object.assign({}, this.props.status);\n      ['progressUpdateIntervalMillis', 'positionMillis', 'shouldPlay', 'rate', 'shouldCorrectPitch', 'volume', 'isMuted', 'isLooping'].forEach(prop => {\n        if (prop in this.props) {\n          status[prop] = this.props[prop];\n        }\n      });\n      // Replace selected native props\n      const nativeProps = Object.assign({}, omit(this.props, ['source', 'onPlaybackStatusUpdate', 'usePoster', 'posterSource', 'posterStyle', ...Object.keys(status)]), {\n        style: [_STYLES.base, this.props.style],\n        videoStyle: [_STYLES.video, this.props.videoStyle],\n        source,\n        resizeMode: nativeResizeMode,\n        status,\n        onStatusUpdate: this._nativeOnPlaybackStatusUpdate,\n        onLoadStart: this._nativeOnLoadStart,\n        onLoad: this._nativeOnLoad,\n        onError: this._nativeOnError,\n        onReadyForDisplay: this._nativeOnReadyForDisplay,\n        onFullscreenUpdate: this._nativeOnFullscreenUpdate\n      });\n      return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(View.default, {\n        style: nativeProps.style,\n        children: [/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ExponentVideo.default, Object.assign({\n          ref: this._nativeRef\n        }, nativeProps, {\n          style: nativeProps.videoStyle\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }, this), this._renderPoster()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  function omit(props, propNames) {\n    const copied = Object.assign({}, props);\n    for (const propName of propNames) {\n      delete copied[propName];\n    }\n    return copied;\n  }\n  function maybeWarnAboutVideoDeprecation() {\n    if (__DEV__ && !didWarnAboutVideoDeprecation) {\n      didWarnAboutVideoDeprecation = true;\n      console.log('⚠️ \\x1b[33m[expo-av]: Video component from `expo-av` is deprecated in favor of `expo-video`. ' + 'See the documentation at https://docs.expo.dev/versions/latest/sdk/video/ for the new API reference.');\n    }\n  }\n  Object.assign(Video.prototype, _AV.PlaybackMixin);\n  // note(simek): TypeDoc cannot resolve correctly name of inline and default exported class\n  var _default = Video;\n});","lineCount":337,"map":[[28,2,298,0,"Object"],[28,8,298,0],[28,9,298,0,"defineProperty"],[28,23,298,0],[28,24,298,0,"exports"],[28,31,298,0],[29,4,298,0,"enumerable"],[29,14,298,0],[30,4,298,0,"get"],[30,7,298,0],[30,18,298,0,"get"],[30,19,298,0],[31,6,298,0],[31,13,298,0,"_default"],[31,21,298,0],[32,4,298,0],[33,2,298,0],[34,2,1,0],[34,6,1,0,"_react"],[34,12,1,0],[34,15,1,0,"require"],[34,22,1,0],[34,23,1,0,"_dependencyMap"],[34,37,1,0],[35,2,1,0],[35,6,1,0,"React"],[35,11,1,0],[35,14,1,0,"_interopNamespace"],[35,31,1,0],[35,32,1,0,"_react"],[35,38,1,0],[36,2,1,31],[36,6,1,31,"_reactNativeWebDistExportsFindNodeHandle"],[36,46,1,31],[36,49,1,31,"require"],[36,56,1,31],[36,57,1,31,"_dependencyMap"],[36,71,1,31],[37,2,1,31],[37,6,1,31,"findNodeHandle"],[37,20,1,31],[37,23,1,31,"_interopDefault"],[37,38,1,31],[37,39,1,31,"_reactNativeWebDistExportsFindNodeHandle"],[37,79,1,31],[38,2,1,31],[38,6,1,31,"_reactNativeWebDistExportsImage"],[38,37,1,31],[38,40,1,31,"require"],[38,47,1,31],[38,48,1,31,"_dependencyMap"],[38,62,1,31],[39,2,1,31],[39,6,1,31,"Image"],[39,11,1,31],[39,14,1,31,"_interopDefault"],[39,29,1,31],[39,30,1,31,"_reactNativeWebDistExportsImage"],[39,61,1,31],[40,2,1,31],[40,6,1,31,"_reactNativeWebDistExportsStyleSheet"],[40,42,1,31],[40,45,1,31,"require"],[40,52,1,31],[40,53,1,31,"_dependencyMap"],[40,67,1,31],[41,2,1,31],[41,6,1,31,"StyleSheet"],[41,16,1,31],[41,19,1,31,"_interopDefault"],[41,34,1,31],[41,35,1,31,"_reactNativeWebDistExportsStyleSheet"],[41,71,1,31],[42,2,1,31],[42,6,1,31,"_reactNativeWebDistExportsView"],[42,36,1,31],[42,39,1,31,"require"],[42,46,1,31],[42,47,1,31,"_dependencyMap"],[42,61,1,31],[43,2,1,31],[43,6,1,31,"View"],[43,10,1,31],[43,13,1,31,"_interopDefault"],[43,28,1,31],[43,29,1,31,"_reactNativeWebDistExportsView"],[43,59,1,31],[44,2,1,31],[44,6,1,31,"_reactNativeWebDistExportsPlatform"],[44,40,1,31],[44,43,1,31,"require"],[44,50,1,31],[44,51,1,31,"_dependencyMap"],[44,65,1,31],[45,2,1,31],[45,6,1,31,"Platform"],[45,14,1,31],[45,17,1,31,"_interopDefault"],[45,32,1,31],[45,33,1,31,"_reactNativeWebDistExportsPlatform"],[45,67,1,31],[46,2,3,0],[46,6,3,0,"_AV"],[46,9,3,0],[46,12,3,0,"require"],[46,19,3,0],[46,20,3,0,"_dependencyMap"],[46,34,3,0],[47,2,4,0],[47,6,4,0,"_ExpoVideoManager"],[47,23,4,0],[47,26,4,0,"require"],[47,33,4,0],[47,34,4,0,"_dependencyMap"],[47,48,4,0],[48,2,4,0],[48,6,4,0,"ExpoVideoManager"],[48,22,4,0],[48,25,4,0,"_interopDefault"],[48,40,4,0],[48,41,4,0,"_ExpoVideoManager"],[48,58,4,0],[49,2,5,0],[49,6,5,0,"_ExponentAV"],[49,17,5,0],[49,20,5,0,"require"],[49,27,5,0],[49,28,5,0,"_dependencyMap"],[49,42,5,0],[50,2,5,0],[50,6,5,0,"ExponentAV"],[50,16,5,0],[50,19,5,0,"_interopDefault"],[50,34,5,0],[50,35,5,0,"_ExponentAV"],[50,46,5,0],[51,2,6,0],[51,6,6,0,"_ExponentVideo"],[51,20,6,0],[51,23,6,0,"require"],[51,30,6,0],[51,31,6,0,"_dependencyMap"],[51,45,6,0],[52,2,6,0],[52,6,6,0,"ExponentVideo"],[52,19,6,0],[52,22,6,0,"_interopDefault"],[52,37,6,0],[52,38,6,0,"_ExponentVideo"],[52,52,6,0],[53,2,7,0],[53,6,7,0,"_VideoTypes"],[53,17,7,0],[53,20,7,0,"require"],[53,27,7,0],[53,28,7,0,"_dependencyMap"],[53,42,7,0],[54,2,7,44],[54,6,7,44,"_reactJsxDevRuntime"],[54,25,7,44],[54,28,7,44,"require"],[54,35,7,44],[54,36,7,44,"_dependencyMap"],[54,50,7,44],[55,2,8,0],[55,8,8,6,"_STYLES"],[55,15,8,13],[55,18,8,16,"StyleSheet"],[55,28,8,26],[55,29,8,26,"default"],[55,36,8,26],[55,37,8,27,"create"],[55,43,8,33],[55,44,8,34],[56,4,9,4,"base"],[56,8,9,8],[56,10,9,10],[57,6,10,8,"overflow"],[57,14,10,16],[57,16,10,18],[57,24,10,26],[58,6,11,8,"pointerEvents"],[58,19,11,21],[58,21,11,23],[59,4,12,4],[59,5,12,5],[60,4,13,4,"poster"],[60,10,13,10],[60,12,13,12],[61,6,14,8,"position"],[61,14,14,16],[61,16,14,18],[61,26,14,28],[62,6,15,8,"left"],[62,10,15,12],[62,12,15,14],[62,13,15,15],[63,6,16,8,"top"],[63,9,16,11],[63,11,16,13],[63,12,16,14],[64,6,17,8,"right"],[64,11,17,13],[64,13,17,15],[64,14,17,16],[65,6,18,8,"bottom"],[65,12,18,14],[65,14,18,16],[65,15,18,17],[66,6,19,8,"resizeMode"],[66,16,19,18],[66,18,19,20],[67,4,20,4],[67,5,20,5],[68,4,21,4,"video"],[68,9,21,9],[68,11,21,11],[69,6,22,8,"position"],[69,14,22,16],[69,16,22,18],[69,26,22,28],[70,6,23,8,"left"],[70,10,23,12],[70,12,23,14],[70,13,23,15],[71,6,24,8,"top"],[71,9,24,11],[71,11,24,13],[71,12,24,14],[72,6,25,8,"right"],[72,11,25,13],[72,13,25,15],[72,14,25,16],[73,6,26,8,"bottom"],[73,12,26,14],[73,14,26,16],[74,4,27,4],[75,2,28,0],[75,3,28,1],[75,4,28,2],[76,2,29,0],[76,6,29,4,"didWarnAboutVideoDeprecation"],[76,34,29,32],[76,37,29,35],[76,42,29,40],[77,2,30,0],[78,2,31,0],[79,2,32,0],[79,8,32,6,"ExpoVideoManagerConstants"],[79,33,32,31],[79,36,32,34,"ExpoVideoManager"],[79,52,32,50],[79,53,32,50,"default"],[79,60,32,50],[80,2,33,0],[80,8,33,6,"ExpoVideoViewManager"],[80,28,33,26],[80,31,33,29,"ExpoVideoManager"],[80,47,33,45],[80,48,33,45,"default"],[80,55,33,45],[81,2,34,0],[81,8,34,6,"Video"],[81,13,34,11],[81,22,34,20,"React"],[81,27,34,25],[81,28,34,26,"Component"],[81,37,34,35],[81,38,34,36],[82,4,35,4,"_nativeRef"],[82,14,35,14],[82,30,35,17,"React"],[82,35,35,22],[82,36,35,23,"createRef"],[82,45,35,32],[82,46,35,33],[82,47,35,34],[83,4,36,4,"_onPlaybackStatusUpdate"],[83,27,36,27],[83,30,36,30],[83,34,36,34],[84,4,37,4,"constructor"],[84,15,37,15,"constructor"],[84,16,37,16,"props"],[84,21,37,21],[84,23,37,23],[85,6,38,8],[85,11,38,13],[85,12,38,14,"props"],[85,17,38,19],[85,18,38,20],[86,6,39,8],[86,10,39,12],[86,11,39,13,"state"],[86,16,39,18],[86,19,39,21],[87,8,40,12,"showPoster"],[87,18,40,22],[87,20,40,24],[87,21,40,25],[87,22,40,26,"props"],[87,27,40,31],[87,28,40,32,"usePoster"],[88,6,41,8],[88,7,41,9],[89,4,42,4],[90,4,43,4],[91,0,44,0],[92,0,45,0],[93,4,46,4,"setNativeProps"],[93,18,46,18,"setNativeProps"],[93,19,46,19,"nativeProps"],[93,30,46,30],[93,32,46,32],[94,6,47,8],[94,12,47,14,"nativeVideo"],[94,23,47,25],[94,26,47,28],[94,30,47,32],[94,31,47,33,"_nativeRef"],[94,41,47,43],[94,42,47,44,"current"],[94,49,47,51],[95,6,48,8],[95,10,48,12],[95,11,48,13,"nativeVideo"],[95,22,48,24],[95,24,49,12],[95,30,49,18],[95,34,49,22,"Error"],[95,39,49,27],[95,40,49,28],[95,80,49,68],[95,81,49,69],[96,6,50,8,"nativeVideo"],[96,17,50,19],[96,18,50,20,"setNativeProps"],[96,32,50,34],[96,33,50,35,"nativeProps"],[96,44,50,46],[96,45,50,47],[97,4,51,4],[98,4,52,4],[99,4,53,4,"_handleNewStatus"],[99,20,53,20],[99,23,53,24,"status"],[99,29,53,30],[99,33,53,35],[100,6,54,8],[100,10,54,12],[100,14,54,16],[100,15,54,17,"state"],[100,20,54,22],[100,21,54,23,"showPoster"],[100,31,54,33],[100,35,55,12,"status"],[100,41,55,18],[100,42,55,19,"isLoaded"],[100,50,55,27],[100,55,56,13,"status"],[100,61,56,19],[100,62,56,20,"isPlaying"],[100,71,56,29],[100,75,56,33,"status"],[100,81,56,39],[100,82,56,40,"positionMillis"],[100,96,56,54],[100,101,56,59],[100,102,56,60],[100,103,56,61],[100,105,56,63],[101,8,57,12],[101,12,57,16],[101,13,57,17,"setState"],[101,21,57,25],[101,22,57,26],[102,10,57,28,"showPoster"],[102,20,57,38],[102,22,57,40],[103,8,57,46],[103,9,57,47],[103,10,57,48],[104,6,58,8],[105,6,59,8],[105,10,59,12],[105,14,59,16],[105,15,59,17,"props"],[105,20,59,22],[105,21,59,23,"onPlaybackStatusUpdate"],[105,43,59,45],[105,45,59,47],[106,8,60,12],[106,12,60,16],[106,13,60,17,"props"],[106,18,60,22],[106,19,60,23,"onPlaybackStatusUpdate"],[106,41,60,45],[106,42,60,46,"status"],[106,48,60,52],[106,49,60,53],[107,6,61,8],[108,6,62,8],[108,10,62,12],[108,14,62,16],[108,15,62,17,"_onPlaybackStatusUpdate"],[108,38,62,40],[108,40,62,42],[109,8,63,12],[109,12,63,16],[109,13,63,17,"_onPlaybackStatusUpdate"],[109,36,63,40],[109,37,63,41,"status"],[109,43,63,47],[109,44,63,48],[110,6,64,8],[111,4,65,4],[111,5,65,5],[112,4,66,4,"_performOperationAndHandleStatusAsync"],[112,41,66,41],[112,44,66,44],[112,50,66,51,"operation"],[112,59,66,60],[112,63,66,65],[113,6,67,8],[113,12,67,14,"video"],[113,17,67,19],[113,20,67,22],[113,24,67,26],[113,25,67,27,"_nativeRef"],[113,35,67,37],[113,36,67,38,"current"],[113,43,67,45],[114,6,68,8],[114,10,68,12],[114,11,68,13,"video"],[114,16,68,18],[114,18,68,20],[115,8,69,12],[115,14,69,18],[115,18,69,22,"Error"],[115,23,69,27],[115,24,69,28],[115,98,69,102],[115,99,69,103],[116,6,70,8],[117,6,71,8],[117,10,71,12,"handle"],[117,16,71,18],[117,19,71,21],[117,23,71,25],[118,6,72,8],[118,10,72,12,"Platform"],[118,18,72,20],[118,19,72,20,"default"],[118,26,72,20],[118,27,72,21,"OS"],[118,29,72,23],[118,34,72,28],[118,39,72,33],[118,43,72,37],[118,60,72,54],[118,64,72,58],[118,68,72,62],[118,69,72,63,"_nativeRef"],[118,79,72,73],[118,80,72,74,"current"],[118,87,72,81],[118,89,72,83],[119,8,73,12,"handle"],[119,14,73,18],[119,17,73,21],[119,21,73,25],[119,22,73,26,"_nativeRef"],[119,32,73,36],[119,33,73,37,"current"],[119,40,73,44],[119,41,73,45,"getVideoElement"],[119,56,73,60],[119,57,73,61],[119,58,73,62],[120,6,74,8],[121,6,75,8],[121,10,75,12,"Platform"],[121,18,75,20],[121,19,75,20,"default"],[121,26,75,20],[121,27,75,21,"OS"],[121,29,75,23],[121,34,75,28],[121,39,75,33],[121,41,75,35],[122,8,76,12,"handle"],[122,14,76,18],[122,17,76,21],[122,21,76,21,"findNodeHandle"],[122,35,76,35],[122,36,76,35,"default"],[122,43,76,35],[122,45,76,36],[122,49,76,40],[122,50,76,41,"_nativeRef"],[122,60,76,51],[122,61,76,52,"current"],[122,68,76,59],[122,69,76,60],[123,6,77,8],[124,6,78,8],[124,10,78,12],[124,11,78,13,"handle"],[124,17,78,19],[124,19,78,21],[125,8,79,12],[125,14,79,18],[125,18,79,22,"Error"],[125,23,79,27],[125,24,79,28],[125,52,79,56],[125,53,79,57],[126,6,80,8],[127,6,81,8],[127,12,81,14,"status"],[127,18,81,20],[127,21,81,23],[127,27,81,29,"operation"],[127,36,81,38],[127,37,81,39,"handle"],[127,43,81,45],[127,44,81,46],[128,6,82,8],[128,10,82,12],[128,11,82,13,"_handleNewStatus"],[128,27,82,29],[128,28,82,30,"status"],[128,34,82,36],[128,35,82,37],[129,6,83,8],[129,13,83,15,"status"],[129,19,83,21],[130,4,84,4],[130,5,84,5],[131,4,85,4],[132,4,86,4,"_setFullscreen"],[132,18,86,18],[132,21,86,21],[132,27,86,28,"value"],[132,32,86,33],[132,36,86,38],[133,6,87,8],[133,13,87,15],[133,17,87,19],[133,18,87,20,"_performOperationAndHandleStatusAsync"],[133,55,87,57],[133,56,87,59,"tag"],[133,59,87,62],[133,63,87,67,"ExpoVideoViewManager"],[133,83,87,87],[133,84,87,88,"setFullscreen"],[133,97,87,101],[133,98,87,102,"tag"],[133,101,87,105],[133,103,87,107,"value"],[133,108,87,112],[133,109,87,113],[133,110,87,114],[134,4,88,4],[134,5,88,5],[135,4,89,4],[136,0,90,0],[137,0,91,0],[138,0,92,0],[139,0,93,0],[140,0,94,0],[141,4,95,4,"presentFullscreenPlayer"],[141,27,95,27],[141,30,95,30],[141,36,95,30,"presentFullscreenPlayer"],[141,37,95,30],[141,42,95,42],[142,6,96,8],[142,13,96,15],[142,17,96,19],[142,18,96,20,"_setFullscreen"],[142,32,96,34],[142,33,96,35],[142,37,96,39],[142,38,96,40],[143,4,97,4],[143,5,97,5],[144,4,98,4],[145,0,99,0],[146,0,100,0],[147,0,101,0],[148,0,102,0],[149,4,103,4,"dismissFullscreenPlayer"],[149,27,103,27],[149,30,103,30],[149,36,103,30,"dismissFullscreenPlayer"],[149,37,103,30],[149,42,103,42],[150,6,104,8],[150,13,104,15],[150,17,104,19],[150,18,104,20,"_setFullscreen"],[150,32,104,34],[150,33,104,35],[150,38,104,40],[150,39,104,41],[151,4,105,4],[151,5,105,5],[152,4,106,4],[153,4,107,4],[154,4,108,4],[155,0,109,0],[156,0,110,0],[157,4,111,4,"getStatusAsync"],[157,18,111,18],[157,21,111,21],[157,27,111,21,"getStatusAsync"],[157,28,111,21],[157,33,111,33],[158,6,112,8],[158,13,112,15],[158,17,112,19],[158,18,112,20,"_performOperationAndHandleStatusAsync"],[158,55,112,57],[158,56,112,59,"tag"],[158,59,112,62],[158,63,112,67,"ExponentAV"],[158,73,112,77],[158,74,112,77,"default"],[158,81,112,77],[158,82,112,78,"getStatusForVideo"],[158,99,112,95],[158,100,112,96,"tag"],[158,103,112,99],[158,104,112,100],[158,105,112,101],[159,4,113,4],[159,5,113,5],[160,4,114,4],[161,0,115,0],[162,0,116,0],[163,4,117,4,"loadAsync"],[163,13,117,13],[163,16,117,16],[163,22,117,16,"loadAsync"],[163,23,117,23,"source"],[163,29,117,29],[163,31,117,31,"initialStatus"],[163,44,117,44],[163,47,117,47],[163,48,117,48],[163,49,117,49],[163,51,117,51,"downloadFirst"],[163,64,117,64],[163,67,117,67],[163,71,117,71],[163,76,117,76],[164,6,118,8],[164,12,118,14],[165,8,118,16,"nativeSource"],[165,20,118,28],[166,8,118,30,"fullInitialStatus"],[167,6,118,48],[167,7,118,49],[167,10,118,52],[167,16,118,58],[167,20,118,58,"getNativeSourceAndFullInitialStatusForLoadAsync"],[167,23,118,105],[167,24,118,105,"getNativeSourceAndFullInitialStatusForLoadAsync"],[167,71,118,105],[167,73,118,106,"source"],[167,79,118,112],[167,81,118,114,"initialStatus"],[167,94,118,127],[167,96,118,129,"downloadFirst"],[167,109,118,142],[167,110,118,143],[168,6,119,8],[168,13,119,15],[168,17,119,19],[168,18,119,20,"_performOperationAndHandleStatusAsync"],[168,55,119,57],[168,56,119,59,"tag"],[168,59,119,62],[168,63,119,67,"ExponentAV"],[168,73,119,77],[168,74,119,77,"default"],[168,81,119,77],[168,82,119,78,"loadForVideo"],[168,94,119,90],[168,95,119,91,"tag"],[168,98,119,94],[168,100,119,96,"nativeSource"],[168,112,119,108],[168,114,119,110,"fullInitialStatus"],[168,131,119,127],[168,132,119,128],[168,133,119,129],[169,4,120,4],[169,5,120,5],[170,4,121,4],[171,0,122,0],[172,0,123,0],[173,0,124,0],[174,4,125,4,"unloadAsync"],[174,15,125,15],[174,18,125,18],[174,24,125,18,"unloadAsync"],[174,25,125,18],[174,30,125,30],[175,6,126,8],[175,13,126,15],[175,17,126,19],[175,18,126,20,"_performOperationAndHandleStatusAsync"],[175,55,126,57],[175,56,126,59,"tag"],[175,59,126,62],[175,63,126,67,"ExponentAV"],[175,73,126,77],[175,74,126,77,"default"],[175,81,126,77],[175,82,126,78,"unloadForVideo"],[175,96,126,92],[175,97,126,93,"tag"],[175,100,126,96],[175,101,126,97],[175,102,126,98],[176,4,127,4],[176,5,127,5],[177,4,128,4,"componentWillUnmount"],[177,24,128,24,"componentWillUnmount"],[177,25,128,24],[177,27,128,27],[178,6,129,8],[179,6,130,8],[179,10,130,12],[179,11,130,13,"unloadAsync"],[179,22,130,24],[179,23,130,25],[179,24,130,26],[179,25,130,27,"catch"],[179,30,130,32],[179,31,130,33],[179,37,130,39],[180,8,131,12],[181,8,132,12],[182,8,133,12],[183,8,134,12],[184,6,134,12],[184,7,135,9],[184,8,135,10],[185,4,136,4],[186,4,137,4],[187,0,138,0],[188,0,139,0],[189,0,140,0],[190,4,141,4,"setStatusAsync"],[190,18,141,18],[190,21,141,21],[190,27,141,28,"status"],[190,33,141,34],[190,37,141,39],[191,6,142,8],[191,10,142,8,"assertStatusValuesInBounds"],[191,13,142,34],[191,14,142,34,"assertStatusValuesInBounds"],[191,40,142,34],[191,42,142,35,"status"],[191,48,142,41],[191,49,142,42],[192,6,143,8],[192,13,143,15],[192,17,143,19],[192,18,143,20,"_performOperationAndHandleStatusAsync"],[192,55,143,57],[192,56,143,59,"tag"],[192,59,143,62],[192,63,143,67,"ExponentAV"],[192,73,143,77],[192,74,143,77,"default"],[192,81,143,77],[192,82,143,78,"setStatusForVideo"],[192,99,143,95],[192,100,143,96,"tag"],[192,103,143,99],[192,105,143,101,"status"],[192,111,143,107],[192,112,143,108],[192,113,143,109],[193,4,144,4],[193,5,144,5],[194,4,145,4],[195,0,146,0],[196,0,147,0],[197,4,148,4,"replayAsync"],[197,15,148,15],[197,18,148,18],[197,24,148,18,"replayAsync"],[197,25,148,25,"status"],[197,31,148,31],[197,34,148,34],[197,35,148,35],[197,36,148,36],[197,41,148,41],[198,6,149,8],[198,10,149,12,"status"],[198,16,149,18],[198,17,149,19,"positionMillis"],[198,31,149,33],[198,35,149,37,"status"],[198,41,149,43],[198,42,149,44,"positionMillis"],[198,56,149,58],[198,61,149,63],[198,62,149,64],[198,64,149,66],[199,8,150,12],[199,14,150,18],[199,18,150,22,"Error"],[199,23,150,27],[199,24,150,28],[199,70,150,74],[199,71,150,75],[200,6,151,8],[201,6,152,8],[201,13,152,15],[201,17,152,19],[201,18,152,20,"_performOperationAndHandleStatusAsync"],[201,55,152,57],[201,56,152,59,"tag"],[201,59,152,62],[201,63,152,67,"ExponentAV"],[201,73,152,77],[201,74,152,77,"default"],[201,81,152,77],[201,82,152,78,"replayVideo"],[201,93,152,89],[201,94,152,90,"tag"],[201,97,152,93],[201,99,152,93,"Object"],[201,105,152,93],[201,106,152,93,"assign"],[201,112,152,93],[201,117,153,15,"status"],[201,123,153,21],[202,8,154,12,"positionMillis"],[202,22,154,26],[202,24,154,28],[202,25,154,29],[203,8,155,12,"shouldPlay"],[203,18,155,22],[203,20,155,24],[204,6,155,28],[204,8,156,9],[204,9,156,10],[204,10,156,11],[205,4,157,4],[205,5,157,5],[206,4,158,4],[207,0,159,0],[208,0,160,0],[209,0,161,0],[210,0,162,0],[211,0,163,0],[212,0,164,0],[213,0,165,0],[214,0,166,0],[215,0,167,0],[216,0,168,0],[217,0,169,0],[218,4,170,4,"setOnPlaybackStatusUpdate"],[218,29,170,29,"setOnPlaybackStatusUpdate"],[218,30,170,30,"onPlaybackStatusUpdate"],[218,52,170,52],[218,54,170,54],[219,6,171,8],[219,10,171,12],[219,11,171,13,"_onPlaybackStatusUpdate"],[219,34,171,36],[219,37,171,39,"onPlaybackStatusUpdate"],[219,59,171,61],[220,6,172,8],[220,10,172,12],[220,11,172,13,"getStatusAsync"],[220,25,172,27],[220,26,172,28],[220,27,172,29],[221,4,173,4],[222,4,174,4],[224,4,185,4],[225,4,186,4,"_nativeOnPlaybackStatusUpdate"],[225,33,186,33],[225,36,186,37,"event"],[225,41,186,42],[225,45,186,47],[226,6,187,8],[226,10,187,12],[226,11,187,13,"_handleNewStatus"],[226,27,187,29],[226,28,187,30,"event"],[226,33,187,35],[226,34,187,36,"nativeEvent"],[226,45,187,47],[226,46,187,48],[227,4,188,4],[227,5,188,5],[228,4,189,4],[229,4,190,4,"_nativeOnLoadStart"],[229,22,190,22],[229,25,190,25,"_nativeOnLoadStart"],[229,26,190,25],[229,31,190,31],[230,6,191,8],[230,10,191,12],[230,14,191,16],[230,15,191,17,"props"],[230,20,191,22],[230,21,191,23,"onLoadStart"],[230,32,191,34],[230,34,191,36],[231,8,192,12],[231,12,192,16],[231,13,192,17,"props"],[231,18,192,22],[231,19,192,23,"onLoadStart"],[231,30,192,34],[231,31,192,35],[231,32,192,36],[232,6,193,8],[233,4,194,4],[233,5,194,5],[234,4,195,4,"_nativeOnLoad"],[234,17,195,17],[234,20,195,21,"event"],[234,25,195,26],[234,29,195,31],[235,6,196,8],[235,10,196,12],[235,14,196,16],[235,15,196,17,"props"],[235,20,196,22],[235,21,196,23,"onLoad"],[235,27,196,29],[235,29,196,31],[236,8,197,12],[236,12,197,16],[236,13,197,17,"props"],[236,18,197,22],[236,19,197,23,"onLoad"],[236,25,197,29],[236,26,197,30,"event"],[236,31,197,35],[236,32,197,36,"nativeEvent"],[236,43,197,47],[236,44,197,48],[237,6,198,8],[238,6,199,8],[238,10,199,12],[238,11,199,13,"_handleNewStatus"],[238,27,199,29],[238,28,199,30,"event"],[238,33,199,35],[238,34,199,36,"nativeEvent"],[238,45,199,47],[238,46,199,48],[239,4,200,4],[239,5,200,5],[240,4,201,4,"_nativeOnError"],[240,18,201,18],[240,21,201,22,"event"],[240,26,201,27],[240,30,201,32],[241,6,202,8],[241,12,202,14,"error"],[241,17,202,19],[241,20,202,22,"event"],[241,25,202,27],[241,26,202,28,"nativeEvent"],[241,37,202,39],[241,38,202,40,"error"],[241,43,202,45],[242,6,203,8],[242,10,203,12],[242,14,203,16],[242,15,203,17,"props"],[242,20,203,22],[242,21,203,23,"onError"],[242,28,203,30],[242,30,203,32],[243,8,204,12],[243,12,204,16],[243,13,204,17,"props"],[243,18,204,22],[243,19,204,23,"onError"],[243,26,204,30],[243,27,204,31,"error"],[243,32,204,36],[243,33,204,37],[244,6,205,8],[245,6,206,8],[245,10,206,12],[245,11,206,13,"_handleNewStatus"],[245,27,206,29],[245,28,206,30],[245,32,206,30,"getUnloadedStatus"],[245,35,206,47],[245,36,206,47,"getUnloadedStatus"],[245,53,206,47],[245,55,206,48,"error"],[245,60,206,53],[245,61,206,54],[245,62,206,55],[246,4,207,4],[246,5,207,5],[247,4,208,4,"_nativeOnReadyForDisplay"],[247,28,208,28],[247,31,208,32,"event"],[247,36,208,37],[247,40,208,42],[248,6,209,8],[248,10,209,12],[248,14,209,16],[248,15,209,17,"props"],[248,20,209,22],[248,21,209,23,"onReadyForDisplay"],[248,38,209,40],[248,40,209,42],[249,8,210,12],[249,12,210,16],[249,13,210,17,"props"],[249,18,210,22],[249,19,210,23,"onReadyForDisplay"],[249,36,210,40],[249,37,210,41,"event"],[249,42,210,46],[249,43,210,47,"nativeEvent"],[249,54,210,58],[249,55,210,59],[250,6,211,8],[251,4,212,4],[251,5,212,5],[252,4,213,4,"_nativeOnFullscreenUpdate"],[252,29,213,29],[252,32,213,33,"event"],[252,37,213,38],[252,41,213,43],[253,6,214,8],[253,10,214,12],[253,14,214,16],[253,15,214,17,"props"],[253,20,214,22],[253,21,214,23,"onFullscreenUpdate"],[253,39,214,41],[253,41,214,43],[254,8,215,12],[254,12,215,16],[254,13,215,17,"props"],[254,18,215,22],[254,19,215,23,"onFullscreenUpdate"],[254,37,215,41],[254,38,215,42,"event"],[254,43,215,47],[254,44,215,48,"nativeEvent"],[254,55,215,59],[254,56,215,60],[255,6,216,8],[256,4,217,4],[256,5,217,5],[257,4,218,4,"_renderPoster"],[257,17,218,17],[257,20,218,20,"_renderPoster"],[257,21,218,20],[257,26,218,26],[258,6,219,8],[258,12,219,14,"PosterComponent"],[258,27,219,29],[258,30,219,32],[258,34,219,36],[258,35,219,37,"props"],[258,40,219,42],[258,41,219,43,"PosterComponent"],[258,56,219,58],[258,60,219,62,"Image"],[258,65,219,67],[258,66,219,67,"default"],[258,73,219,67],[259,6,220,8],[259,13,220,15],[259,17,220,19],[259,18,220,20,"props"],[259,23,220,25],[259,24,220,26,"usePoster"],[259,33,220,35],[259,37,220,39],[259,41,220,43],[259,42,220,44,"state"],[259,47,220,49],[259,48,220,50,"showPoster"],[259,58,220,60],[259,74,220,64],[259,78,220,64,"_reactJsxDevRuntime"],[259,97,220,64],[259,98,220,64,"jsxDEV"],[259,104,220,64],[259,106,220,65,"PosterComponent"],[259,121,220,80],[260,8,220,81,"style"],[260,13,220,86],[260,15,220,88],[260,16,220,89,"_STYLES"],[260,23,220,96],[260,24,220,97,"poster"],[260,30,220,103],[260,32,220,105],[260,36,220,109],[260,37,220,110,"props"],[260,42,220,115],[260,43,220,116,"posterStyle"],[260,54,220,127],[260,55,220,129],[261,8,220,130,"source"],[261,14,220,136],[261,16,220,138],[261,20,220,142],[261,21,220,143,"props"],[261,26,220,148],[261,27,220,149,"posterSource"],[262,6,220,162],[263,8,220,162,"fileName"],[263,16,220,162],[263,18,220,162,"_jsxFileName"],[263,30,220,162],[264,8,220,162,"lineNumber"],[264,18,220,162],[265,8,220,162,"columnNumber"],[265,20,220,162],[266,6,220,162],[266,13,220,163],[266,14,220,164],[266,17,220,168],[266,21,220,172],[267,4,221,4],[267,5,221,5],[268,4,222,4,"render"],[268,10,222,10,"render"],[268,11,222,10],[268,13,222,13],[269,6,223,8,"maybeWarnAboutVideoDeprecation"],[269,36,223,38],[269,37,223,39],[269,38,223,40],[270,6,224,8],[270,12,224,14,"source"],[270,18,224,20],[270,21,224,23],[270,25,224,23,"getNativeSourceFromSource"],[270,28,224,48],[270,29,224,48,"getNativeSourceFromSource"],[270,54,224,48],[270,56,224,49],[270,60,224,53],[270,61,224,54,"props"],[270,66,224,59],[270,67,224,60,"source"],[270,73,224,66],[270,74,224,67],[270,78,224,71,"undefined"],[270,87,224,80],[271,6,225,8],[271,10,225,12,"nativeResizeMode"],[271,26,225,28],[271,29,225,31,"ExpoVideoManagerConstants"],[271,54,225,56],[271,55,225,57,"ScaleNone"],[271,64,225,66],[272,6,226,8],[272,10,226,12],[272,14,226,16],[272,15,226,17,"props"],[272,20,226,22],[272,21,226,23,"resizeMode"],[272,31,226,33],[272,33,226,35],[273,8,227,12],[273,14,227,18,"resizeMode"],[273,24,227,28],[273,27,227,31],[273,31,227,35],[273,32,227,36,"props"],[273,37,227,41],[273,38,227,42,"resizeMode"],[273,48,227,52],[274,8,228,12],[274,12,228,16,"resizeMode"],[274,22,228,26],[274,27,228,31,"ResizeMode"],[274,38,228,41],[274,39,228,41,"ResizeMode"],[274,49,228,41],[274,50,228,42,"STRETCH"],[274,57,228,49],[274,59,228,51],[275,10,229,16,"nativeResizeMode"],[275,26,229,32],[275,29,229,35,"ExpoVideoManagerConstants"],[275,54,229,60],[275,55,229,61,"ScaleToFill"],[275,66,229,72],[276,8,230,12],[276,9,230,13],[276,15,231,17],[276,19,231,21,"resizeMode"],[276,29,231,31],[276,34,231,36,"ResizeMode"],[276,45,231,46],[276,46,231,46,"ResizeMode"],[276,56,231,46],[276,57,231,47,"CONTAIN"],[276,64,231,54],[276,66,231,56],[277,10,232,16,"nativeResizeMode"],[277,26,232,32],[277,29,232,35,"ExpoVideoManagerConstants"],[277,54,232,60],[277,55,232,61,"ScaleAspectFit"],[277,69,232,75],[278,8,233,12],[278,9,233,13],[278,15,234,17],[278,19,234,21,"resizeMode"],[278,29,234,31],[278,34,234,36,"ResizeMode"],[278,45,234,46],[278,46,234,46,"ResizeMode"],[278,56,234,46],[278,57,234,47,"COVER"],[278,62,234,52],[278,64,234,54],[279,10,235,16,"nativeResizeMode"],[279,26,235,32],[279,29,235,35,"ExpoVideoManagerConstants"],[279,54,235,60],[279,55,235,61,"ScaleAspectFill"],[279,70,235,76],[280,8,236,12],[281,6,237,8],[282,6,238,8],[283,6,239,8],[283,12,239,14,"status"],[283,18,239,20],[283,21,239,20,"Object"],[283,27,239,20],[283,28,239,20,"assign"],[283,34,239,20],[283,39,239,28],[283,43,239,32],[283,44,239,33,"props"],[283,49,239,38],[283,50,239,39,"status"],[283,56,239,45],[283,57,239,47],[284,6,240,8],[284,7,241,12],[284,37,241,42],[284,39,242,12],[284,55,242,28],[284,57,243,12],[284,69,243,24],[284,71,244,12],[284,77,244,18],[284,79,245,12],[284,99,245,32],[284,101,246,12],[284,109,246,20],[284,111,247,12],[284,120,247,21],[284,122,248,12],[284,133,248,23],[284,134,249,9],[284,135,249,10,"forEach"],[284,142,249,17],[284,143,249,19,"prop"],[284,147,249,23],[284,151,249,28],[285,8,250,12],[285,12,250,16,"prop"],[285,16,250,20],[285,20,250,24],[285,24,250,28],[285,25,250,29,"props"],[285,30,250,34],[285,32,250,36],[286,10,251,16,"status"],[286,16,251,22],[286,17,251,23,"prop"],[286,21,251,27],[286,22,251,28],[286,25,251,31],[286,29,251,35],[286,30,251,36,"props"],[286,35,251,41],[286,36,251,42,"prop"],[286,40,251,46],[286,41,251,47],[287,8,252,12],[288,6,253,8],[288,7,253,9],[288,8,253,10],[289,6,254,8],[290,6,255,8],[290,12,255,14,"nativeProps"],[290,23,255,25],[290,26,255,25,"Object"],[290,32,255,25],[290,33,255,25,"assign"],[290,39,255,25],[290,44,256,15,"omit"],[290,48,256,19],[290,49,256,20],[290,53,256,24],[290,54,256,25,"props"],[290,59,256,30],[290,61,256,32],[290,62,257,16],[290,70,257,24],[290,72,258,16],[290,96,258,40],[290,98,259,16],[290,109,259,27],[290,111,260,16],[290,125,260,30],[290,127,261,16],[290,140,261,29],[290,142,262,16],[290,145,262,19,"Object"],[290,151,262,25],[290,152,262,26,"keys"],[290,156,262,30],[290,157,262,31,"status"],[290,163,262,37],[290,164,262,38],[290,165,263,13],[290,166,263,14],[291,8,264,12,"style"],[291,13,264,17],[291,15,264,19],[291,16,264,20,"_STYLES"],[291,23,264,27],[291,24,264,28,"base"],[291,28,264,32],[291,30,264,34],[291,34,264,38],[291,35,264,39,"props"],[291,40,264,44],[291,41,264,45,"style"],[291,46,264,50],[291,47,264,51],[292,8,265,12,"videoStyle"],[292,18,265,22],[292,20,265,24],[292,21,265,25,"_STYLES"],[292,28,265,32],[292,29,265,33,"video"],[292,34,265,38],[292,36,265,40],[292,40,265,44],[292,41,265,45,"props"],[292,46,265,50],[292,47,265,51,"videoStyle"],[292,57,265,61],[292,58,265,62],[293,8,266,12,"source"],[293,14,266,18],[294,8,267,12,"resizeMode"],[294,18,267,22],[294,20,267,24,"nativeResizeMode"],[294,36,267,40],[295,8,268,12,"status"],[295,14,268,18],[296,8,269,12,"onStatusUpdate"],[296,22,269,26],[296,24,269,28],[296,28,269,32],[296,29,269,33,"_nativeOnPlaybackStatusUpdate"],[296,58,269,62],[297,8,270,12,"onLoadStart"],[297,19,270,23],[297,21,270,25],[297,25,270,29],[297,26,270,30,"_nativeOnLoadStart"],[297,44,270,48],[298,8,271,12,"onLoad"],[298,14,271,18],[298,16,271,20],[298,20,271,24],[298,21,271,25,"_nativeOnLoad"],[298,34,271,38],[299,8,272,12,"onError"],[299,15,272,19],[299,17,272,21],[299,21,272,25],[299,22,272,26,"_nativeOnError"],[299,36,272,40],[300,8,273,12,"onReadyForDisplay"],[300,25,273,29],[300,27,273,31],[300,31,273,35],[300,32,273,36,"_nativeOnReadyForDisplay"],[300,56,273,60],[301,8,274,12,"onFullscreenUpdate"],[301,26,274,30],[301,28,274,32],[301,32,274,36],[301,33,274,37,"_nativeOnFullscreenUpdate"],[302,6,274,62],[302,8,275,9],[303,6,276,8],[303,26,276,16],[303,30,276,16,"_reactJsxDevRuntime"],[303,49,276,16],[303,50,276,16,"jsxDEV"],[303,56,276,16],[303,58,276,17,"View"],[303,62,276,21],[303,63,276,21,"default"],[303,70,276,21],[304,8,276,22,"style"],[304,13,276,27],[304,15,276,29,"nativeProps"],[304,26,276,40],[304,27,276,41,"style"],[304,32,276,47],[305,8,276,47,"children"],[305,16,276,47],[305,32,277,8],[305,36,277,8,"_reactJsxDevRuntime"],[305,55,277,8],[305,56,277,8,"jsxDEV"],[305,62,277,8],[305,64,277,9,"ExponentVideo"],[305,77,277,22],[305,78,277,22,"default"],[305,85,277,22],[305,87,277,22,"Object"],[305,93,277,22],[305,94,277,22,"assign"],[305,100,277,22],[306,10,277,23,"ref"],[306,13,277,26],[306,15,277,28],[306,19,277,32],[306,20,277,33,"_nativeRef"],[307,8,277,44],[307,11,277,49,"nativeProps"],[307,22,277,60],[308,10,277,62,"style"],[308,15,277,67],[308,17,277,69,"nativeProps"],[308,28,277,80],[308,29,277,81,"videoStyle"],[309,8,277,92],[310,10,277,92,"fileName"],[310,18,277,92],[310,20,277,92,"_jsxFileName"],[310,32,277,92],[311,10,277,92,"lineNumber"],[311,20,277,92],[312,10,277,92,"columnNumber"],[312,22,277,92],[313,8,277,92],[313,15,277,93],[313,16,277,94],[313,18,278,9],[313,22,278,13],[313,23,278,14,"_renderPoster"],[313,36,278,27],[313,37,278,28],[313,38,278,29],[314,6,278,29],[315,8,278,29,"fileName"],[315,16,278,29],[315,18,278,29,"_jsxFileName"],[315,30,278,29],[316,8,278,29,"lineNumber"],[316,18,278,29],[317,8,278,29,"columnNumber"],[317,20,278,29],[318,6,278,29],[318,13,279,12],[318,14,279,13],[319,4,280,4],[320,2,281,0],[321,2,282,0],[321,11,282,9,"omit"],[321,15,282,13,"omit"],[321,16,282,14,"props"],[321,21,282,19],[321,23,282,21,"propNames"],[321,32,282,30],[321,34,282,32],[322,4,283,4],[322,10,283,10,"copied"],[322,16,283,16],[322,19,283,16,"Object"],[322,25,283,16],[322,26,283,16,"assign"],[322,32,283,16],[322,37,283,24,"props"],[322,42,283,29],[322,43,283,31],[323,4,284,4],[323,9,284,9],[323,15,284,15,"propName"],[323,23,284,23],[323,27,284,27,"propNames"],[323,36,284,36],[323,38,284,38],[324,6,285,8],[324,13,285,15,"copied"],[324,19,285,21],[324,20,285,22,"propName"],[324,28,285,30],[324,29,285,31],[325,4,286,4],[326,4,287,4],[326,11,287,11,"copied"],[326,17,287,17],[327,2,288,0],[328,2,289,0],[328,11,289,9,"maybeWarnAboutVideoDeprecation"],[328,41,289,39,"maybeWarnAboutVideoDeprecation"],[328,42,289,39],[328,44,289,42],[329,4,290,4],[329,8,290,8,"__DEV__"],[329,15,290,15],[329,19,290,19],[329,20,290,20,"didWarnAboutVideoDeprecation"],[329,48,290,48],[329,50,290,50],[330,6,291,8,"didWarnAboutVideoDeprecation"],[330,34,291,36],[330,37,291,39],[330,41,291,43],[331,6,292,8,"console"],[331,13,292,15],[331,14,292,16,"log"],[331,17,292,19],[331,18,292,20],[331,113,292,115],[331,116,293,12],[331,218,293,114],[331,219,293,115],[332,4,294,4],[333,2,295,0],[334,2,296,0,"Object"],[334,8,296,6],[334,9,296,7,"assign"],[334,15,296,13],[334,16,296,14,"Video"],[334,21,296,19],[334,22,296,20,"prototype"],[334,31,296,29],[334,33,296,31,"PlaybackMixin"],[334,36,296,44],[334,37,296,44,"PlaybackMixin"],[334,50,296,44],[334,51,296,45],[335,2,297,0],[336,2,298,0],[336,6,298,0,"_default"],[336,14,298,0],[336,17,298,15,"Video"],[336,22,298,20],[337,0,298,21],[337,3]],"functionMap":{"names":["<global>","Video","constructor","setNativeProps","_handleNewStatus","_performOperationAndHandleStatusAsync","_setFullscreen","_performOperationAndHandleStatusAsync$argument_0","presentFullscreenPlayer","dismissFullscreenPlayer","getStatusAsync","loadAsync","unloadAsync","componentWillUnmount","unloadAsync._catch$argument_0","setStatusAsync","replayAsync","setOnPlaybackStatusUpdate","_nativeOnPlaybackStatusUpdate","_nativeOnLoadStart","_nativeOnLoad","_nativeOnError","_nativeOnReadyForDisplay","_nativeOnFullscreenUpdate","_renderPoster","render","forEach$argument_0","omit","maybeWarnAboutVideoDeprecation"],"mappings":"AAA;ACiC;ICG;KDK;IEI;KFK;uBGE;KHY;4CIC;KJkB;qBKE;0DCC,uDD;KLC;8BOO;KPE;8BQM;KRE;qBSM;0DHC,0CG;KTC;gBUI;0DJE,sEI;KVC;kBWK;0DLC,uCK;KXC;IYC;iCCE;SDK;KZC;qBcK;0DRE,kDQ;KdC;kBeI;0DTI;USI;KfC;IgBa;KhBG;oCiBa;KjBE;yBkBE;KlBI;oBmBC;KnBK;qBoBC;KpBM;+BqBC;KrBI;gCsBC;KtBI;oBuBC;KvBG;IwBC;kBC2B;SDI;KxB2B;CDC;A2BC;C3BM;A4BC;C5BM"},"hasCjsExports":false},"type":"js/module"}]}